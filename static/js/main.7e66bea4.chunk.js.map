{"version":3,"sources":["lib/bid.ts","models/playerModel.ts","lib/util.ts","models/gameModel.ts","components/ContractSelector.tsx","models/contractModel.ts","components/ContractsTable.tsx","components/VariantSelector.tsx","components/SilentSwitch.tsx","components/MultiplierSelector.tsx","components/GameProperties.tsx","models/playerListModel.ts","components/Confirm.tsx","components/Players.tsx","lib/gameScoreList.ts","lib/error.ts","services/localStorage.ts","components/TarockSheet.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["BID_TYPE","SMALLEST_VARIANT","CARD_SHAPE_VARIANT","BID_GROUPS","PARTY_LIKE","weight","ULTI_LIKE","CENTRUM_LIKE","CATCHES","OTHERS","PLAYER_TYPE","SMALLEST_VARIANTS","PAGAT","EAGLE","CARD_SHAPE_VARIANTS","CLUB","DIAMOND","HEART","SPADE","BIDS","PARTY","score","party","group","TRULL","silent","FOUR_KING","CATCH_THE_MAYOR","CATCH_THE_PAGAT","ULTI","variants","notWinIfSilent","UHU","DOUBLE_PARTY","VOLAT","PHEASANT","PHEASANT_IN_2ND","EIGHT_TAROCK","winByDefault","denyContra","NINE_TAROCK","FURRY","CENTRUM","SMALL_BIRD","LARGE_BIRD","KING_ULTI","KING_UHU","CSUZIMA","KLOPICZKY","getBid","type","canSilent","bid","getBidScore","partyScore","makeFirstLetterCapital","word","length","split","first","rest","toUpperCase","join","toLowerCase","upperCaseToWords","upperCased","map","PARTY_SCORE_TYPE","create","id","v4uuid","name","baseScore","sessionScore","gameScore","update","updates","player","getOppositeType","playerType","DECLARER","OPPONENT","getTypeColor","Map","get","ContractSelector","bidsByGroup","onAddContract","useState","silentAndWin","setSilentAndWin","Grid","container","spacing","alignItems","sortBy","g","Object","keys","item","variant","display","color","Box","component","mr","Button","onClick","bidType","shouldWinWithSilent","taker","playerModel","isSilent","bidVariant","isWonByTaker","handleClick","size","disabled","FormControlLabel","control","Switch","checked","onChange","prev","label","validate","contract","contra","Error","includes","Math","log2","bidBaseScore","flow","calculateContractScore","ACTION_TYPE","isPartyLike","partyScoreType","TOOK_THREE","TOOK_TWO","TOOK_ONE","SOLO","PARTY_SCORE","props","contracts","partyBaseScore","called_tarock","playerTypeScores","updateGameWithPlayerTypeScores","game","scores","calculatePlayerTypeScores","undefined","contractModel","addContract","updatedContract","removeAllContracts","reduce","addScore","prevScore","another","VariantSelector","selected","render","onClose","open","setOpen","handleClose","Dialog","DialogContent","RadioGroup","event","target","value","Radio","DialogActions","SilentSwitch","FormGroup","MultiplierSelector","handleChange","IconButton","title","VariantSelectorModal","handleOpen","columns","field","headerName","valueGetter","onAction","CHANGE","newTaker","Checkbox","indeterminate","nextValue","_","DELETE","isContractField","ContractsTable","onDelete","handleAction","index","actionType","TableContainer","Table","TableHead","TableRow","column","TableCell","TableBody","rowIndex","cellIndex","curry","calledTarockOptions","XX","XIX","XVIII","XVII","XVI","XV","XIV","XIII","XII","partyScoreOptions","gameModel","GameProperties","alignContent","FormControl","InputLabel","Select","labelId","option","MenuItem","FormLabel","row","countByType","players","declarersNumber","opponentsNumber","clearType","clearSessionScore","filterByInGame","filter","mapToObjectById","playerList","playerListObject","Confrim","text","onConfirm","theme","useTheme","fullScreen","useMediaQuery","breakpoints","down","DialogTitle","DialogContentText","autoFocus","PlayerAvatar","Avatar","slice","EditablePlayerItem","onRemove","prop","Card","CardContent","direction","xs","TextField","Number","PlayerItem","playing","hasGameScore","gameScoreText","isWinner","CardHeader","avatar","subheader","fontSize","CardActions","Players","onPlayerListChange","onSaveScores","saveDisabled","onResetPlayers","onResetScores","edit","setEdit","handleRemove","updated","getCurrentScoreForPlayers","playerListModel","numberOfDeclarers","numberOfOpponents","opponentsGameScore","declarersGameScore","getScore","declarersScore","opponentsScore","isReadyForSave","numbers","playerNumberValid","isEqual","gameScoreValid","defined","Boolean","scoreSumAssigner","sumPlayerScores","playerListObjects","assignWith","ApplicationError","message","userMessage","PREFIX","NotSupportedStorageError","WrongDataStorageError","UnsuccessfulSavingStorageError","allBidsByGroup","bids","b","groupBy","getAllBidsByGorup","storage","prefix","isSupported","window","localStorage","_checkSupport","_instance","_serialize","data","JSON","stringify","error","_unserialize","str","parse","getStorageKey","key","setItem","remove","removeItem","read","serialized","getItem","delete","storageInitializer","TarockSheet","setGame","setPlayers","gameScoreList","setGameScoreList","useEffect","console","updatePlayersState","updateGameScoreListState","sessionScores","assignScoresToPlayers","partyScoreTypeSelected","updatedGameScoreList","concat","prevGame","partyScoreTypeChanged","fromKlopiczkyToPartyLikeChanged","fromPartyLikeToKlopiczkyChanged","fromNullToKlopiczkyChanged","partyLikeAndEmptyContracts","Confirm","i","useAppStyle","makeStyles","padding","App","classes","AppBar","position","mt","ml","Container","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7e66bea4.chunk.js","sourcesContent":["import groupBy from \"lodash/fp/groupBy\";\nimport sortBy from \"lodash/fp/sortBy\";\n\nexport interface Bid extends BidData {\n  type: BID_TYPE;\n}\n\ninterface BidData {\n  score: number | ((party: number) => number);\n  group?: BidGroupType;\n  variants?: BidVariant[];\n  silent?: boolean;\n  winByDefault?: boolean;\n  notWinIfSilent?: boolean;\n  denyContra?: boolean;\n}\n\nexport enum BID_TYPE {\n  PARTY = \"PARTY\",\n  TRULL = \"TRULL\",\n  FOUR_KING = \"FOUR_KING\",\n  CATCH_THE_MAYOR = \"CATCH_THE_MAYOR\",\n  CATCH_THE_PAGAT = \"CATCH_THE_PAGAT\",\n  ULTI = \"ULTI\",\n  UHU = \"UHU\",\n  DOUBLE_PARTY = \"DOUBLE_PARTY\",\n  VOLAT = \"VOLAT\",\n  PHEASANT = \"PHEASANT\",\n  PHEASANT_IN_2ND = \"PHEASANT_IN_2ND\",\n  EIGHT_TAROCK = \"EIGHT_TAROCK\",\n  NINE_TAROCK = \"NINE_TAROCK\",\n  FURRY = \"FURRY\",\n  CENTRUM = \"CENTRUM\",\n  SMALL_BIRD = \"SMALL_BIRD\",\n  LARGE_BIRD = \"LARGE_BIRD\",\n  CSUZIMA = \"CSUZIMA\",\n  KING_ULTI = \"KING_ULTI\",\n  KING_UHU = \"KING_UHU\",\n  KLOPICZKY = \"KLOPICZKY\",\n}\n\nexport type BidGroupType =\n  | \"PARTY_LIKE\"\n  | \"ULTI_LIKE\"\n  | \"CENTRUM_LIKE\"\n  | \"CATCHES\"\n  | \"OTHERS\";\nconst BID_GROUPS: { [K in BidGroupType]: { weight: number } } = {\n  PARTY_LIKE: { weight: 10 },\n  ULTI_LIKE: { weight: 20 },\n  CENTRUM_LIKE: { weight: 30 },\n  CATCHES: { weight: 40 },\n  OTHERS: { weight: 50 },\n};\nexport const bidGroupNamesByWeight = () =>\n  sortBy((g) => BID_GROUPS[g as BidGroupType].weight, Object.keys(BID_GROUPS));\n\nexport enum SMALLEST_VARIANT {\n  PAGAT = \"PAGAT\",\n  EAGLE = \"EAGLE\",\n}\n\nexport enum CARD_SHAPE_VARIANT {\n  HEART = \"HEART\",\n  SPADE = \"SPADE\",\n  CLUB = \"CLUB\",\n  DIAMOND = \"DIAMOND\",\n}\n\nconst SMALLEST_VARIANTS = [SMALLEST_VARIANT.PAGAT, SMALLEST_VARIANT.EAGLE];\nconst CARD_SHAPE_VARIANTS = [\n  CARD_SHAPE_VARIANT.CLUB,\n  CARD_SHAPE_VARIANT.DIAMOND,\n  CARD_SHAPE_VARIANT.HEART,\n  CARD_SHAPE_VARIANT.SPADE,\n];\n\nexport type BidVariant = SMALLEST_VARIANT | CARD_SHAPE_VARIANT;\n\nconst BIDS: { [key in BID_TYPE]: BidData } = {\n  [BID_TYPE.PARTY]: { score: (party: number) => party, group: \"PARTY_LIKE\" },\n  [BID_TYPE.TRULL]: { score: 2, silent: true },\n  [BID_TYPE.FOUR_KING]: { score: 2, silent: true },\n  [BID_TYPE.CATCH_THE_MAYOR]: { score: 42, silent: true, group: \"CATCHES\" },\n  [BID_TYPE.CATCH_THE_PAGAT]: { score: 4, group: \"CATCHES\" },\n  [BID_TYPE.ULTI]: {\n    score: 10,\n    variants: [...SMALLEST_VARIANTS],\n    silent: true,\n    group: \"ULTI_LIKE\",\n    notWinIfSilent: true,\n  },\n  [BID_TYPE.UHU]: {\n    score: 15,\n    variants: [...SMALLEST_VARIANTS],\n    group: \"ULTI_LIKE\",\n  },\n  [BID_TYPE.DOUBLE_PARTY]: {\n    score: (party: number) => party * 4,\n    silent: true,\n    group: \"PARTY_LIKE\",\n  },\n  [BID_TYPE.VOLAT]: {\n    score: (party: number) => party * 6,\n    silent: true,\n    group: \"PARTY_LIKE\",\n  },\n  [BID_TYPE.PHEASANT]: {\n    score: 20,\n    variants: [...SMALLEST_VARIANTS],\n    group: \"ULTI_LIKE\",\n  },\n  [BID_TYPE.PHEASANT_IN_2ND]: {\n    score: 20,\n    variants: [...SMALLEST_VARIANTS],\n    group: \"ULTI_LIKE\",\n  },\n  [BID_TYPE.EIGHT_TAROCK]: { score: 1, winByDefault: true, denyContra: true },\n  [BID_TYPE.NINE_TAROCK]: { score: 2, winByDefault: true, denyContra: true },\n  [BID_TYPE.FURRY]: {\n    score: 25,\n    variants: [...CARD_SHAPE_VARIANTS],\n    group: \"ULTI_LIKE\",\n  },\n  [BID_TYPE.CENTRUM]: { score: 10, group: \"CENTRUM_LIKE\" },\n  [BID_TYPE.SMALL_BIRD]: { score: 10, group: \"CENTRUM_LIKE\" },\n  [BID_TYPE.LARGE_BIRD]: { score: 10, group: \"CENTRUM_LIKE\" },\n  [BID_TYPE.KING_ULTI]: {\n    score: 15,\n    variants: [...CARD_SHAPE_VARIANTS],\n    group: \"ULTI_LIKE\",\n  },\n  [BID_TYPE.KING_UHU]: {\n    score: 20,\n    variants: [...CARD_SHAPE_VARIANTS],\n    group: \"ULTI_LIKE\",\n  },\n  [BID_TYPE.CSUZIMA]: { score: 4 },\n  [BID_TYPE.KLOPICZKY]: { score: 3, winByDefault: true, denyContra: true },\n};\n\nexport const getBid = (type: BID_TYPE): Bid => ({ type, ...BIDS[type] });\n\nexport const getAllBids = (): Bid[] =>\n  Object.keys(BID_TYPE).map((b: BID_TYPE) => getBid(b));\n\nexport type BidsByGroup = { [K in BidGroupType]: Bid[] };\nexport const getAllBidsByGorup = (): BidsByGroup => {\n  const bids = getAllBids();\n  return groupBy((bid) => bid.group || \"OTHERS\", bids) as BidsByGroup;\n};\n\nexport const canSilent = (bid: Bid): boolean => bid?.silent === true;\n\nexport const getBidScore = (partyScore: number) => (bid: Bid): number =>\n  typeof bid.score === \"function\" ? bid.score(partyScore) : bid.score;\n\nexport const hasVariant = (variant: BidVariant) => (bid: Bid): boolean => {\n  const variants = bid?.variants || [];\n  return variants.includes(variant);\n};\n","import { createId, Id } from \"../lib/util\";\nimport { Score } from \"./scoreModel\";\n\nexport enum PLAYER_TYPE {\n  DECLARER = \"DECLARER\",\n  OPPONENT = \"OPPONENT\",\n}\nexport interface Player {\n  id: Id;\n  name: string;\n  baseScore: number;\n  sessionScore: Score;\n  gameScore: Score;\n  type: PLAYER_TYPE | null;\n}\nexport const create = (): Player => ({\n  id: createId(),\n  name: \"\",\n  baseScore: 100,\n  sessionScore: null,\n  gameScore: null,\n  type: null,\n});\n\nexport type UpdatePlayerProps = Partial<Omit<Player, \"id\">>;\nexport const update = (updates: UpdatePlayerProps) => (\n  player: Player\n): Player => ({\n  ...player,\n  ...updates,\n});\n\nexport const getOppositeType = (playerType: PLAYER_TYPE): PLAYER_TYPE =>\n  playerType === PLAYER_TYPE.DECLARER\n    ? PLAYER_TYPE.OPPONENT\n    : PLAYER_TYPE.DECLARER;\n\ntype TypeColor = \"primary\" | \"secondary\" | \"default\";\nexport const getTypeColor = (playerType: PLAYER_TYPE | null): TypeColor => {\n  const mapper = new Map<PLAYER_TYPE | null, TypeColor>([\n    [PLAYER_TYPE.DECLARER, \"primary\"],\n    [PLAYER_TYPE.OPPONENT, \"secondary\"],\n    [null, \"default\"],\n  ]);\n  return mapper.get(playerType) || \"default\";\n};\n\nexport const rotateTypeWithNull = (\n  playerType: PLAYER_TYPE | null\n): PLAYER_TYPE | null => {\n  const mapper = new Map([\n    [PLAYER_TYPE.DECLARER, PLAYER_TYPE.OPPONENT],\n    [PLAYER_TYPE.OPPONENT, null],\n    [null, PLAYER_TYPE.DECLARER],\n  ]);\n  return mapper.get(playerType) || null;\n};\n","import { v4 as v4uuid } from \"uuid\";\n\nconst makeFirstLetterCapital = (word: string): string => {\n  if (word.length < 1) {\n    return word;\n  }\n  const [first, ...rest] = word.split(\"\");\n  return `${first.toUpperCase()}${rest.join(\"\").toLowerCase()}`;\n};\n\nexport const upperCaseToWords = (upperCased: string): string => {\n  return upperCased.split(\"_\").map(makeFirstLetterCapital).join(\" \");\n};\n\nexport type Id = string;\nexport const createId = (): Id => v4uuid();\n","import * as contractModel from \"./contractModel\";\nimport * as playerModel from \"./playerModel\";\nimport { Score } from \"./scoreModel\";\n\ntype PlayerTypeScore = {\n  [playerModel.PLAYER_TYPE.DECLARER]: Score;\n  [playerModel.PLAYER_TYPE.OPPONENT]: Score;\n};\nexport interface Game {\n  contracts: contractModel.Contract[];\n  partyScoreType: PARTY_SCORE_TYPE | null;\n  partyBaseScore: number;\n  called_tarock: CalledTarockType | null;\n  playerTypeScores: PlayerTypeScore;\n}\n\ntype CalledTarockType =\n  | \"XX\"\n  | \"XIX\"\n  | \"XVIII\"\n  | \"XVII\"\n  | \"XVI\"\n  | \"XV\"\n  | \"XIV\"\n  | \"XIII\"\n  | \"XII\";\n\nexport const CALLED_TAROCK: { [K in CalledTarockType]: CalledTarockType } = {\n  XX: \"XX\",\n  XIX: \"XIX\",\n  XVIII: \"XVIII\",\n  XVII: \"XVII\",\n  XVI: \"XVI\",\n  XV: \"XV\",\n  XIV: \"XIV\",\n  XIII: \"XIII\",\n  XII: \"XII\",\n};\n\nexport enum PARTY_SCORE_TYPE {\n  KLOPICZKY = \"KLOPICZKY\",\n  TOOK_THREE = \"TOOK_THREE\",\n  TOOK_TWO = \"TOOK_TWO\",\n  TOOK_ONE = \"TOOK_ONE\",\n  SOLO = \"SOLO\",\n}\nexport type PartyScoreValue = 0 | 1 | 2 | 3 | 4;\n\nexport const isPartyLike = (partyScoreType: PARTY_SCORE_TYPE | null): boolean =>\n  partyScoreType === null\n    ? false\n    : [\n        PARTY_SCORE_TYPE.TOOK_THREE,\n        PARTY_SCORE_TYPE.TOOK_TWO,\n        PARTY_SCORE_TYPE.TOOK_ONE,\n        PARTY_SCORE_TYPE.SOLO,\n      ].includes(partyScoreType);\n\nexport const PARTY_SCORE: { [K in PARTY_SCORE_TYPE]: PartyScoreValue } = {\n  [PARTY_SCORE_TYPE.TOOK_THREE]: 1,\n  [PARTY_SCORE_TYPE.TOOK_TWO]: 2,\n  [PARTY_SCORE_TYPE.TOOK_ONE]: 3,\n  [PARTY_SCORE_TYPE.SOLO]: 4,\n  [PARTY_SCORE_TYPE.KLOPICZKY]: 0,\n};\n\ninterface CreateGameProps {\n  partyScoreType?: PARTY_SCORE_TYPE;\n  called_tarock?: CalledTarockType;\n}\nexport const create = (props: CreateGameProps = {}): Game => ({\n  contracts: [],\n  partyScoreType: props.partyScoreType || null,\n  partyBaseScore: 1,\n  called_tarock: props.called_tarock || null,\n  playerTypeScores: {\n    [playerModel.PLAYER_TYPE.DECLARER]: null,\n    [playerModel.PLAYER_TYPE.OPPONENT]: null,\n  },\n});\n\nconst updateGameWithPlayerTypeScores = (game: Game): Game => {\n  const scores = calculatePlayerTypeScores(game);\n\n  return {\n    ...game,\n    playerTypeScores: { ...scores },\n  };\n};\n\nexport interface UpdateGameProps {\n  partyScoreType?: PARTY_SCORE_TYPE;\n  called_tarock?: CalledTarockType | null;\n  partyBaseScore?: number;\n}\nexport const update = (updates: UpdateGameProps) => (game: Game): Game => {\n  const partyScoreType =\n    updates.partyScoreType === undefined\n      ? game.partyScoreType\n      : updates.partyScoreType;\n  const partyBaseScore =\n    updates.partyBaseScore === undefined\n      ? game.partyBaseScore\n      : updates.partyBaseScore;\n  const partyScore =\n    partyScoreType === null\n      ? null\n      : PARTY_SCORE[partyScoreType] * partyBaseScore;\n  const contracts =\n    partyScore === null\n      ? game.contracts\n      : game.contracts.map(contractModel.updateBidBaseScore(partyScore));\n\n  return updateGameWithPlayerTypeScores({\n    ...game,\n    contracts: [...contracts],\n    ...updates,\n  });\n};\n\nexport const addContractFlipped = (contract: contractModel.Contract) => (\n  game: Game\n): Game => addContract(game)(contract);\n\nexport const addContract = (game: Game) => (\n  contract: contractModel.Contract\n): Game => {\n  const partyScore = game?.partyScoreType\n    ? PARTY_SCORE[game?.partyScoreType]\n    : null;\n  const updatedContract = contractModel.create({ ...contract, partyScore });\n  return updateGameWithPlayerTypeScores({\n    ...game,\n    contracts: [...game.contracts, updatedContract],\n  });\n};\n\nexport const removeContractAt = (game: Game) => (index: number): Game => {\n  return updateGameWithPlayerTypeScores({\n    ...game,\n    contracts: game.contracts.filter((_, i) => i !== index),\n  });\n};\n\nexport const removeAllContracts = (game: Game): Game => ({\n  ...game,\n  contracts: [],\n});\n\nexport const updateGameContractAt = (game: Game) => (index: number) => (\n  updated: contractModel.Contract\n): Game => {\n  return updateGameWithPlayerTypeScores({\n    ...game,\n    contracts: game.contracts.map((contract, i) =>\n      i === index ? { ...updated } : contract\n    ),\n  });\n};\n\nexport const calculatePlayerTypeScores = (game: Game): PlayerTypeScore => {\n  return game.contracts.reduce(\n    (partyScore, contract) => {\n      const score = contractModel.calculateContractScore(contract);\n      if (score === null) {\n        return partyScore;\n      }\n\n      const addScore = (prevScore: Score, score: Score): Score => {\n        if (prevScore === null) {\n          return score;\n        } else {\n          return score === null ? prevScore : score + prevScore;\n        }\n      };\n\n      const taker = contract.taker;\n      const another = playerModel.getOppositeType(taker);\n\n      return {\n        ...partyScore,\n        [taker]: addScore(partyScore[taker], score),\n        [another]: addScore(\n          partyScore[another],\n          score === null ? null : score * -1\n        ),\n      };\n    },\n    {\n      [playerModel.PLAYER_TYPE.DECLARER]: null,\n      [playerModel.PLAYER_TYPE.OPPONENT]: null,\n    }\n  );\n};\n","import React, { useState } from \"react\";\nimport {\n  Button,\n  Grid,\n  Box,\n  Typography as T,\n  Switch,\n  FormControlLabel,\n} from \"@material-ui/core\";\nimport {\n  BidsByGroup,\n  BidGroupType,\n  bidGroupNamesByWeight,\n  BID_TYPE,\n  getBid,\n  canSilent,\n} from \"../lib/bid\";\nimport { upperCaseToWords } from \"../lib/util\";\nimport * as contractModel from \"../models/contractModel\";\nimport * as playerModel from \"../models/playerModel\";\n\ninterface BidSelectorProps {\n  bidsByGroup: BidsByGroup;\n  onAddContract: (contract: Partial<contractModel.Contract>) => void;\n}\nconst ContractSelector = ({ bidsByGroup, onAddContract }: BidSelectorProps) => {\n  const [silentAndWin, setSilentAndWin] = useState<boolean>(false);\n\n  const handleSwitch = () => {\n    setSilentAndWin((prev: boolean) => !prev);\n  };\n  const handleClick = (bidType: BID_TYPE) => {\n    const bid = getBid(bidType);\n    const shouldWinWithSilent = silentAndWin && !bid.notWinIfSilent;\n    onAddContract({\n      bidType: bidType,\n      taker: playerModel.PLAYER_TYPE.DECLARER,\n      isSilent: silentAndWin && canSilent(bid),\n      bidVariant: null,\n      isWonByTaker: bid.winByDefault || shouldWinWithSilent || null,\n    });\n  };\n  return (\n    <Grid container spacing={1} alignItems=\"flex-end\">\n      {bidGroupNamesByWeight().map((group) => (\n        <Grid item key={group} spacing={1}>\n          <T variant=\"caption\" display=\"block\" color=\"textSecondary\">\n            {upperCaseToWords(group)}\n          </T>\n          {bidsByGroup[group as BidGroupType].map((bid) => (\n            <Box key={bid.type} component=\"span\" mr={0.5}>\n              <Button\n                variant=\"outlined\"\n                color=\"default\"\n                onClick={() => handleClick(bid.type)}\n                size=\"small\"\n                disabled={silentAndWin && !canSilent(bid)}\n              >\n                {upperCaseToWords(bid.type)}\n              </Button>\n            </Box>\n          ))}\n        </Grid>\n      ))}\n      <Grid item>\n        <FormControlLabel\n          control={\n            <Switch\n              checked={silentAndWin}\n              onChange={handleSwitch}\n              name=\"silentAndWinSwitch\"\n              color=\"default\"\n            />\n          }\n          label=\"Silent & Win\"\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default ContractSelector;\n","import * as playerModel from \"./playerModel\";\nimport { Score } from \"./scoreModel\";\nimport {\n  BidVariant,\n  BID_TYPE,\n  canSilent,\n  hasVariant,\n  getBid,\n  getBidScore,\n} from \"../lib/bid\";\nimport flow from \"lodash/fp/flow\";\nimport * as gameModel from \"./gameModel\";\n\nconst CONTRA_NAMES = [\"None\", \"Contra\", \"Recontra\", \"Subcontra\", \"Mortcontra\"];\n\ntype ContraMultiplier = number;\nexport interface Contract {\n  bidType: BID_TYPE;\n  bidBaseScore: number | null;\n  bidVariant: BidVariant | null;\n  contra: ContraMultiplier;\n  isWonByTaker: boolean | null;\n  taker: playerModel.PLAYER_TYPE;\n  isSilent: boolean;\n}\n\nconst validate = (contract: Contract): void | undefined => {\n  const { isSilent, bidType, bidVariant, contra } = contract;\n  const bid = getBid(bidType);\n  if (isSilent && !canSilent(bid)) {\n    throw new Error(`${bid.type} can not be silent.`);\n  }\n  if (bidVariant && !hasVariant(bidVariant)(bid)) {\n    throw new Error(`${bid.type} does not have ${bidVariant} variant.`);\n  }\n  const isPowerOfTwo = Math.log2(contra) % 1 === 0;\n  if (!isPowerOfTwo) {\n    throw new Error(`Contra must be power of two, but ${contra} given.`);\n  }\n  if (contra < 1) {\n    throw new Error(`Contra must be greater than 1, but ${contra} given.`);\n  }\n};\n\nexport interface CreateContractProps {\n  bidType: BID_TYPE;\n  partyScore?: gameModel.PartyScoreValue | null;\n  taker: playerModel.PLAYER_TYPE;\n  isSilent?: boolean;\n  bidVariant?: BidVariant | null;\n  isWonByTaker?: boolean | null;\n}\nexport const create = ({\n  bidType,\n  taker,\n  partyScore = null,\n  isSilent = false,\n  bidVariant = null,\n  isWonByTaker = null,\n}: CreateContractProps): Contract => {\n  const contract = {\n    bidType,\n    bidVariant,\n    contra: 1,\n    isSilent,\n    isWonByTaker,\n    taker,\n    bidBaseScore:\n      partyScore !== null\n        ? flow(getBid, getBidScore(partyScore))(bidType)\n        : null,\n  };\n  validate(contract);\n  return contract;\n};\n\nexport const updateBidBaseScore = (partyScore: number) => (\n  contract: Contract\n): Contract => ({\n  ...contract,\n  bidBaseScore: flow(getBid, getBidScore(partyScore))(contract.bidType),\n});\n\nexport type UpdateContractProps = Partial<\n  Pick<\n    Contract,\n    \"taker\" | \"isWonByTaker\" | \"isSilent\" | \"bidVariant\" | \"contra\"\n  >\n>;\nexport const update = (updates: UpdateContractProps) => (\n  contract: Contract\n): Contract => {\n  const updated = { ...contract, ...updates };\n  validate(updated);\n  return updated;\n};\n\nexport const calculateContractScore = (contract: Contract): Score => {\n  const { isWonByTaker, bidBaseScore, contra, isSilent: silent } = contract;\n  if (isWonByTaker === null || bidBaseScore === null) {\n    return null;\n  }\n  const multiplier = silent ? 0.5 : contra;\n  const sign = isWonByTaker ? 1 : -1;\n  return sign * bidBaseScore * multiplier;\n};\n","import React from \"react\";\nimport * as contractModel from \"../models/contractModel\";\nimport { upperCaseToWords } from \"../lib/util\";\nimport {\n  TableContainer,\n  TableHead,\n  TableBody,\n  Table,\n  TableCell,\n  TableRow,\n  IconButton,\n  Button,\n  Checkbox,\n  Typography as T,\n} from \"@material-ui/core\";\nimport { MdDelete as RemoveIcon } from \"react-icons/md\";\nimport { BidVariant, getBid } from \"../lib/bid\";\nimport VariantSelector from \"./VariantSelector\";\nimport SilentSwitch from \"./SilentSwitch\";\nimport MultiplierSelector from \"./MultiplierSelector\";\nimport * as playerModel from \"../models/playerModel\";\nimport curry from \"lodash/fp/curry\";\n\ninterface VariantSelectorModalProps {\n  contract: contractModel.Contract;\n  onChange: (variant: BidVariant) => void;\n}\nconst VariantSelectorModal = (props: VariantSelectorModalProps) => {\n  const { contract, onChange } = props;\n  const handleChange = (variant: BidVariant) => {\n    onChange(variant);\n  };\n  const bid = getBid(contract.bidType);\n\n  if (!bid.variants) {\n    return null;\n  }\n\n  return (\n    <>\n      <VariantSelector\n        variants={bid.variants || []}\n        selected={contract.bidVariant}\n        onChange={handleChange}\n        render={(handleOpen) => (\n          <Button\n            variant=\"outlined\"\n            color=\"default\"\n            onClick={handleOpen}\n            size=\"small\"\n          >\n            {upperCaseToWords(contract.bidVariant ?? \"Select variant\")}\n          </Button>\n        )}\n      />\n    </>\n  );\n};\n\nenum ACTION_TYPE {\n  DELETE = \"DELETE\",\n  CHANGE = \"CHANGE\",\n}\n\ntype ContractField = keyof contractModel.UpdateContractProps;\ntype Field = ContractField | string;\ninterface ColumnDefinition {\n  field: Field;\n  headerName: string;\n  valueGetter?: (\n    contract: contractModel.Contract,\n    onAction?: (actionType: ACTION_TYPE, value?: any) => void\n  ) => React.ReactNode;\n}\nconst columns: ColumnDefinition[] = [\n  {\n    field: \"bidType\",\n    headerName: \"Bid\",\n    valueGetter: (contract: contractModel.Contract) =>\n      upperCaseToWords(contract.bidType),\n  },\n  {\n    field: \"bidVariant\",\n    headerName: \"Variant\",\n    valueGetter: (contract, onAction) => {\n      const handleChange = (variant: BidVariant) =>\n        onAction && onAction(ACTION_TYPE.CHANGE, variant);\n\n      return (\n        <VariantSelectorModal contract={contract} onChange={handleChange} />\n      );\n    },\n  },\n  {\n    field: \"taker\",\n    headerName: \"Taker\",\n    valueGetter: (contract, onAction) => {\n      const newTaker = playerModel.getOppositeType(contract.taker);\n      const handleClick = () =>\n        onAction && onAction(ACTION_TYPE.CHANGE, newTaker);\n      const color = playerModel.getTypeColor(contract.taker);\n      return (\n        <Button\n          color={color}\n          onClick={handleClick}\n          variant=\"outlined\"\n          size=\"small\"\n        >\n          {contract.taker}\n        </Button>\n      );\n    },\n  },\n  {\n    field: \"isSilent\",\n    headerName: \"Silent\",\n    valueGetter: (contract, onAction) => {\n      const handleChange = (isSilent: boolean) =>\n        onAction && onAction(ACTION_TYPE.CHANGE, isSilent);\n      return (\n        <SilentSwitch\n          bidType={contract.bidType}\n          onChange={handleChange}\n          value={contract.isSilent}\n        />\n      );\n    },\n  },\n  {\n    field: \"bidBaseScore\",\n    headerName: \"Base Score\",\n  },\n  {\n    headerName: \"Contra\",\n    field: \"contra\",\n    valueGetter: (contract, onAction) => {\n      const handleChange = (contra: number) =>\n        onAction && onAction(ACTION_TYPE.CHANGE, contra);\n\n      if (getBid(contract.bidType).denyContra) {\n        return null;\n      }\n      return (\n        <MultiplierSelector\n          onChange={handleChange}\n          value={contract.contra}\n          disabled={contract.isSilent}\n        />\n      );\n    },\n  },\n  {\n    field: \"isWonByTaker\",\n    headerName: \"Win by the Taker?\",\n    valueGetter: (contract, onAction) => {\n      const { isWonByTaker, taker } = contract;\n      const handleClick = () => {\n        const nextValue =\n          isWonByTaker === null ? true : isWonByTaker === true ? false : null;\n        onAction && onAction(ACTION_TYPE.CHANGE, nextValue);\n      };\n\n      const title =\n        isWonByTaker === true\n          ? \"Won by the Taker!\"\n          : isWonByTaker === false\n          ? \"Lose by the Taker!\"\n          : \"Still unknown / Not count in final score...\";\n\n      return (\n        <Checkbox\n          title={title}\n          checked={isWonByTaker === true}\n          indeterminate={isWonByTaker === null}\n          onClick={handleClick}\n          color={\n            taker === playerModel.PLAYER_TYPE.DECLARER ? \"primary\" : \"secondary\"\n          }\n        />\n      );\n    },\n  },\n  {\n    field: \"takerScore\",\n    headerName: \"Taker score\",\n    valueGetter: (contract) => (\n      <T\n        variant=\"button\"\n        color={\n          contract.taker === playerModel.PLAYER_TYPE.DECLARER\n            ? \"primary\"\n            : \"secondary\"\n        }\n      >\n        {contractModel.calculateContractScore(contract)}\n      </T>\n    ),\n  },\n  {\n    field: \"actions\",\n    headerName: \" \",\n    valueGetter: (_, onAction) => {\n      const handleClick = () => onAction && onAction(ACTION_TYPE.DELETE, null);\n      return (\n        <IconButton title=\"Remove\" onClick={handleClick}>\n          <RemoveIcon />\n        </IconButton>\n      );\n    },\n  },\n];\n\nconst isContractField = (\n  field: Field,\n  contract: contractModel.Contract\n): field is ContractField => {\n  return field in contract;\n};\n\ninterface ContractsTableProps {\n  contracts: contractModel.Contract[];\n  onChange: (\n    index: number,\n    field: keyof contractModel.Contract,\n    value: any\n  ) => void;\n  onDelete: (index: number) => void;\n}\nconst ContractsTable = (props: ContractsTableProps) => {\n  const { contracts, onChange, onDelete } = props;\n\n  function handleAction(\n    index: number,\n    field: ContractField | null,\n    actionType: ACTION_TYPE,\n    value: any\n  ) {\n    if (actionType === ACTION_TYPE.DELETE) {\n      return onDelete(index);\n    }\n    if (actionType === ACTION_TYPE.CHANGE && field !== null) {\n      return onChange(index, field, value);\n    }\n    throw new Error(\n      `Invalid if ACTION_TYPE (${actionType}) is CHANGE the field can not be null.`\n    );\n  }\n\n  return (\n    <TableContainer>\n      <Table>\n        <TableHead>\n          <TableRow>\n            {columns.map((column, index) => (\n              <TableCell key={index}> {column.headerName} </TableCell>\n            ))}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {contracts.map((contract, rowIndex) => (\n            <TableRow key={rowIndex}>\n              {columns.map((column, cellIndex) => (\n                <TableCell key={cellIndex}>\n                  {isContractField(column.field, contract)\n                    ? column.valueGetter\n                      ? column.valueGetter(\n                          contract,\n                          curry(handleAction)(rowIndex)(column.field)\n                        )\n                      : contract[column.field]\n                    : column.valueGetter\n                    ? column.valueGetter(\n                        contract,\n                        curry(handleAction)(rowIndex)(null)\n                      )\n                    : \" \"}\n                </TableCell>\n              ))}\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default ContractsTable;\n","import React, { ChangeEvent, useState, ReactNode } from \"react\";\nimport {\n  FormControlLabel,\n  RadioGroup,\n  Radio,\n  Button,\n  Dialog,\n  DialogContent,\n  DialogActions,\n} from \"@material-ui/core\";\nimport { BidVariant } from \"../lib/bid\";\nimport { upperCaseToWords } from \"../lib/util\";\n\ninterface VariantSelectorProps {\n  render: (handleOpen: () => void) => ReactNode;\n  variants: BidVariant[];\n  selected: BidVariant | null;\n  onChange: (variant: BidVariant) => void;\n  onClose?: () => void;\n}\nconst VariantSelector = (props: VariantSelectorProps) => {\n  const { variants, selected, onChange, render, onClose } = props;\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => {\n    setOpen(false);\n    onClose && onClose();\n  };\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    onChange(event.target.value as BidVariant);\n    handleClose();\n  };\n\n  return (\n    <>\n      {render(handleOpen)}\n      <Dialog open={open} onClose={handleClose}>\n        <DialogContent>\n          <RadioGroup name=\"variants\" onChange={handleChange} value={selected}>\n            {variants.map((variant: BidVariant) => (\n              <FormControlLabel\n                control={<Radio color=\"default\" value={variant} />}\n                label={upperCaseToWords(variant)}\n              />\n            ))}\n          </RadioGroup>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} variant=\"outlined\">\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nexport default VariantSelector;\n","import React from \"react\";\nimport { Switch, FormControlLabel, FormGroup } from \"@material-ui/core\";\nimport { BID_TYPE, canSilent, getBid } from \"../lib/bid\";\n\ninterface SilentSwitchProps {\n  bidType: BID_TYPE;\n  onChange: (value: boolean) => void;\n  value?: boolean;\n  label?: boolean;\n}\nconst SilentSwitch = ({\n  bidType,\n  onChange,\n  value,\n  label,\n}: SilentSwitchProps) => {\n  const bid = getBid(bidType);\n  if (!canSilent(bid)) {\n    return null;\n  }\n  return (\n    <FormGroup>\n      <FormControlLabel\n        control={\n          <Switch\n            onChange={(event) => onChange(event.target.checked)}\n            checked={value}\n            color=\"default\"\n          />\n        }\n        label={label ? \"Silent\" : \"\"}\n      />\n    </FormGroup>\n  );\n};\nexport default SilentSwitch;\n","import React from \"react\";\nimport { IconButton, Typography as T } from \"@material-ui/core\";\nimport {\n  MdArrowUpward as DoubleContraIcon,\n  MdArrowDownward as DivideContraIcon,\n} from \"react-icons/md\";\ninterface MultiplierSelectorProps {\n  value: number;\n  onChange: (value: number) => void;\n  disabled?: boolean;\n}\nconst MultiplierSelector = ({\n  value,\n  onChange,\n  disabled,\n}: MultiplierSelectorProps) => {\n  const handleChange = (value: number) => onChange && onChange(value);\n  const handleDivide = () => value > 1 && handleChange(value / 2);\n  const handleDouble = () => handleChange(value * 2);\n\n  return (\n    <>\n      <T\n        component={disabled ? \"s\" : \"span\"}\n        color={disabled ? \"textPrimary\" : \"textSecondary\"}\n      >\n        {value}\n      </T>\n      <IconButton title=\"Double\" onClick={handleDouble} disabled={disabled}>\n        <DoubleContraIcon />\n      </IconButton>\n      <IconButton\n        title=\"Divide by 2\"\n        onClick={handleDivide}\n        disabled={value === 1 || disabled}\n      >\n        <DivideContraIcon />\n      </IconButton>\n    </>\n  );\n};\n\nexport default MultiplierSelector;\n","import React, { ChangeEvent } from \"react\";\nimport * as gameModel from \"../models/gameModel\";\nimport {\n  Grid,\n  FormControl,\n  Select,\n  MenuItem,\n  InputLabel,\n  FormLabel,\n  RadioGroup,\n  FormControlLabel,\n  Radio,\n  Typography as T,\n} from \"@material-ui/core\";\nimport { upperCaseToWords } from \"../lib/util\";\nimport MultiplierSelector from \"./MultiplierSelector\";\n\nconst calledTarockOptions = [\"_None_\", ...Object.keys(gameModel.CALLED_TAROCK)];\nconst partyScoreOptions = Object.keys(gameModel.PARTY_SCORE);\n\ninterface GamePropertiesProps {\n  game: gameModel.Game;\n  onChange: (property: keyof gameModel.UpdateGameProps, value: any) => void;\n}\nconst GameProperties = (props: GamePropertiesProps) => {\n  const { game, onChange } = props;\n  return (\n    <Grid container spacing={3} alignContent=\"space-around\">\n      <Grid item>\n        <FormControl component=\"fieldset\">\n          <InputLabel id=\"called-tarock-selector\">Called</InputLabel>\n          <Select\n            value={game.called_tarock || \"_None_\"}\n            onChange={(event: ChangeEvent<{ value: string }>) => {\n              onChange(\"called_tarock\", event.target.value);\n            }}\n            labelId=\"called-tarock-selector\"\n          >\n            {calledTarockOptions.map((option) => (\n              <MenuItem key={option} value={option}>\n                {option === \"_None_\" ? \"None\" : option}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </Grid>\n      <Grid item>\n        <FormControl component=\"fieldset\">\n          <FormLabel>Party Score</FormLabel>\n          <RadioGroup\n            row\n            value={game.partyScoreType}\n            onChange={(event: ChangeEvent<HTMLInputElement>) => {\n              onChange(\n                \"partyScoreType\",\n                event.target.value as gameModel.PARTY_SCORE_TYPE\n              );\n            }}\n          >\n            {partyScoreOptions.map((option: gameModel.PARTY_SCORE_TYPE) => (\n              <FormControlLabel\n                key={option}\n                value={option}\n                control={<Radio color=\"default\" />}\n                label={upperCaseToWords(option)}\n              />\n            ))}\n          </RadioGroup>\n        </FormControl>\n      </Grid>\n      <Grid item>\n        <T variant=\"caption\" display=\"block\" color=\"textSecondary\">\n          Party Base Score\n        </T>\n        <MultiplierSelector\n          value={game.partyBaseScore}\n          onChange={(score) => {\n            onChange(\"partyBaseScore\", score);\n          }}\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default GameProperties;\n","import * as playerModel from \"./playerModel\";\n\nexport type PlayerList = playerModel.Player[];\nexport const add = (playerList: PlayerList) => (\n  player: playerModel.Player\n): PlayerList => {\n  return [...playerList, player];\n};\n\nexport const remove = (playerList: PlayerList) => (\n  player: playerModel.Player\n): PlayerList => playerList.filter(({ id }) => id !== player.id);\n\nexport const update = (playerList: PlayerList) => (\n  updated: playerModel.Player\n): PlayerList =>\n  playerList.map((player) => (player.id === updated.id ? updated : player));\n\nexport const countByType = (players: PlayerList): [number, number] => {\n  const [declarersNumber, opponentsNumber] = players.reduce(\n    ([declarersNumber, opponentsNumber], player) => {\n      if (player.type === playerModel.PLAYER_TYPE.OPPONENT) {\n        return [declarersNumber, opponentsNumber + 1];\n      } else if (player.type === playerModel.PLAYER_TYPE.DECLARER) {\n        return [declarersNumber + 1, opponentsNumber];\n      } else {\n        return [declarersNumber, opponentsNumber];\n      }\n    },\n    [0, 0]\n  );\n  return [declarersNumber, opponentsNumber];\n};\n\nexport const clearType = (players: PlayerList): PlayerList =>\n  players.map((player) => playerModel.update({ type: null })(player));\n\nexport const clearSessionScore = (players: PlayerList): PlayerList =>\n  players.map((player) => playerModel.update({ sessionScore: null })(player));\n\nexport const filterByInGame = (players: PlayerList): PlayerList =>\n  players.filter((player) => player.type !== null);\n\nexport type PlayerListObject = { [key: string]: playerModel.Player };\nexport const mapToObjectById = (playerList: PlayerList): PlayerListObject => {\n  return playerList.reduce((playerListObject, player) => {\n    playerListObject[player.id as string] = player;\n    return playerListObject;\n  }, {} as PlayerListObject);\n};\n","import React, { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport { DialogTitle } from \"@material-ui/core\";\n\ninterface ConfirmProps {\n  title?: string;\n  text?: string;\n  target: (clickHandler: () => void) => React.ReactElement;\n  onConfirm: () => void;\n}\n\nconst Confrim = ({\n  text = \"\",\n  title = \"\",\n  target,\n  onConfirm,\n}: ConfirmProps) => {\n  const [open, setOpen] = useState(false);\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleOk = () => {\n    onConfirm();\n    handleClose();\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <>\n      {target(handleClick)}\n      <Dialog fullScreen={fullScreen} open={open} onClose={handleClose}>\n        <DialogTitle>{title}</DialogTitle>\n        <DialogContent>\n          <DialogContentText>{text}</DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleOk} color=\"default\" variant=\"outlined\">\n            Ok, do it!\n          </Button>\n          <Button\n            onClick={handleClose}\n            color=\"default\"\n            variant=\"outlined\"\n            autoFocus\n          >\n            No, cancel it!\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nexport default Confrim;\n","import {\n  Button,\n  TextField,\n  Grid,\n  Card,\n  CardHeader,\n  Avatar,\n  CardContent,\n  CardActions,\n  IconButton,\n} from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport * as playerModel from \"../models/playerModel\";\nimport * as playerListModel from \"../models/playerListModel\";\nimport { MdDelete as RemoveIcon } from \"react-icons/md\";\nimport { MdEdit as EditIcon } from \"react-icons/md\";\nimport { MdPerson as UserIcon } from \"react-icons/md\";\nimport { MdPersonAdd as AddUserIcon } from \"react-icons/md\";\nimport { MdDone as FinishEditingIcon } from \"react-icons/md\";\nimport WinnerIcon from \"@material-ui/icons/EmojiEvents\";\nimport Confrim from \"./Confirm\";\nimport flow from \"lodash/fp/flow\";\n\ninterface PlayerAvatarProps {\n  player: playerModel.Player;\n}\nconst PlayerAvatar = ({ player }: PlayerAvatarProps) => (\n  <Avatar>\n    {player.name.length > 0 ? <>{player.name.slice(0, 2)}</> : <UserIcon />}\n  </Avatar>\n);\n\ninterface EditablePlayerItemProps {\n  player: playerModel.Player;\n  onRemove: (player: playerModel.Player) => void;\n  onChange: (updated: playerModel.Player) => void;\n}\nconst EditablePlayerItem = (props: EditablePlayerItemProps) => {\n  const { player, onRemove, onChange } = props;\n  const handleRemove = () => onRemove(player);\n  const handleChange = (prop: string) => (value: any) => {\n    onChange(playerModel.update({ [prop]: value })(player));\n  };\n  const handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    handleChange(\"name\")(event.target.value);\n  };\n  const handleBaseScoreChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    const value = event.target.value;\n    handleChange(\"baseScore\")(value.length > 0 ? Number(value) : null);\n  };\n  return (\n    <Card>\n      <CardContent>\n        <Grid container direction=\"row\" spacing={2}>\n          <Grid item>\n            <PlayerAvatar player={player} />\n          </Grid>\n          <Grid container item direction=\"column\" xs spacing={2}>\n            <Grid item>\n              <TextField\n                id={`${player.id}_name`}\n                label=\"Name\"\n                value={player.name}\n                onChange={handleNameChange}\n              />\n            </Grid>\n            <Grid item>\n              <TextField\n                id={`${player.id}_baseScore`}\n                label=\"Base Score\"\n                type=\"number\"\n                value={player.baseScore}\n                onChange={handleBaseScoreChange}\n              />\n            </Grid>\n          </Grid>\n          <Grid item>\n            <Confrim\n              title={`Do you want to remove ${player.name || \"this player\"}?`}\n              text=\"It will remove the player, and deletes its score too.\"\n              target={(handleClick) => (\n                <IconButton onClick={handleClick}>\n                  <RemoveIcon />\n                </IconButton>\n              )}\n              onConfirm={handleRemove}\n            />\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\ninterface PlayerItemProps {\n  player: playerModel.Player;\n  onChange: (updated: playerModel.Player) => void;\n}\nconst PlayerItem = ({ player, onChange }: PlayerItemProps) => {\n  const handleChange = () => {\n    onChange(\n      playerModel.update({ type: playerModel.rotateTypeWithNull(player.type) })(\n        player\n      )\n    );\n  };\n  const GAME_WINNER_SCORE = 180;\n  const color = playerModel.getTypeColor(player.type);\n  const playing = player.type !== null;\n  const hasGameScore = player.gameScore !== null;\n  const gameScoreText = playing && hasGameScore ? ` (${player.gameScore})` : \"\";\n  const score =\n    player.sessionScore !== null\n      ? player.sessionScore + player.baseScore\n      : player.baseScore;\n  const isWinner = score > GAME_WINNER_SCORE;\n  return (\n    <Card>\n      <CardHeader\n        avatar={<PlayerAvatar player={player} />}\n        title={player.name}\n        subheader={\n          <span>\n            {isWinner && <WinnerIcon fontSize=\"small\" color=\"action\" />}\n            {`${score}${gameScoreText}`}\n          </span>\n        }\n      />\n      <CardActions>\n        <Button variant=\"outlined\" color={color} onClick={handleChange}>\n          {player.type || \"Not playing\"}\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\ninterface PlayersProps {\n  players: playerModel.Player[];\n  onPlayerListChange: (playerList: playerListModel.PlayerList) => void;\n  onSaveScores: () => void;\n  saveDisabled: boolean;\n  onResetPlayers: () => void;\n  onResetScores: () => void;\n}\nconst Players = (props: PlayersProps) => {\n  const {\n    players,\n    onPlayerListChange,\n    onSaveScores,\n    saveDisabled,\n    onResetPlayers,\n    onResetScores,\n  } = props;\n  const [edit, setEdit] = useState(false);\n\n  const handleToogleEdit = () => setEdit((prev) => !prev);\n  const handleAdd = () => {\n    flow(\n      playerModel.create,\n      playerListModel.add(players),\n      onPlayerListChange\n    )();\n  };\n  const handleRemove = (player: playerModel.Player) => {\n    flow(playerListModel.remove(players), onPlayerListChange)(player);\n  };\n  const handleChange = (updated: playerModel.Player) => {\n    flow(playerListModel.update(players), onPlayerListChange)(updated);\n  };\n\n  return (\n    <Grid container spacing={1}>\n      <Grid item container direction=\"row\" alignItems=\"center\" spacing={1}>\n        <Grid item>\n          <IconButton onClick={handleAdd} title=\"Add new player\">\n            <AddUserIcon />\n          </IconButton>\n        </Grid>\n        <Grid item>\n          <IconButton\n            onClick={handleToogleEdit}\n            title={edit ? \"Finish editing\" : \"Edit user properties\"}\n          >\n            {edit ? <FinishEditingIcon /> : <EditIcon />}\n          </IconButton>\n        </Grid>\n        <Grid item>\n          <Button\n            variant=\"outlined\"\n            disabled={saveDisabled}\n            onClick={onSaveScores}\n          >\n            Save scores\n          </Button>\n        </Grid>\n        <Grid item>\n          <Confrim\n            title=\"Do you want to reset the Players?\"\n            text=\"It will remove all players, and also delete their scores.\"\n            target={(handleClick) => (\n              <Button variant=\"outlined\" onClick={handleClick}>\n                Reset Players\n              </Button>\n            )}\n            onConfirm={onResetPlayers}\n          />\n        </Grid>\n        <Grid item>\n          <Confrim\n            title=\"Do you want to reset the Scores?\"\n            text=\"It will reset the scores to the players' base score, but keeps all the players.\"\n            target={(handleClick) => (\n              <Button variant=\"outlined\" onClick={handleClick}>\n                Reset Scores\n              </Button>\n            )}\n            onConfirm={onResetScores}\n          />\n        </Grid>\n      </Grid>\n      {players.map((player) => (\n        <Grid item xs={edit ? 3 : false}>\n          {edit ? (\n            <EditablePlayerItem\n              key={player.id}\n              onChange={handleChange}\n              onRemove={handleRemove}\n              player={player}\n            />\n          ) : (\n            <PlayerItem\n              key={player.id}\n              player={player}\n              onChange={handleChange}\n            />\n          )}\n        </Grid>\n      ))}\n    </Grid>\n  );\n};\n\nexport default Players;\n","import * as gameModel from \"../models/gameModel\";\nimport * as playerModel from \"../models/playerModel\";\nimport * as playerListModel from \"../models/playerListModel\";\nimport { Score } from \"../models/scoreModel\";\nimport assignWith from \"lodash/fp/assignWith\";\nimport { isEqual } from \"lodash\";\n\nconst getScore = (players: playerListModel.PlayerList) => (\n  game: gameModel.Game\n): [Score, Score] => {\n  const [numberOfDeclarers, numberOfOpponents] = playerListModel.countByType(\n    players\n  );\n  const opponentsGameScore =\n    game.playerTypeScores[playerModel.PLAYER_TYPE.OPPONENT];\n  const declarersGameScore =\n    game.playerTypeScores[playerModel.PLAYER_TYPE.DECLARER];\n  if (opponentsGameScore === null || declarersGameScore === null) {\n    return [null, null];\n  }\n  if (numberOfOpponents === 2 && numberOfDeclarers === 2) {\n    return [declarersGameScore, opponentsGameScore];\n  }\n  if (numberOfOpponents === 3 && numberOfDeclarers === 1) {\n    return [declarersGameScore * 3, opponentsGameScore];\n  }\n  if (numberOfOpponents === 1 && numberOfDeclarers === 3) {\n    return [declarersGameScore, opponentsGameScore * 3];\n  }\n  return [null, null];\n};\n\nexport const getCurrentScoreForPlayers = (game: gameModel.Game) => (\n  players: playerListModel.PlayerList\n): playerListModel.PlayerList => {\n  return players.map(\n    (player: playerModel.Player): playerModel.Player => {\n      const [declarersScore, opponentsScore] = getScore(players)(game);\n      const score = {\n        [playerModel.PLAYER_TYPE.OPPONENT]: opponentsScore,\n        [playerModel.PLAYER_TYPE.DECLARER]: declarersScore,\n      };\n      return {\n        ...player,\n        gameScore: player.type === null ? null : score[player.type],\n      };\n    }\n  );\n};\n\nexport const isReadyForSave = (players: playerListModel.PlayerList) => (\n  game: gameModel.Game\n): boolean => {\n  const numbers = playerListModel.countByType(players);\n  const playerNumberValid =\n    isEqual(numbers, [1, 3]) ||\n    isEqual(numbers, [2, 2]) ||\n    isEqual(numbers, [3, 1]);\n  const gameScoreValid =\n    game.playerTypeScores[playerModel.PLAYER_TYPE.DECLARER] !== null &&\n    game.playerTypeScores[playerModel.PLAYER_TYPE.OPPONENT] !== null;\n  return playerNumberValid && gameScoreValid;\n};\n\nconst defined = (value: any): boolean =>\n  Boolean(value !== undefined && value !== null);\n\nconst scoreSumAssigner = (\n  gameScore: number | undefined,\n  player: playerModel.Player\n) => {\n  const left = defined(gameScore) ? gameScore : 0;\n  const right = defined(player.gameScore) ? player.gameScore : 0;\n  return (left as number) + (right as number);\n};\n\nexport type PlayerScores = { [key: string]: number };\n\nexport const sumPlayerScores = (\n  playerListObjects: playerListModel.PlayerListObject[]\n): PlayerScores => {\n  return playerListObjects.reduce(\n    (scores, playerListObject) =>\n      assignWith(scoreSumAssigner)(scores, playerListObject),\n    {} as PlayerScores\n  );\n};\n\nexport const assignScoresToPlayers = (players: playerListModel.PlayerList) => (\n  sessionScores: PlayerScores\n): playerListModel.PlayerList =>\n  players.map((player) =>\n    sessionScores[player.id] === undefined\n      ? player\n      : playerModel.update({ sessionScore: sessionScores[player.id] })(player)\n  );\n","export class ApplicationError extends Error {\n  userMessage: string;\n  constructor(message?: string, userMessage?: string) {\n    super(message);\n    this.userMessage =\n      userMessage === undefined ? \"Ooops. Someting went wrong!\" : userMessage;\n  }\n}\n","import { ApplicationError } from \"../lib/error\";\n\nexport const PREFIX = \"tarockSheetState\";\n\nexport class NotSupportedStorageError extends ApplicationError {\n  constructor(message?: string) {\n    super(message, \"Saving is not supported!\");\n    this.name = \"NotSupportedStorageError\";\n  }\n}\n\nexport class WrongDataStorageError extends ApplicationError {\n  constructor(message?: string) {\n    super(\n      message,\n      \"Not able to save or load your changes! It is an application error!\"\n    );\n    this.name = \"WrongDataStorageError\";\n  }\n}\n\nexport class UnsuccessfulSavingStorageError extends ApplicationError {\n  constructor(message?: string) {\n    super(message, \"Not able to save your changes! Maybe the storage is full.\");\n    this.name = \"UnsuccessfulSavingStorageError\";\n  }\n}\n\ninterface Storage {\n  isSupported: () => {};\n  create: (key: string, data: object) => void;\n  update: (key: string, data: object) => void;\n  delete: (key: string) => void;\n  read: (key: string) => object | null;\n}\nexport const storage = (prefix: string = PREFIX): Storage => {\n  const isSupported = () => Boolean(window.localStorage);\n  const _checkSupport = () => {\n    if (!isSupported()) {\n      throw new NotSupportedStorageError();\n    }\n  };\n  const _instance = window.localStorage;\n  const _serialize = (data: object): string => {\n    try {\n      return JSON.stringify(data);\n    } catch (error) {\n      throw new WrongDataStorageError(error.message);\n    }\n  };\n  const _unserialize = (str: string): object => {\n    try {\n      return JSON.parse(str);\n    } catch (error) {\n      throw new WrongDataStorageError(error.message);\n    }\n  };\n  const getStorageKey = (key: string): string => `${prefix}_${key}`;\n\n  const create = (key: string, data: object) => {\n    _checkSupport();\n    try {\n      _instance.setItem(getStorageKey(key), _serialize(data));\n    } catch (error) {\n      if (error instanceof WrongDataStorageError) {\n        throw error;\n      }\n      throw new UnsuccessfulSavingStorageError(error.message);\n    }\n  };\n  const remove = (key: string) => {\n    _checkSupport();\n    _instance.removeItem(key);\n  };\n  const read = (key: string): object | null => {\n    _checkSupport();\n    const serialized = _instance.getItem(getStorageKey(key));\n    return serialized === null ? null : _unserialize(serialized);\n  };\n\n  return {\n    isSupported,\n    create,\n    update: create,\n    delete: remove,\n    read,\n  };\n};\n","import React, { useEffect, useState } from \"react\";\nimport { BID_TYPE, getAllBidsByGorup } from \"../lib/bid\";\nimport ContractSelector from \"./ContractSelector\";\nimport * as gameModel from \"../models/gameModel\";\nimport * as contractModel from \"../models/contractModel\";\nimport { Button, Grid } from \"@material-ui/core\";\nimport ContractsTable from \"./ContractsTable\";\nimport GameProperties from \"./GameProperties\";\nimport flow from \"lodash/fp/flow\";\nimport concat from \"lodash/fp/concat\";\nimport Players from \"./Players\";\nimport * as playerModel from \"../models/playerModel\";\nimport * as playerListModel from \"../models/playerListModel\";\nimport {\n  assignScoresToPlayers,\n  getCurrentScoreForPlayers,\n  isReadyForSave,\n  sumPlayerScores,\n} from \"../lib/gameScoreList\";\nimport { storage as storageInitializer } from \"../services/localStorage\";\nimport Confirm from \"./Confirm\";\n\nconst allBidsByGroup = getAllBidsByGorup();\nconst storage = storageInitializer();\n\nconst TarockSheet = () => {\n  const [game, setGame] = useState<gameModel.Game>(\n    (storage.read(\"game\") as gameModel.Game | null) ?? gameModel.create()\n  );\n  const [players, setPlayers] = useState<playerModel.Player[]>(\n    (storage.read(\"players\") as playerModel.Player[] | null) ?? []\n  );\n  const [gameScoreList, setGameScoreList] = useState<\n    playerListModel.PlayerListObject[]\n  >(\n    (storage.read(\"gameScoreList\") as\n      | playerListModel.PlayerListObject[]\n      | null) ?? []\n  );\n\n  useEffect(() => {\n    setPlayers(getCurrentScoreForPlayers(game));\n  }, [game]);\n\n  useEffect(() => {\n    if (!storage.isSupported()) {\n      return;\n    }\n    try {\n      storage.update(\"game\", game as object);\n      storage.update(\"players\", players);\n      storage.update(\"gameScoreList\", gameScoreList);\n    } catch (error) {\n      console.error(error);\n    }\n  }, [game, players, gameScoreList]);\n\n  const handleContractDelete = (index: number) =>\n    setGame(gameModel.removeContractAt(game)(index));\n  const handleResetGame = () => setGame(gameModel.create());\n  const handlePlayerListChange = (playerList: playerListModel.PlayerList) => {\n    updatePlayersState(playerList);\n  };\n  const handleChangeGameProperties = (\n    prop: keyof gameModel.UpdateGameProps,\n    value: any\n  ) => {\n    setGame((prevGame) => {\n      const partyScoreTypeChanged = prop === \"partyScoreType\";\n      const fromKlopiczkyToPartyLikeChanged =\n        prevGame.partyScoreType === gameModel.PARTY_SCORE_TYPE.KLOPICZKY &&\n        gameModel.isPartyLike(value);\n      const fromPartyLikeToKlopiczkyChanged =\n        gameModel.isPartyLike(prevGame.partyScoreType) &&\n        value === gameModel.PARTY_SCORE_TYPE.KLOPICZKY;\n      const fromNullToKlopiczkyChanged =\n        prevGame.partyScoreType === null &&\n        value === gameModel.PARTY_SCORE_TYPE.KLOPICZKY;\n      const partyLikeAndEmptyContracts =\n        gameModel.isPartyLike(value) && prevGame.contracts.length === 0;\n      const shouldRemoveContracts =\n        partyScoreTypeChanged &&\n        (fromKlopiczkyToPartyLikeChanged ||\n          fromPartyLikeToKlopiczkyChanged ||\n          fromNullToKlopiczkyChanged ||\n          partyLikeAndEmptyContracts);\n      if (shouldRemoveContracts) {\n        const contract = gameModel.isPartyLike(value)\n          ? contractModel.create({\n              bidType: BID_TYPE.PARTY,\n              taker: playerModel.PLAYER_TYPE.DECLARER,\n            })\n          : contractModel.create({\n              bidType: BID_TYPE.KLOPICZKY,\n              taker: playerModel.PLAYER_TYPE.DECLARER,\n              isWonByTaker: true,\n            });\n        const updated = flow(\n          gameModel.removeAllContracts,\n          gameModel.addContractFlipped(contract),\n          gameModel.update({ [prop]: value })\n        )(game);\n        return updated;\n      } else {\n        return gameModel.update({ [prop]: value })(game);\n      }\n    });\n  };\n  const handleAddContract = (contract: contractModel.Contract) => {\n    return setGame(\n      flow(contractModel.create, gameModel.addContract(game))(contract)\n    );\n  };\n  const handleChangeContract = (\n    index: number,\n    field: keyof contractModel.Contract,\n    value: any\n  ) => {\n    setGame(\n      flow(\n        contractModel.update({ [field]: value }),\n        gameModel.updateGameContractAt(game)(index)\n      )(game.contracts[index])\n    );\n  };\n  const handleSaveScores = () => {\n    const updatedGameScoreList = flow(\n      playerListModel.filterByInGame,\n      playerListModel.mapToObjectById,\n      concat(gameScoreList)\n    )(players);\n    updateGameScoreListState(updatedGameScoreList);\n  };\n  const updatePlayersState = (updated: playerListModel.PlayerList) => {\n    flow(getCurrentScoreForPlayers(game), setPlayers)(updated);\n  };\n  const updateGameScoreListState = (\n    updated: playerListModel.PlayerListObject[]\n  ) => {\n    flow(\n      sumPlayerScores,\n      assignScoresToPlayers(players),\n      playerListModel.clearType,\n      updatePlayersState\n    )(updated);\n    setGameScoreList(updated);\n    setGame(gameModel.create());\n  };\n  const handleResetPlayers = () => {\n    setGame(gameModel.create());\n    updateGameScoreListState([]);\n    updatePlayersState([]);\n  };\n  const handleResetScores = () => {\n    updateGameScoreListState([]);\n    flow(\n      playerListModel.clearSessionScore,\n      playerListModel.clearType,\n      updatePlayersState\n    )(players);\n  };\n\n  const partyScoreTypeSelected = game.partyScoreType !== null;\n\n  return (\n    <Grid container spacing={3} direction=\"column\">\n      <Grid item>\n        <Players\n          players={players}\n          onPlayerListChange={handlePlayerListChange}\n          onSaveScores={handleSaveScores}\n          saveDisabled={!isReadyForSave(players)(game)}\n          onResetPlayers={handleResetPlayers}\n          onResetScores={handleResetScores}\n        />\n      </Grid>\n      <Grid item>\n        <Grid item container spacing={1} direction=\"row\">\n          <Grid item>\n            <GameProperties game={game} onChange={handleChangeGameProperties} />\n          </Grid>\n          <Grid item>\n            <Confirm\n              title=\"Do you really want to reset this Game?\"\n              text=\"It will clear up the game's properties and remove all contracts without saving them, but keep the players' scores.\"\n              target={(handleClick) => (\n                <Button variant=\"outlined\" onClick={handleClick}>\n                  Reset Game\n                </Button>\n              )}\n              onConfirm={handleResetGame}\n            />\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid item>\n        {partyScoreTypeSelected && (\n          <ContractSelector\n            key={\n              game.partyScoreType === null ? 1 : 0\n            } /* Resets the internal state if the game is reseted */\n            bidsByGroup={allBidsByGroup}\n            onAddContract={handleAddContract}\n          />\n        )}\n      </Grid>\n      <Grid item>\n        {partyScoreTypeSelected && (\n          <ContractsTable\n            contracts={game?.contracts as contractModel.Contract[]}\n            onChange={handleChangeContract}\n            onDelete={handleContractDelete}\n          />\n        )}\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default TarockSheet;\n","import React from \"react\";\nimport {\n  AppBar,\n  Box,\n  Container,\n  Grid,\n  makeStyles,\n  Typography as T,\n} from \"@material-ui/core\";\nimport { GiJesterHat as Icon } from \"react-icons/gi\";\nimport TarockSheet from \"./components/TarockSheet\";\n\nconst useAppStyle = makeStyles((theme) => ({\n  container: {\n    padding: theme.spacing(4),\n  },\n}));\n\nfunction App() {\n  const classes = useAppStyle();\n\n  return (\n    <>\n      <AppBar position=\"static\">\n        <Grid container spacing={2} alignItems=\"center\">\n          <Grid item>\n            <Box mt={1} ml={1} fontSize=\"h3.fontSize\">\n              <Icon color=\"white\" />\n            </Box>\n          </Grid>\n          <Grid item>\n            <T variant=\"h3\">Tarock Sheet</T>\n          </Grid>\n        </Grid>\n      </AppBar>\n      <Container className={classes.container}>\n        <TarockSheet />\n      </Container>\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}