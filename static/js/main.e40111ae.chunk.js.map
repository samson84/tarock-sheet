{"version":3,"sources":["models/Bid.ts","models/Player.ts","lib/util.ts","models/Game.ts","components/ContractSelector.tsx","models/Contract.ts","components/ContractsTable.tsx","components/VariantSelector.tsx","components/SilentSwitch.tsx","components/MultiplierSelector.tsx","components/GameProperties.tsx","models/PlayerList.ts","components/Confirm.tsx","components/Players.tsx","models/GameSession.ts","lib/error.ts","services/localStorage.ts","components/TarockSheet.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["TYPE","SMALLEST_VARIANT","CARD_SUIT_VARIANT","BID_GROUPS","PARTY_LIKE","weight","ULTI_LIKE","CENTRUM_LIKE","CATCHES","OTHERS","SMALLEST_VARIANTS","PAGAT","EAGLE","CARD_SUIT_VARIANTS","CLUB","DIAMOND","HEART","SPADE","BIDS","PARTY","bidBaseScore","party","group","TRULL","canSilent","FOUR_KING","CATCH_THE_MAYOR","CATCH_THE_PAGAT","ULTI","variants","isNotWinIfSilent","UHU","DOUBLE_PARTY","VOLAT","PHEASANT","PHEASANT_IN_2ND","EIGHT_TAROCK","isWinByDefault","isDenyContra","NINE_TAROCK","FURRY","CENTRUM","SMALL_BIRD","LARGE_BIRD","KING_ULTI","KING_UHU","CSUZIMA","KLOPICZKY","getByType","type","bid","calculateScore","partyScore","makeFirstLetterCapital","word","length","split","first","rest","toUpperCase","join","toLowerCase","upperCaseToWords","upperCased","map","PARTY_SCORE_TYPE","create","id","v4uuid","name","baseScore","sessionScore","gameScore","update","updates","player","getOppositeType","playerType","DECLARER","OPPONENT","getTypeColor","Map","get","ContractSelector","bidsByGroup","onAddContract","useState","silentAndWin","setSilentAndWin","Grid","container","spacing","alignItems","sortBy","g","Object","keys","item","variant","display","color","Box","component","mr","Button","onClick","bidType","Bid","shouldWinWithSilent","taker","Player","isSilent","bidVariant","isWonByTaker","handleClick","size","disabled","FormControlLabel","control","Switch","checked","onChange","prev","label","validate","contract","contra","Error","includes","Math","log2","contractBaseScore","flow","calculateContractScore","silent","ACTION_TYPE","isPartyLike","partyScoreType","TOOK_THREE","TOOK_TWO","TOOK_ONE","SOLO","PARTY_SCORE","props","contracts","partyBaseScore","calledTarock","playerTypeScores","updateGameWithPlayerTypeScores","game","scores","calculatePlayerTypeScores","undefined","Contract","addContract","updatedContract","removeAllContracts","reduce","score","addScore","prevScore","another","VariantSelector","selected","render","onClose","open","setOpen","handleClose","Dialog","DialogContent","RadioGroup","event","target","value","Radio","DialogActions","SilentSwitch","FormGroup","MultiplierSelector","handleChange","IconButton","title","VariantSelectorModal","handleOpen","columns","field","headerName","valueGetter","onAction","CHANGE","newTaker","Checkbox","indeterminate","nextValue","_","DELETE","isContractField","ContractsTable","onDelete","handleAction","index","actionType","TableContainer","Table","TableHead","TableRow","column","TableCell","TableBody","rowIndex","cellIndex","curry","calledTarockOptions","XX","XIX","XVIII","XVII","XVI","XV","XIV","XIII","XII","partyScoreOptions","Game","GameProperties","alignContent","FormControl","InputLabel","Select","labelId","option","MenuItem","FormLabel","row","countByType","players","declarersNumber","opponentsNumber","clearType","setDefaultScores","filterByInGame","filter","mapToObjectById","playerList","playerListObject","Confrim","text","onConfirm","theme","useTheme","fullScreen","useMediaQuery","breakpoints","down","DialogTitle","DialogContentText","autoFocus","PlayerAvatar","Avatar","slice","EditablePlayerItem","onRemove","prop","Card","CardContent","direction","xs","TextField","Number","PlayerItem","playing","hasGameScore","gameScoreText","isWinner","CardHeader","avatar","subheader","fontSize","CardActions","Players","onPlayerListChange","onSaveScores","saveDisabled","onResetPlayers","onResetScores","edit","setEdit","handleRemove","updated","mapGameScoreToPlayers","PlayerList","numberOfDeclarers","numberOfOpponents","opponentsGameScore","declarersGameScore","calculateScoreByPlayerType","declarersScore","opponentsScore","isReadyForSave","numbers","playerNumberValid","isEqual","gameScoreValid","defined","Boolean","scoreSumAssigner","calculateGameSessionScores","playerListObjects","assignWith","ApplicationError","message","userMessage","PREFIX","NotSupportedStorageError","WrongDataStorageError","UnsuccessfulSavingStorageError","allBidsByGroup","bids","b","groupBy","storage","prefix","isSupported","window","localStorage","_checkSupport","_instance","_serialize","data","JSON","stringify","error","_unserialize","str","parse","getStorageKey","key","setItem","remove","removeItem","read","serialized","getItem","delete","storageInitializer","TarockSheet","setGame","setPlayers","gameScoreList","setGameScoreList","useEffect","GameSession","console","updatePlayersState","updateGameScoreListState","sessionScores","partyScoreTypeSelected","updatedGameScoreList","concat","prevGame","partyScoreTypeChanged","fromKlopiczkyToPartyLikeChanged","fromPartyLikeToKlopiczkyChanged","fromNullToKlopiczkyChanged","partyLikeAndEmptyContracts","Confirm","i","useAppStyle","makeStyles","padding","App","classes","AppBar","position","mt","ml","Container","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e40111ae.chunk.js","sourcesContent":["import groupBy from \"lodash/fp/groupBy\";\nimport sortBy from \"lodash/fp/sortBy\";\n\nexport interface Props extends Data {\n  type: TYPE;\n}\n\ninterface Data {\n  bidBaseScore: number | ((party: number) => number);\n  group?: GroupType;\n  variants?: Variant[];\n  canSilent?: boolean;\n  isWinByDefault?: boolean;\n  isNotWinIfSilent?: boolean;\n  isDenyContra?: boolean;\n}\n\nexport enum TYPE {\n  PARTY = \"PARTY\",\n  TRULL = \"TRULL\",\n  FOUR_KING = \"FOUR_KING\",\n  CATCH_THE_MAYOR = \"CATCH_THE_MAYOR\",\n  CATCH_THE_PAGAT = \"CATCH_THE_PAGAT\",\n  ULTI = \"ULTI\",\n  UHU = \"UHU\",\n  DOUBLE_PARTY = \"DOUBLE_PARTY\",\n  VOLAT = \"VOLAT\",\n  PHEASANT = \"PHEASANT\",\n  PHEASANT_IN_2ND = \"PHEASANT_IN_2ND\",\n  EIGHT_TAROCK = \"EIGHT_TAROCK\",\n  NINE_TAROCK = \"NINE_TAROCK\",\n  FURRY = \"FURRY\",\n  CENTRUM = \"CENTRUM\",\n  SMALL_BIRD = \"SMALL_BIRD\",\n  LARGE_BIRD = \"LARGE_BIRD\",\n  CSUZIMA = \"CSUZIMA\",\n  KING_ULTI = \"KING_ULTI\",\n  KING_UHU = \"KING_UHU\",\n  KLOPICZKY = \"KLOPICZKY\",\n}\n\nexport type GroupType =\n  | \"PARTY_LIKE\"\n  | \"ULTI_LIKE\"\n  | \"CENTRUM_LIKE\"\n  | \"CATCHES\"\n  | \"OTHERS\";\nconst BID_GROUPS: { [K in GroupType]: { weight: number } } = {\n  PARTY_LIKE: { weight: 10 },\n  ULTI_LIKE: { weight: 20 },\n  CENTRUM_LIKE: { weight: 30 },\n  CATCHES: { weight: 40 },\n  OTHERS: { weight: 50 },\n};\nexport const getGroupsOrderedByWeight = () =>\n  sortBy((g) => BID_GROUPS[g as GroupType].weight, Object.keys(BID_GROUPS));\n\nexport enum SMALLEST_VARIANT {\n  PAGAT = \"PAGAT\",\n  EAGLE = \"EAGLE\",\n}\n\nexport enum CARD_SUIT_VARIANT {\n  HEART = \"HEART\",\n  SPADE = \"SPADE\",\n  CLUB = \"CLUB\",\n  DIAMOND = \"DIAMOND\",\n}\n\nconst SMALLEST_VARIANTS = [SMALLEST_VARIANT.PAGAT, SMALLEST_VARIANT.EAGLE];\nconst CARD_SUIT_VARIANTS = [\n  CARD_SUIT_VARIANT.CLUB,\n  CARD_SUIT_VARIANT.DIAMOND,\n  CARD_SUIT_VARIANT.HEART,\n  CARD_SUIT_VARIANT.SPADE,\n];\n\nexport type Variant = SMALLEST_VARIANT | CARD_SUIT_VARIANT;\n\nconst BIDS: { [key in TYPE]: Data } = {\n  [TYPE.PARTY]: {\n    bidBaseScore: (party: number) => party,\n    group: \"PARTY_LIKE\",\n  },\n  [TYPE.TRULL]: { bidBaseScore: 2, canSilent: true },\n  [TYPE.FOUR_KING]: { bidBaseScore: 2, canSilent: true },\n  [TYPE.CATCH_THE_MAYOR]: {\n    bidBaseScore: 42,\n    canSilent: true,\n    group: \"CATCHES\",\n  },\n  [TYPE.CATCH_THE_PAGAT]: { bidBaseScore: 4, group: \"CATCHES\" },\n  [TYPE.ULTI]: {\n    bidBaseScore: 10,\n    variants: [...SMALLEST_VARIANTS],\n    canSilent: true,\n    group: \"ULTI_LIKE\",\n    isNotWinIfSilent: true,\n  },\n  [TYPE.UHU]: {\n    bidBaseScore: 15,\n    variants: [...SMALLEST_VARIANTS],\n    group: \"ULTI_LIKE\",\n  },\n  [TYPE.DOUBLE_PARTY]: {\n    bidBaseScore: (party: number) => party * 4,\n    canSilent: true,\n    group: \"PARTY_LIKE\",\n  },\n  [TYPE.VOLAT]: {\n    bidBaseScore: (party: number) => party * 6,\n    canSilent: true,\n    group: \"PARTY_LIKE\",\n  },\n  [TYPE.PHEASANT]: {\n    bidBaseScore: 20,\n    variants: [...SMALLEST_VARIANTS],\n    group: \"ULTI_LIKE\",\n  },\n  [TYPE.PHEASANT_IN_2ND]: {\n    bidBaseScore: 20,\n    variants: [...SMALLEST_VARIANTS],\n    group: \"ULTI_LIKE\",\n  },\n  [TYPE.EIGHT_TAROCK]: {\n    bidBaseScore: 1,\n    isWinByDefault: true,\n    isDenyContra: true,\n  },\n  [TYPE.NINE_TAROCK]: {\n    bidBaseScore: 2,\n    isWinByDefault: true,\n    isDenyContra: true,\n  },\n  [TYPE.FURRY]: {\n    bidBaseScore: 25,\n    variants: [...CARD_SUIT_VARIANTS],\n    group: \"ULTI_LIKE\",\n  },\n  [TYPE.CENTRUM]: { bidBaseScore: 10, group: \"CENTRUM_LIKE\" },\n  [TYPE.SMALL_BIRD]: { bidBaseScore: 10, group: \"CENTRUM_LIKE\" },\n  [TYPE.LARGE_BIRD]: { bidBaseScore: 10, group: \"CENTRUM_LIKE\" },\n  [TYPE.KING_ULTI]: {\n    bidBaseScore: 15,\n    variants: [...CARD_SUIT_VARIANTS],\n    group: \"ULTI_LIKE\",\n  },\n  [TYPE.KING_UHU]: {\n    bidBaseScore: 20,\n    variants: [...CARD_SUIT_VARIANTS],\n    group: \"ULTI_LIKE\",\n  },\n  [TYPE.CSUZIMA]: { bidBaseScore: 4 },\n  [TYPE.KLOPICZKY]: {\n    bidBaseScore: 3,\n    isWinByDefault: true,\n    isDenyContra: true,\n  },\n};\n\nexport const getByType = (type: TYPE): Props => ({ type, ...BIDS[type] });\n\nexport const getAll = (): Props[] =>\n  Object.keys(TYPE).map((b: TYPE) => getByType(b));\n\nexport type ByGroup = { [K in GroupType]: Props[] };\nexport const getAllByGroup = (): ByGroup => {\n  const bids = getAll();\n  return groupBy((bid) => bid.group || \"OTHERS\", bids) as ByGroup;\n};\n\nexport const canSilent = (bid: Props): boolean => bid?.canSilent === true;\n\nexport const calculateScore = (partyScore: number) => (bid: Props): number =>\n  typeof bid.bidBaseScore === \"function\"\n    ? bid.bidBaseScore(partyScore)\n    : bid.bidBaseScore;\n\nexport const hasVariant = (variant: Variant) => (bid: Props): boolean => {\n  const variants = bid?.variants || [];\n  return variants.includes(variant);\n};\n","import { createId, Id } from \"../lib/util\";\nimport * as Score from \"./Score\";\n\nexport enum TYPE {\n  DECLARER = \"DECLARER\",\n  OPPONENT = \"OPPONENT\",\n}\nexport interface Props {\n  id: Id;\n  name: string;\n  baseScore: number;\n  sessionScore: Score.Props;\n  gameScore: Score.Props;\n  type: TYPE | null;\n}\n\nexport const DEFAULT_BASE_SCORE = 100;\n\nexport const create = (): Props => ({\n  id: createId(),\n  name: \"\",\n  baseScore: DEFAULT_BASE_SCORE,\n  sessionScore: null,\n  gameScore: null,\n  type: null,\n});\n\nexport type UpdateProps = Partial<Omit<Props, \"id\">>;\nexport const update = (updates: UpdateProps) => (player: Props): Props => ({\n  ...player,\n  ...updates,\n});\n\nexport const getOppositeType = (playerType: TYPE): TYPE =>\n  playerType === TYPE.DECLARER ? TYPE.OPPONENT : TYPE.DECLARER;\n\ntype TypeColor = \"primary\" | \"secondary\" | \"default\";\nexport const getTypeColor = (playerType: TYPE | null): TypeColor => {\n  const mapper = new Map<TYPE | null, TypeColor>([\n    [TYPE.DECLARER, \"primary\"],\n    [TYPE.OPPONENT, \"secondary\"],\n    [null, \"default\"],\n  ]);\n  return mapper.get(playerType) || \"default\";\n};\n\nexport const rotateTypeWithNull = (playerType: TYPE | null): TYPE | null => {\n  const mapper = new Map([\n    [TYPE.DECLARER, TYPE.OPPONENT],\n    [TYPE.OPPONENT, null],\n    [null, TYPE.DECLARER],\n  ]);\n  return mapper.get(playerType) || null;\n};\n","import { v4 as v4uuid } from \"uuid\";\n\nconst makeFirstLetterCapital = (word: string): string => {\n  if (word.length < 1) {\n    return word;\n  }\n  const [first, ...rest] = word.split(\"\");\n  return `${first.toUpperCase()}${rest.join(\"\").toLowerCase()}`;\n};\n\nexport const upperCaseToWords = (upperCased: string): string => {\n  return upperCased.split(\"_\").map(makeFirstLetterCapital).join(\" \");\n};\n\nexport type Id = string;\nexport const createId = (): Id => v4uuid();\n","import * as Contract from \"./Contract\";\nimport * as Player from \"./Player\";\nimport * as Score from \"./Score\";\n\ntype PlayerTypeScore = {\n  [Player.TYPE.DECLARER]: Score.Props;\n  [Player.TYPE.OPPONENT]: Score.Props;\n};\nexport interface Props {\n  contracts: Contract.Props[];\n  partyScoreType: PARTY_SCORE_TYPE | null;\n  partyBaseScore: number;\n  calledTarock: CalledTarockType | null;\n  playerTypeScores: PlayerTypeScore;\n}\n\ntype CalledTarockType =\n  | \"XX\"\n  | \"XIX\"\n  | \"XVIII\"\n  | \"XVII\"\n  | \"XVI\"\n  | \"XV\"\n  | \"XIV\"\n  | \"XIII\"\n  | \"XII\";\n\nexport const CALLED_TAROCK: { [K in CalledTarockType]: CalledTarockType } = {\n  XX: \"XX\",\n  XIX: \"XIX\",\n  XVIII: \"XVIII\",\n  XVII: \"XVII\",\n  XVI: \"XVI\",\n  XV: \"XV\",\n  XIV: \"XIV\",\n  XIII: \"XIII\",\n  XII: \"XII\",\n};\n\nexport enum PARTY_SCORE_TYPE {\n  KLOPICZKY = \"KLOPICZKY\",\n  TOOK_THREE = \"TOOK_THREE\",\n  TOOK_TWO = \"TOOK_TWO\",\n  TOOK_ONE = \"TOOK_ONE\",\n  SOLO = \"SOLO\",\n}\nexport type PartyScoreValue = 0 | 1 | 2 | 3 | 4;\n\nexport const isPartyLike = (partyScoreType: PARTY_SCORE_TYPE | null): boolean =>\n  partyScoreType === null\n    ? false\n    : [\n        PARTY_SCORE_TYPE.TOOK_THREE,\n        PARTY_SCORE_TYPE.TOOK_TWO,\n        PARTY_SCORE_TYPE.TOOK_ONE,\n        PARTY_SCORE_TYPE.SOLO,\n      ].includes(partyScoreType);\n\nexport const PARTY_SCORE: { [K in PARTY_SCORE_TYPE]: PartyScoreValue } = {\n  [PARTY_SCORE_TYPE.TOOK_THREE]: 1,\n  [PARTY_SCORE_TYPE.TOOK_TWO]: 2,\n  [PARTY_SCORE_TYPE.TOOK_ONE]: 3,\n  [PARTY_SCORE_TYPE.SOLO]: 4,\n  [PARTY_SCORE_TYPE.KLOPICZKY]: 0,\n};\n\nexport interface CreateProps {\n  partyScoreType?: PARTY_SCORE_TYPE;\n  calledTarock?: CalledTarockType;\n}\nexport const create = (props: CreateProps = {}): Props => ({\n  contracts: [],\n  partyScoreType: props.partyScoreType || null,\n  partyBaseScore: 1,\n  calledTarock: props.calledTarock || null,\n  playerTypeScores: {\n    [Player.TYPE.DECLARER]: null,\n    [Player.TYPE.OPPONENT]: null,\n  },\n});\n\nconst updateGameWithPlayerTypeScores = (game: Props): Props => {\n  const scores = calculatePlayerTypeScores(game);\n\n  return {\n    ...game,\n    playerTypeScores: { ...scores },\n  };\n};\n\nexport interface UpdateProps {\n  partyScoreType?: PARTY_SCORE_TYPE;\n  calledTarock?: CalledTarockType | null;\n  partyBaseScore?: number;\n}\nexport const update = (updates: UpdateProps) => (game: Props): Props => {\n  const partyScoreType =\n    updates.partyScoreType === undefined\n      ? game.partyScoreType\n      : updates.partyScoreType;\n  const partyBaseScore =\n    updates.partyBaseScore === undefined\n      ? game.partyBaseScore\n      : updates.partyBaseScore;\n  const partyScore =\n    partyScoreType === null\n      ? null\n      : PARTY_SCORE[partyScoreType] * partyBaseScore;\n  const contracts =\n    partyScore === null\n      ? game.contracts\n      : game.contracts.map(Contract.updateContractBaseScore(partyScore));\n\n  return updateGameWithPlayerTypeScores({\n    ...game,\n    contracts: [...contracts],\n    ...updates,\n  });\n};\n\nexport const addContractFlipped = (contract: Contract.Props) => (\n  game: Props\n): Props => addContract(game)(contract);\n\nexport const addContract = (game: Props) => (\n  contract: Contract.Props\n): Props => {\n  const partyScore = game?.partyScoreType\n    ? PARTY_SCORE[game?.partyScoreType]\n    : null;\n  const updatedContract = Contract.create({ ...contract, partyScore });\n  return updateGameWithPlayerTypeScores({\n    ...game,\n    contracts: [...game.contracts, updatedContract],\n  });\n};\n\nexport const removeContractAt = (game: Props) => (index: number): Props => {\n  return updateGameWithPlayerTypeScores({\n    ...game,\n    contracts: game.contracts.filter((_, i) => i !== index),\n  });\n};\n\nexport const removeAllContracts = (game: Props): Props => ({\n  ...game,\n  contracts: [],\n});\n\nexport const updateGameContractAt = (game: Props) => (index: number) => (\n  updated: Contract.Props\n): Props => {\n  return updateGameWithPlayerTypeScores({\n    ...game,\n    contracts: game.contracts.map((contract, i) =>\n      i === index ? { ...updated } : contract\n    ),\n  });\n};\n\nexport const calculatePlayerTypeScores = (game: Props): PlayerTypeScore => {\n  return game.contracts.reduce(\n    (partyScore, contract) => {\n      const score = Contract.calculateContractScore(contract);\n      if (score === null) {\n        return partyScore;\n      }\n\n      const addScore = (\n        prevScore: Score.Props,\n        score: Score.Props\n      ): Score.Props => {\n        if (prevScore === null) {\n          return score;\n        } else {\n          return score === null ? prevScore : score + prevScore;\n        }\n      };\n\n      const taker = contract.taker;\n      const another = Player.getOppositeType(taker);\n\n      return {\n        ...partyScore,\n        [taker]: addScore(partyScore[taker], score),\n        [another]: addScore(\n          partyScore[another],\n          score === null ? null : score * -1\n        ),\n      };\n    },\n    {\n      [Player.TYPE.DECLARER]: null,\n      [Player.TYPE.OPPONENT]: null,\n    }\n  );\n};\n","import React, { useState } from \"react\";\nimport {\n  Button,\n  Grid,\n  Box,\n  Typography as T,\n  Switch,\n  FormControlLabel,\n} from \"@material-ui/core\";\nimport * as Bid from \"../models/Bid\";\nimport { upperCaseToWords } from \"../lib/util\";\nimport * as Contract from \"../models/Contract\";\nimport * as Player from \"../models/Player\";\n\ninterface BidSelectorProps {\n  bidsByGroup: Bid.ByGroup;\n  onAddContract: (contract: Partial<Contract.Props>) => void;\n}\nconst ContractSelector = ({ bidsByGroup, onAddContract }: BidSelectorProps) => {\n  const [silentAndWin, setSilentAndWin] = useState<boolean>(false);\n\n  const handleSwitch = () => {\n    setSilentAndWin((prev: boolean) => !prev);\n  };\n  const handleClick = (bidType: Bid.TYPE) => {\n    const bid = Bid.getByType(bidType);\n    const shouldWinWithSilent = silentAndWin && !bid.isNotWinIfSilent;\n    onAddContract({\n      bidType: bidType,\n      taker: Player.TYPE.DECLARER,\n      isSilent: silentAndWin && Bid.canSilent(bid),\n      bidVariant: null,\n      isWonByTaker: bid.isWinByDefault || shouldWinWithSilent || null,\n    });\n  };\n  return (\n    <Grid container spacing={1} alignItems=\"flex-end\">\n      {Bid.getGroupsOrderedByWeight().map((group) => (\n        <Grid item key={group}>\n          <T variant=\"caption\" display=\"block\" color=\"textSecondary\">\n            {upperCaseToWords(group)}\n          </T>\n          {bidsByGroup[group as Bid.GroupType].map((bid) => (\n            <Box key={bid.type} component=\"span\" mr={0.5}>\n              <Button\n                variant=\"outlined\"\n                color=\"default\"\n                onClick={() => handleClick(bid.type)}\n                size=\"small\"\n                disabled={silentAndWin && !Bid.canSilent(bid)}\n              >\n                {upperCaseToWords(bid.type)}\n              </Button>\n            </Box>\n          ))}\n        </Grid>\n      ))}\n      <Grid item>\n        <FormControlLabel\n          control={\n            <Switch\n              checked={silentAndWin}\n              onChange={handleSwitch}\n              name=\"silentAndWinSwitch\"\n              color=\"default\"\n            />\n          }\n          label=\"Silent & Win\"\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default ContractSelector;\n","import * as Player from \"./Player\";\nimport * as Score from \"./Score\";\nimport * as Bid from \"./Bid\";\nimport flow from \"lodash/fp/flow\";\nimport * as Game from \"./Game\";\n\nconst CONTRA_NAMES = [\"None\", \"Contra\", \"Recontra\", \"Subcontra\", \"Mortcontra\"];\n\ntype Multiplier = number;\nexport interface Props {\n  bidType: Bid.TYPE;\n  contractBaseScore: number | null;\n  bidVariant: Bid.Variant | null;\n  contra: Multiplier;\n  isWonByTaker: boolean | null;\n  taker: Player.TYPE;\n  isSilent: boolean;\n}\n\nconst validate = (contract: Props): void | undefined => {\n  const { isSilent, bidType, bidVariant, contra } = contract;\n  const bid = Bid.getByType(bidType);\n  if (isSilent && !Bid.canSilent(bid)) {\n    throw new Error(`${bid.type} can not be silent.`);\n  }\n  if (bidVariant && !Bid.hasVariant(bidVariant)(bid)) {\n    throw new Error(`${bid.type} does not have ${bidVariant} variant.`);\n  }\n  const isPowerOfTwo = Math.log2(contra) % 1 === 0;\n  if (!isPowerOfTwo) {\n    throw new Error(`Contra must be power of two, but ${contra} given.`);\n  }\n  if (contra < 1) {\n    throw new Error(`Contra must be greater than 1, but ${contra} given.`);\n  }\n};\n\nexport interface CreateProps {\n  bidType: Bid.TYPE;\n  partyScore?: Game.PartyScoreValue | null;\n  taker: Player.TYPE;\n  isSilent?: boolean;\n  bidVariant?: Bid.Variant | null;\n  isWonByTaker?: boolean | null;\n}\nexport const create = ({\n  bidType,\n  taker,\n  partyScore = null,\n  isSilent = false,\n  bidVariant = null,\n  isWonByTaker = null,\n}: CreateProps): Props => {\n  const contract = {\n    bidType,\n    bidVariant,\n    contra: 1,\n    isSilent,\n    isWonByTaker,\n    taker,\n    contractBaseScore:\n      partyScore !== null\n        ? flow(Bid.getByType, Bid.calculateScore(partyScore))(bidType)\n        : null,\n  };\n  validate(contract);\n  return contract;\n};\n\nexport const updateContractBaseScore = (partyScore: number) => (\n  contract: Props\n): Props => ({\n  ...contract,\n  contractBaseScore: flow(\n    Bid.getByType,\n    Bid.calculateScore(partyScore)\n  )(contract.bidType),\n});\n\nexport type UpdateProps = Partial<\n  Pick<Props, \"taker\" | \"isWonByTaker\" | \"isSilent\" | \"bidVariant\" | \"contra\">\n>;\nexport const update = (updates: UpdateProps) => (contract: Props): Props => {\n  const updated = { ...contract, ...updates };\n  validate(updated);\n  return updated;\n};\n\nexport const calculateContractScore = (contract: Props): Score.Props => {\n  const {\n    isWonByTaker,\n    contractBaseScore,\n    contra,\n    isSilent: silent,\n  } = contract;\n  if (isWonByTaker === null || contractBaseScore === null) {\n    return null;\n  }\n  const multiplier = silent ? 0.5 : contra;\n  const sign = isWonByTaker ? 1 : -1;\n  return sign * contractBaseScore * multiplier;\n};\n","import React from \"react\";\nimport * as Contract from \"../models/Contract\";\nimport { upperCaseToWords } from \"../lib/util\";\nimport {\n  TableContainer,\n  TableHead,\n  TableBody,\n  Table,\n  TableCell,\n  TableRow,\n  IconButton,\n  Button,\n  Checkbox,\n  Typography as T,\n} from \"@material-ui/core\";\nimport { MdDelete as RemoveIcon } from \"react-icons/md\";\nimport * as Bid from \"../models/Bid\";\nimport VariantSelector from \"./VariantSelector\";\nimport SilentSwitch from \"./SilentSwitch\";\nimport MultiplierSelector from \"./MultiplierSelector\";\nimport * as Player from \"../models/Player\";\nimport curry from \"lodash/fp/curry\";\n\ninterface VariantSelectorModalProps {\n  contract: Contract.Props;\n  onChange: (variant: Bid.Variant) => void;\n}\nconst VariantSelectorModal = (props: VariantSelectorModalProps) => {\n  const { contract, onChange } = props;\n  const handleChange = (variant: Bid.Variant) => {\n    onChange(variant);\n  };\n  const bid = Bid.getByType(contract.bidType);\n\n  if (!bid.variants) {\n    return null;\n  }\n\n  return (\n    <>\n      <VariantSelector\n        variants={bid.variants || []}\n        selected={contract.bidVariant}\n        onChange={handleChange}\n        render={(handleOpen) => (\n          <Button\n            variant=\"outlined\"\n            color=\"default\"\n            onClick={handleOpen}\n            size=\"small\"\n          >\n            {upperCaseToWords(contract.bidVariant ?? \"Select variant\")}\n          </Button>\n        )}\n      />\n    </>\n  );\n};\n\nenum ACTION_TYPE {\n  DELETE = \"DELETE\",\n  CHANGE = \"CHANGE\",\n}\n\ntype ContractField = keyof Contract.UpdateProps;\ntype Field = ContractField | string;\ninterface ColumnDefinition {\n  field: Field;\n  headerName: string;\n  valueGetter?: (\n    contract: Contract.Props,\n    onAction?: (actionType: ACTION_TYPE, value?: any) => void\n  ) => React.ReactNode;\n}\nconst columns: ColumnDefinition[] = [\n  {\n    field: \"bidType\",\n    headerName: \"Bid\",\n    valueGetter: (contract: Contract.Props) =>\n      upperCaseToWords(contract.bidType),\n  },\n  {\n    field: \"bidVariant\",\n    headerName: \"Variant\",\n    valueGetter: (contract, onAction) => {\n      const handleChange = (variant: Bid.Variant) =>\n        onAction && onAction(ACTION_TYPE.CHANGE, variant);\n\n      return (\n        <VariantSelectorModal contract={contract} onChange={handleChange} />\n      );\n    },\n  },\n  {\n    field: \"taker\",\n    headerName: \"Taker\",\n    valueGetter: (contract, onAction) => {\n      const newTaker = Player.getOppositeType(contract.taker);\n      const handleClick = () =>\n        onAction && onAction(ACTION_TYPE.CHANGE, newTaker);\n      const color = Player.getTypeColor(contract.taker);\n      return (\n        <Button\n          color={color}\n          onClick={handleClick}\n          variant=\"outlined\"\n          size=\"small\"\n        >\n          {contract.taker}\n        </Button>\n      );\n    },\n  },\n  {\n    field: \"isSilent\",\n    headerName: \"Silent\",\n    valueGetter: (contract, onAction) => {\n      const handleChange = (isSilent: boolean) =>\n        onAction && onAction(ACTION_TYPE.CHANGE, isSilent);\n      return (\n        <SilentSwitch\n          bidType={contract.bidType}\n          onChange={handleChange}\n          value={contract.isSilent}\n        />\n      );\n    },\n  },\n  {\n    field: \"contractBaseScore\",\n    headerName: \"Base Score\",\n  },\n  {\n    headerName: \"Contra\",\n    field: \"contra\",\n    valueGetter: (contract, onAction) => {\n      const handleChange = (contra: number) =>\n        onAction && onAction(ACTION_TYPE.CHANGE, contra);\n\n      if (Bid.getByType(contract.bidType).isDenyContra) {\n        return null;\n      }\n      return (\n        <MultiplierSelector\n          onChange={handleChange}\n          value={contract.contra}\n          disabled={contract.isSilent}\n        />\n      );\n    },\n  },\n  {\n    field: \"isWonByTaker\",\n    headerName: \"Win by the Taker?\",\n    valueGetter: (contract, onAction) => {\n      const { isWonByTaker, taker } = contract;\n      const handleClick = () => {\n        const nextValue =\n          isWonByTaker === null ? true : isWonByTaker === true ? false : null;\n        onAction && onAction(ACTION_TYPE.CHANGE, nextValue);\n      };\n\n      const title =\n        isWonByTaker === true\n          ? \"Won by the Taker!\"\n          : isWonByTaker === false\n          ? \"Lose by the Taker!\"\n          : \"Still unknown / Not count in final score...\";\n\n      return (\n        <Checkbox\n          title={title}\n          checked={isWonByTaker === true}\n          indeterminate={isWonByTaker === null}\n          onClick={handleClick}\n          color={taker === Player.TYPE.DECLARER ? \"primary\" : \"secondary\"}\n        />\n      );\n    },\n  },\n  {\n    field: \"takerScore\",\n    headerName: \"Taker score\",\n    valueGetter: (contract) => (\n      <T\n        variant=\"button\"\n        color={\n          contract.taker === Player.TYPE.DECLARER ? \"primary\" : \"secondary\"\n        }\n      >\n        {Contract.calculateContractScore(contract)}\n      </T>\n    ),\n  },\n  {\n    field: \"actions\",\n    headerName: \" \",\n    valueGetter: (_, onAction) => {\n      const handleClick = () => onAction && onAction(ACTION_TYPE.DELETE, null);\n      return (\n        <IconButton title=\"Remove\" onClick={handleClick}>\n          <RemoveIcon />\n        </IconButton>\n      );\n    },\n  },\n];\n\nconst isContractField = (\n  field: Field,\n  contract: Contract.Props\n): field is ContractField => {\n  return field in contract;\n};\n\ninterface ContractsTableProps {\n  contracts: Contract.Props[];\n  onChange: (index: number, field: keyof Contract.Props, value: any) => void;\n  onDelete: (index: number) => void;\n}\nconst ContractsTable = (props: ContractsTableProps) => {\n  const { contracts, onChange, onDelete } = props;\n\n  function handleAction(\n    index: number,\n    field: ContractField | null,\n    actionType: ACTION_TYPE,\n    value: any\n  ) {\n    if (actionType === ACTION_TYPE.DELETE) {\n      return onDelete(index);\n    }\n    if (actionType === ACTION_TYPE.CHANGE && field !== null) {\n      return onChange(index, field, value);\n    }\n    throw new Error(\n      `Invalid if ACTION_TYPE (${actionType}) is CHANGE the field can not be null.`\n    );\n  }\n\n  return (\n    <TableContainer>\n      <Table>\n        <TableHead>\n          <TableRow>\n            {columns.map((column, index) => (\n              <TableCell key={index}> {column.headerName} </TableCell>\n            ))}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {contracts.map((contract, rowIndex) => (\n            <TableRow key={rowIndex}>\n              {columns.map((column, cellIndex) => (\n                <TableCell key={cellIndex}>\n                  {isContractField(column.field, contract)\n                    ? column.valueGetter\n                      ? column.valueGetter(\n                          contract,\n                          curry(handleAction)(rowIndex)(column.field)\n                        )\n                      : contract[column.field]\n                    : column.valueGetter\n                    ? column.valueGetter(\n                        contract,\n                        curry(handleAction)(rowIndex)(null)\n                      )\n                    : \" \"}\n                </TableCell>\n              ))}\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default ContractsTable;\n","import React, { ChangeEvent, useState, ReactNode } from \"react\";\nimport {\n  FormControlLabel,\n  RadioGroup,\n  Radio,\n  Button,\n  Dialog,\n  DialogContent,\n  DialogActions,\n} from \"@material-ui/core\";\nimport * as Bid from \"../models/Bid\";\nimport { upperCaseToWords } from \"../lib/util\";\n\ninterface VariantSelectorProps {\n  render: (handleOpen: () => void) => ReactNode;\n  variants: Bid.Variant[];\n  selected: Bid.Variant | null;\n  onChange: (variant: Bid.Variant) => void;\n  onClose?: () => void;\n}\nconst VariantSelector = (props: VariantSelectorProps) => {\n  const { variants, selected, onChange, render, onClose } = props;\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => {\n    setOpen(false);\n    onClose && onClose();\n  };\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    onChange(event.target.value as Bid.Variant);\n    handleClose();\n  };\n\n  return (\n    <>\n      {render(handleOpen)}\n      <Dialog open={open} onClose={handleClose}>\n        <DialogContent>\n          <RadioGroup name=\"variants\" onChange={handleChange} value={selected}>\n            {variants.map((variant: Bid.Variant) => (\n              <FormControlLabel\n                control={<Radio color=\"default\" value={variant} />}\n                label={upperCaseToWords(variant)}\n              />\n            ))}\n          </RadioGroup>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} variant=\"outlined\">\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nexport default VariantSelector;\n","import React from \"react\";\nimport { Switch, FormControlLabel, FormGroup } from \"@material-ui/core\";\nimport * as Bid from \"../models/Bid\";\n\ninterface SilentSwitchProps {\n  bidType: Bid.TYPE;\n  onChange: (value: boolean) => void;\n  value?: boolean;\n  label?: boolean;\n}\nconst SilentSwitch = ({\n  bidType,\n  onChange,\n  value,\n  label,\n}: SilentSwitchProps) => {\n  const bid = Bid.getByType(bidType);\n  if (!Bid.canSilent(bid)) {\n    return null;\n  }\n  return (\n    <FormGroup>\n      <FormControlLabel\n        control={\n          <Switch\n            onChange={(event) => onChange(event.target.checked)}\n            checked={value}\n            color=\"default\"\n          />\n        }\n        label={label ? \"Silent\" : \"\"}\n      />\n    </FormGroup>\n  );\n};\nexport default SilentSwitch;\n","import React from \"react\";\nimport { IconButton, Typography as T } from \"@material-ui/core\";\nimport {\n  MdArrowUpward as DoubleContraIcon,\n  MdArrowDownward as DivideContraIcon,\n} from \"react-icons/md\";\ninterface MultiplierSelectorProps {\n  value: number;\n  onChange: (value: number) => void;\n  disabled?: boolean;\n}\nconst MultiplierSelector = ({\n  value,\n  onChange,\n  disabled,\n}: MultiplierSelectorProps) => {\n  const handleChange = (value: number) => onChange && onChange(value);\n  const handleDivide = () => value > 1 && handleChange(value / 2);\n  const handleDouble = () => handleChange(value * 2);\n\n  return (\n    <>\n      <T\n        component={disabled ? \"s\" : \"span\"}\n        color={disabled ? \"textPrimary\" : \"textSecondary\"}\n      >\n        {value}\n      </T>\n      <IconButton title=\"Double\" onClick={handleDouble} disabled={disabled}>\n        <DoubleContraIcon />\n      </IconButton>\n      <IconButton\n        title=\"Divide by 2\"\n        onClick={handleDivide}\n        disabled={value === 1 || disabled}\n      >\n        <DivideContraIcon />\n      </IconButton>\n    </>\n  );\n};\n\nexport default MultiplierSelector;\n","import React, { ChangeEvent } from \"react\";\nimport * as Game from \"../models/Game\";\nimport {\n  Grid,\n  FormControl,\n  Select,\n  MenuItem,\n  InputLabel,\n  FormLabel,\n  RadioGroup,\n  FormControlLabel,\n  Radio,\n  Typography as T,\n} from \"@material-ui/core\";\nimport { upperCaseToWords } from \"../lib/util\";\nimport MultiplierSelector from \"./MultiplierSelector\";\n\nconst calledTarockOptions = [\"_None_\", ...Object.keys(Game.CALLED_TAROCK)];\nconst partyScoreOptions = Object.keys(Game.PARTY_SCORE);\n\ninterface GamePropertiesProps {\n  game: Game.Props;\n  onChange: (property: keyof Game.UpdateProps, value: any) => void;\n}\nconst GameProperties = (props: GamePropertiesProps) => {\n  const { game, onChange } = props;\n  return (\n    <Grid container spacing={3} alignContent=\"space-around\">\n      <Grid item>\n        <FormControl component=\"fieldset\">\n          <InputLabel id=\"called-tarock-selector\">Called</InputLabel>\n          <Select\n            value={game.calledTarock || \"_None_\"}\n            onChange={(event: ChangeEvent<{ value: string }>) => {\n              onChange(\"calledTarock\", event.target.value);\n            }}\n            labelId=\"called-tarock-selector\"\n          >\n            {calledTarockOptions.map((option) => (\n              <MenuItem key={option} value={option}>\n                {option === \"_None_\" ? \"None\" : option}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </Grid>\n      <Grid item>\n        <FormControl component=\"fieldset\">\n          <FormLabel>Party Score</FormLabel>\n          <RadioGroup\n            row\n            value={game.partyScoreType}\n            onChange={(event: ChangeEvent<HTMLInputElement>) => {\n              onChange(\n                \"partyScoreType\",\n                event.target.value as Game.PARTY_SCORE_TYPE\n              );\n            }}\n          >\n            {partyScoreOptions.map((option: Game.PARTY_SCORE_TYPE) => (\n              <FormControlLabel\n                key={option}\n                value={option}\n                control={<Radio color=\"default\" />}\n                label={upperCaseToWords(option)}\n              />\n            ))}\n          </RadioGroup>\n        </FormControl>\n      </Grid>\n      <Grid item>\n        <T variant=\"caption\" display=\"block\" color=\"textSecondary\">\n          Party Base Score\n        </T>\n        <MultiplierSelector\n          value={game.partyBaseScore}\n          onChange={(score) => {\n            onChange(\"partyBaseScore\", score);\n          }}\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default GameProperties;\n","import * as Player from \"./Player\";\n\nexport type Props = Player.Props[];\n\nexport const add = (playerList: Props) => (player: Player.Props): Props => {\n  return [...playerList, player];\n};\n\nexport const remove = (playerList: Props) => (player: Player.Props): Props =>\n  playerList.filter(({ id }) => id !== player.id);\n\nexport const update = (playerList: Props) => (updated: Player.Props): Props =>\n  playerList.map((player) => (player.id === updated.id ? updated : player));\n\nexport const countByType = (players: Props): [number, number] => {\n  const [declarersNumber, opponentsNumber] = players.reduce(\n    ([declarersNumber, opponentsNumber], player) => {\n      if (player.type === Player.TYPE.OPPONENT) {\n        return [declarersNumber, opponentsNumber + 1];\n      } else if (player.type === Player.TYPE.DECLARER) {\n        return [declarersNumber + 1, opponentsNumber];\n      } else {\n        return [declarersNumber, opponentsNumber];\n      }\n    },\n    [0, 0]\n  );\n  return [declarersNumber, opponentsNumber];\n};\n\nexport const clearType = (players: Props): Props =>\n  players.map((player) => Player.update({ type: null })(player));\n\nexport const setDefaultScores = (players: Props): Props =>\n  players.map((player) =>\n    Player.update({ sessionScore: null, baseScore: Player.DEFAULT_BASE_SCORE })(\n      player\n    )\n  );\n\nexport const filterByInGame = (players: Props): Props =>\n  players.filter((player) => player.type !== null);\n\nexport type PlayerMap = { [key: string]: Player.Props };\nexport const mapToObjectById = (playerList: Props): PlayerMap => {\n  return playerList.reduce((playerListObject, player) => {\n    playerListObject[player.id as string] = player;\n    return playerListObject;\n  }, {} as PlayerMap);\n};\n","import React, { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport { DialogTitle } from \"@material-ui/core\";\n\ninterface ConfirmProps {\n  title?: string;\n  text?: string;\n  target: (clickHandler: () => void) => React.ReactElement;\n  onConfirm: () => void;\n}\n\nconst Confrim = ({\n  text = \"\",\n  title = \"\",\n  target,\n  onConfirm,\n}: ConfirmProps) => {\n  const [open, setOpen] = useState(false);\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleOk = () => {\n    onConfirm();\n    handleClose();\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <>\n      {target(handleClick)}\n      <Dialog fullScreen={fullScreen} open={open} onClose={handleClose}>\n        <DialogTitle>{title}</DialogTitle>\n        <DialogContent>\n          <DialogContentText>{text}</DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleOk} color=\"default\" variant=\"outlined\">\n            Ok, do it!\n          </Button>\n          <Button\n            onClick={handleClose}\n            color=\"default\"\n            variant=\"outlined\"\n            autoFocus\n          >\n            No, cancel it!\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nexport default Confrim;\n","import {\n  Button,\n  TextField,\n  Grid,\n  Card,\n  CardHeader,\n  Avatar,\n  CardContent,\n  CardActions,\n  IconButton,\n} from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport * as Player from \"../models/Player\";\nimport * as PlayerList from \"../models/PlayerList\";\nimport { MdDelete as RemoveIcon } from \"react-icons/md\";\nimport { MdEdit as EditIcon } from \"react-icons/md\";\nimport { MdPerson as UserIcon } from \"react-icons/md\";\nimport { MdPersonAdd as AddUserIcon } from \"react-icons/md\";\nimport { MdDone as FinishEditingIcon } from \"react-icons/md\";\nimport WinnerIcon from \"@material-ui/icons/EmojiEvents\";\nimport Confrim from \"./Confirm\";\nimport flow from \"lodash/fp/flow\";\n\ninterface PlayerAvatarProps {\n  player: Player.Props;\n}\nconst PlayerAvatar = ({ player }: PlayerAvatarProps) => (\n  <Avatar>\n    {player.name.length > 0 ? <>{player.name.slice(0, 2)}</> : <UserIcon />}\n  </Avatar>\n);\n\ninterface EditablePlayerItemProps {\n  player: Player.Props;\n  onRemove: (player: Player.Props) => void;\n  onChange: (updated: Player.Props) => void;\n}\nconst EditablePlayerItem = (props: EditablePlayerItemProps) => {\n  const { player, onRemove, onChange } = props;\n  const handleRemove = () => onRemove(player);\n  const handleChange = (prop: string) => (value: any) => {\n    onChange(Player.update({ [prop]: value })(player));\n  };\n  const handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    handleChange(\"name\")(event.target.value);\n  };\n  const handleBaseScoreChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    const value = event.target.value;\n    handleChange(\"baseScore\")(value.length > 0 ? Number(value) : null);\n  };\n  return (\n    <Card>\n      <CardContent>\n        <Grid container direction=\"row\" spacing={2}>\n          <Grid item>\n            <PlayerAvatar player={player} />\n          </Grid>\n          <Grid container item direction=\"column\" xs spacing={2}>\n            <Grid item>\n              <TextField\n                id={`${player.id}_name`}\n                label=\"Name\"\n                value={player.name}\n                onChange={handleNameChange}\n              />\n            </Grid>\n            <Grid item>\n              <TextField\n                id={`${player.id}_baseScore`}\n                label=\"Base Score\"\n                type=\"number\"\n                value={player.baseScore}\n                onChange={handleBaseScoreChange}\n              />\n            </Grid>\n          </Grid>\n          <Grid item>\n            <Confrim\n              title={`Do you want to remove ${player.name || \"this player\"}?`}\n              text=\"It will remove the player, and deletes its score too.\"\n              target={(handleClick) => (\n                <IconButton onClick={handleClick}>\n                  <RemoveIcon />\n                </IconButton>\n              )}\n              onConfirm={handleRemove}\n            />\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\ninterface PlayerItemProps {\n  player: Player.Props;\n  onChange: (updated: Player.Props) => void;\n}\nconst PlayerItem = ({ player, onChange }: PlayerItemProps) => {\n  const handleChange = () => {\n    onChange(\n      Player.update({ type: Player.rotateTypeWithNull(player.type) })(player)\n    );\n  };\n  const GAME_WINNER_SCORE = 180;\n  const color = Player.getTypeColor(player.type);\n  const playing = player.type !== null;\n  const hasGameScore = player.gameScore !== null;\n  const gameScoreText = playing && hasGameScore ? ` (${player.gameScore})` : \"\";\n  const score =\n    player.sessionScore !== null\n      ? player.sessionScore + player.baseScore\n      : player.baseScore;\n  const isWinner = score > GAME_WINNER_SCORE;\n  return (\n    <Card>\n      <CardHeader\n        avatar={<PlayerAvatar player={player} />}\n        title={player.name}\n        subheader={\n          <span>\n            {isWinner && <WinnerIcon fontSize=\"small\" color=\"action\" />}\n            {`${score}${gameScoreText}`}\n          </span>\n        }\n      />\n      <CardActions>\n        <Button variant=\"outlined\" color={color} onClick={handleChange}>\n          {player.type || \"Not playing\"}\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\ninterface PlayersProps {\n  players: Player.Props[];\n  onPlayerListChange: (playerList: PlayerList.Props) => void;\n  onSaveScores: () => void;\n  saveDisabled: boolean;\n  onResetPlayers: () => void;\n  onResetScores: () => void;\n}\nconst Players = (props: PlayersProps) => {\n  const {\n    players,\n    onPlayerListChange,\n    onSaveScores,\n    saveDisabled,\n    onResetPlayers,\n    onResetScores,\n  } = props;\n  const [edit, setEdit] = useState(false);\n\n  const handleToogleEdit = () => setEdit((prev) => !prev);\n  const handleAdd = () => {\n    flow(Player.create, PlayerList.add(players), onPlayerListChange)();\n  };\n  const handleRemove = (player: Player.Props) => {\n    flow(PlayerList.remove(players), onPlayerListChange)(player);\n  };\n  const handleChange = (updated: Player.Props) => {\n    flow(PlayerList.update(players), onPlayerListChange)(updated);\n  };\n\n  return (\n    <Grid container spacing={1}>\n      <Grid item container direction=\"row\" alignItems=\"center\" spacing={1}>\n        <Grid item>\n          <IconButton onClick={handleAdd} title=\"Add new player\">\n            <AddUserIcon />\n          </IconButton>\n        </Grid>\n        <Grid item>\n          <IconButton\n            onClick={handleToogleEdit}\n            title={edit ? \"Finish editing\" : \"Edit user properties\"}\n          >\n            {edit ? <FinishEditingIcon /> : <EditIcon />}\n          </IconButton>\n        </Grid>\n        <Grid item>\n          <Button\n            variant=\"outlined\"\n            disabled={saveDisabled}\n            onClick={onSaveScores}\n          >\n            Save scores\n          </Button>\n        </Grid>\n        <Grid item>\n          <Confrim\n            title=\"Do you want to reset the Players?\"\n            text=\"It will remove all players, and also delete their scores.\"\n            target={(handleClick) => (\n              <Button variant=\"outlined\" onClick={handleClick}>\n                Reset Players\n              </Button>\n            )}\n            onConfirm={onResetPlayers}\n          />\n        </Grid>\n        <Grid item>\n          <Confrim\n            title=\"Do you want to reset the Scores?\"\n            text={`It will reset the scores and base scores to the default ${Player.DEFAULT_BASE_SCORE}, but keeps all the players.`}\n            target={(handleClick) => (\n              <Button variant=\"outlined\" onClick={handleClick}>\n                Reset Scores\n              </Button>\n            )}\n            onConfirm={onResetScores}\n          />\n        </Grid>\n      </Grid>\n      {players.map((player) => (\n        <Grid key={player.id} item xs={edit ? 3 : false}>\n          {edit ? (\n            <EditablePlayerItem\n              onChange={handleChange}\n              onRemove={handleRemove}\n              player={player}\n            />\n          ) : (\n            <PlayerItem player={player} onChange={handleChange} />\n          )}\n        </Grid>\n      ))}\n    </Grid>\n  );\n};\n\nexport default Players;\n","import * as Game from \"./Game\";\nimport * as Player from \"./Player\";\nimport * as PlayerList from \"./PlayerList\";\nimport * as Score from \"./Score\";\nimport assignWith from \"lodash/fp/assignWith\";\nimport { isEqual } from \"lodash\";\n\nconst calculateScoreByPlayerType = (players: PlayerList.Props) => (\n  game: Game.Props\n): [Score.Props, Score.Props] => {\n  const [numberOfDeclarers, numberOfOpponents] = PlayerList.countByType(\n    players\n  );\n  const opponentsGameScore = game.playerTypeScores[Player.TYPE.OPPONENT];\n  const declarersGameScore = game.playerTypeScores[Player.TYPE.DECLARER];\n  if (opponentsGameScore === null || declarersGameScore === null) {\n    return [null, null];\n  }\n  if (numberOfOpponents === 2 && numberOfDeclarers === 2) {\n    return [declarersGameScore, opponentsGameScore];\n  }\n  if (numberOfOpponents === 3 && numberOfDeclarers === 1) {\n    return [declarersGameScore * 3, opponentsGameScore];\n  }\n  if (numberOfOpponents === 1 && numberOfDeclarers === 3) {\n    return [declarersGameScore, opponentsGameScore * 3];\n  }\n  return [null, null];\n};\n\nexport const mapGameScoreToPlayers = (game: Game.Props) => (\n  players: PlayerList.Props\n): PlayerList.Props => {\n  return players.map(\n    (player: Player.Props): Player.Props => {\n      const [declarersScore, opponentsScore] = calculateScoreByPlayerType(\n        players\n      )(game);\n      const score = {\n        [Player.TYPE.OPPONENT]: opponentsScore,\n        [Player.TYPE.DECLARER]: declarersScore,\n      };\n      return {\n        ...player,\n        gameScore: player.type === null ? null : score[player.type],\n      };\n    }\n  );\n};\n\nexport const isReadyForSave = (players: PlayerList.Props) => (\n  game: Game.Props\n): boolean => {\n  const numbers = PlayerList.countByType(players);\n  const playerNumberValid =\n    isEqual(numbers, [1, 3]) ||\n    isEqual(numbers, [2, 2]) ||\n    isEqual(numbers, [3, 1]);\n  const gameScoreValid =\n    game.playerTypeScores[Player.TYPE.DECLARER] !== null &&\n    game.playerTypeScores[Player.TYPE.OPPONENT] !== null;\n  return playerNumberValid && gameScoreValid;\n};\n\nconst defined = (value: any): boolean =>\n  Boolean(value !== undefined && value !== null);\n\nconst scoreSumAssigner = (\n  gameScore: number | undefined,\n  player: Player.Props\n) => {\n  const left = defined(gameScore) ? gameScore : 0;\n  const right = defined(player.gameScore) ? player.gameScore : 0;\n  return (left as number) + (right as number);\n};\n\nexport type GameSessionScore = { [key: string]: number };\n\nexport const calculateGameSessionScores = (\n  playerListObjects: PlayerList.PlayerMap[]\n): GameSessionScore => {\n  return playerListObjects.reduce(\n    (scores, playerListObject) =>\n      assignWith(scoreSumAssigner)(scores, playerListObject),\n    {} as GameSessionScore\n  );\n};\n\nexport const mapGameSessionScoresToPlayers = (players: PlayerList.Props) => (\n  sessionScores: GameSessionScore\n): PlayerList.Props =>\n  players.map((player) =>\n    sessionScores[player.id] === undefined\n      ? player\n      : Player.update({ sessionScore: sessionScores[player.id] })(player)\n  );\n","export class ApplicationError extends Error {\n  userMessage: string;\n  constructor(message?: string, userMessage?: string) {\n    super(message);\n    this.userMessage =\n      userMessage === undefined ? \"Ooops. Someting went wrong!\" : userMessage;\n  }\n}\n","import { ApplicationError } from \"../lib/error\";\n\nexport const PREFIX = \"tarockSheetState_v2\";\n\nexport class NotSupportedStorageError extends ApplicationError {\n  constructor(message?: string) {\n    super(message, \"Saving is not supported!\");\n    this.name = \"NotSupportedStorageError\";\n  }\n}\n\nexport class WrongDataStorageError extends ApplicationError {\n  constructor(message?: string) {\n    super(\n      message,\n      \"Not able to save or load your changes! It is an application error!\"\n    );\n    this.name = \"WrongDataStorageError\";\n  }\n}\n\nexport class UnsuccessfulSavingStorageError extends ApplicationError {\n  constructor(message?: string) {\n    super(message, \"Not able to save your changes! Maybe the storage is full.\");\n    this.name = \"UnsuccessfulSavingStorageError\";\n  }\n}\n\ninterface Storage {\n  isSupported: () => {};\n  create: (key: string, data: object) => void;\n  update: (key: string, data: object) => void;\n  delete: (key: string) => void;\n  read: (key: string) => object | null;\n}\nexport const storage = (prefix: string = PREFIX): Storage => {\n  const isSupported = () => Boolean(window.localStorage);\n  const _checkSupport = () => {\n    if (!isSupported()) {\n      throw new NotSupportedStorageError();\n    }\n  };\n  const _instance = window.localStorage;\n  const _serialize = (data: object): string => {\n    try {\n      return JSON.stringify(data);\n    } catch (error) {\n      throw new WrongDataStorageError(error.message);\n    }\n  };\n  const _unserialize = (str: string): object => {\n    try {\n      return JSON.parse(str);\n    } catch (error) {\n      throw new WrongDataStorageError(error.message);\n    }\n  };\n  const getStorageKey = (key: string): string => `${prefix}_${key}`;\n\n  const create = (key: string, data: object) => {\n    _checkSupport();\n    try {\n      _instance.setItem(getStorageKey(key), _serialize(data));\n    } catch (error) {\n      if (error instanceof WrongDataStorageError) {\n        throw error;\n      }\n      throw new UnsuccessfulSavingStorageError(error.message);\n    }\n  };\n  const remove = (key: string) => {\n    _checkSupport();\n    _instance.removeItem(key);\n  };\n  const read = (key: string): object | null => {\n    _checkSupport();\n    const serialized = _instance.getItem(getStorageKey(key));\n    return serialized === null ? null : _unserialize(serialized);\n  };\n\n  return {\n    isSupported,\n    create,\n    update: create,\n    delete: remove,\n    read,\n  };\n};\n","import React, { useEffect, useState } from \"react\";\nimport * as Bid from \"../models/Bid\";\nimport ContractSelector from \"./ContractSelector\";\nimport * as Game from \"../models/Game\";\nimport * as Contract from \"../models/Contract\";\nimport { Button, Grid } from \"@material-ui/core\";\nimport ContractsTable from \"./ContractsTable\";\nimport GameProperties from \"./GameProperties\";\nimport flow from \"lodash/fp/flow\";\nimport concat from \"lodash/fp/concat\";\nimport Players from \"./Players\";\nimport * as Player from \"../models/Player\";\nimport * as PlayerList from \"../models/PlayerList\";\nimport * as GameSession from \"../models/GameSession\";\nimport { storage as storageInitializer } from \"../services/localStorage\";\nimport Confirm from \"./Confirm\";\n\nconst allBidsByGroup = Bid.getAllByGroup();\nconst storage = storageInitializer();\n\nconst TarockSheet = () => {\n  const [game, setGame] = useState<Game.Props>(\n    (storage.read(\"game\") as Game.Props | null) ?? Game.create()\n  );\n  const [players, setPlayers] = useState<Player.Props[]>(\n    (storage.read(\"players\") as Player.Props[] | null) ?? []\n  );\n  const [gameScoreList, setGameScoreList] = useState<PlayerList.PlayerMap[]>(\n    (storage.read(\"gameScoreList\") as PlayerList.PlayerMap[] | null) ?? []\n  );\n\n  useEffect(() => {\n    setPlayers(GameSession.mapGameScoreToPlayers(game));\n  }, [game]);\n\n  useEffect(() => {\n    if (!storage.isSupported()) {\n      return;\n    }\n    try {\n      storage.update(\"game\", game as object);\n      storage.update(\"players\", players);\n      storage.update(\"gameScoreList\", gameScoreList);\n    } catch (error) {\n      console.error(error);\n    }\n  }, [game, players, gameScoreList]);\n\n  const handleContractDelete = (index: number) =>\n    setGame(Game.removeContractAt(game)(index));\n  const handleResetGame = () => setGame(Game.create());\n  const handlePlayerListChange = (playerList: PlayerList.Props) => {\n    updatePlayersState(playerList);\n  };\n  const handleChangeGameProperties = (\n    prop: keyof Game.UpdateProps,\n    value: any\n  ) => {\n    setGame((prevGame) => {\n      const partyScoreTypeChanged = prop === \"partyScoreType\";\n      const fromKlopiczkyToPartyLikeChanged =\n        prevGame.partyScoreType === Game.PARTY_SCORE_TYPE.KLOPICZKY &&\n        Game.isPartyLike(value);\n      const fromPartyLikeToKlopiczkyChanged =\n        Game.isPartyLike(prevGame.partyScoreType) &&\n        value === Game.PARTY_SCORE_TYPE.KLOPICZKY;\n      const fromNullToKlopiczkyChanged =\n        prevGame.partyScoreType === null &&\n        value === Game.PARTY_SCORE_TYPE.KLOPICZKY;\n      const partyLikeAndEmptyContracts =\n        Game.isPartyLike(value) && prevGame.contracts.length === 0;\n      const shouldRemoveContracts =\n        partyScoreTypeChanged &&\n        (fromKlopiczkyToPartyLikeChanged ||\n          fromPartyLikeToKlopiczkyChanged ||\n          fromNullToKlopiczkyChanged ||\n          partyLikeAndEmptyContracts);\n      if (shouldRemoveContracts) {\n        const contract = Game.isPartyLike(value)\n          ? Contract.create({\n              bidType: Bid.TYPE.PARTY,\n              taker: Player.TYPE.DECLARER,\n            })\n          : Contract.create({\n              bidType: Bid.TYPE.KLOPICZKY,\n              taker: Player.TYPE.DECLARER,\n              isWonByTaker: true,\n            });\n        const updated = flow(\n          Game.removeAllContracts,\n          Game.addContractFlipped(contract),\n          Game.update({ [prop]: value })\n        )(game);\n        return updated;\n      } else {\n        return Game.update({ [prop]: value })(game);\n      }\n    });\n  };\n  const handleAddContract = (contract: Contract.Props) => {\n    return setGame(flow(Contract.create, Game.addContract(game))(contract));\n  };\n  const handleChangeContract = (\n    index: number,\n    field: keyof Contract.Props,\n    value: any\n  ) => {\n    setGame(\n      flow(\n        Contract.update({ [field]: value }),\n        Game.updateGameContractAt(game)(index)\n      )(game.contracts[index])\n    );\n  };\n  const handleSaveScores = () => {\n    const updatedGameScoreList = flow(\n      PlayerList.filterByInGame,\n      PlayerList.mapToObjectById,\n      concat(gameScoreList)\n    )(players);\n    updateGameScoreListState(updatedGameScoreList);\n  };\n  const updatePlayersState = (updated: PlayerList.Props) => {\n    flow(GameSession.mapGameScoreToPlayers(game), setPlayers)(updated);\n  };\n  const updateGameScoreListState = (updated: PlayerList.PlayerMap[]) => {\n    flow(\n      GameSession.calculateGameSessionScores,\n      GameSession.mapGameSessionScoresToPlayers(players),\n      PlayerList.clearType,\n      updatePlayersState\n    )(updated);\n    setGameScoreList(updated);\n    setGame(Game.create());\n  };\n  const handleResetPlayers = () => {\n    setGame(Game.create());\n    updateGameScoreListState([]);\n    updatePlayersState([]);\n  };\n  const handleResetScores = () => {\n    updateGameScoreListState([]);\n    flow(\n      PlayerList.setDefaultScores,\n      PlayerList.clearType,\n      updatePlayersState\n    )(players);\n  };\n\n  const partyScoreTypeSelected = game.partyScoreType !== null;\n\n  return (\n    <Grid container spacing={3} direction=\"column\">\n      <Grid item>\n        <Players\n          players={players}\n          onPlayerListChange={handlePlayerListChange}\n          onSaveScores={handleSaveScores}\n          saveDisabled={!GameSession.isReadyForSave(players)(game)}\n          onResetPlayers={handleResetPlayers}\n          onResetScores={handleResetScores}\n        />\n      </Grid>\n      <Grid item>\n        <Grid item container spacing={1} direction=\"row\">\n          <Grid item>\n            <GameProperties game={game} onChange={handleChangeGameProperties} />\n          </Grid>\n          <Grid item>\n            <Confirm\n              title=\"Do you really want to reset this Game?\"\n              text=\"It will clear up the game's properties and remove all contracts without saving them, but keep the players' scores.\"\n              target={(handleClick) => (\n                <Button variant=\"outlined\" onClick={handleClick}>\n                  Reset Game\n                </Button>\n              )}\n              onConfirm={handleResetGame}\n            />\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid item>\n        {partyScoreTypeSelected && (\n          <ContractSelector\n            key={\n              game.partyScoreType === null ? 1 : 0\n            } /* Resets the internal state if the game is reseted */\n            bidsByGroup={allBidsByGroup}\n            onAddContract={handleAddContract}\n          />\n        )}\n      </Grid>\n      <Grid item>\n        {partyScoreTypeSelected && (\n          <ContractsTable\n            contracts={game?.contracts as Contract.Props[]}\n            onChange={handleChangeContract}\n            onDelete={handleContractDelete}\n          />\n        )}\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default TarockSheet;\n","import React from \"react\";\nimport {\n  AppBar,\n  Box,\n  Container,\n  Grid,\n  makeStyles,\n  Typography as T,\n} from \"@material-ui/core\";\nimport { GiJesterHat as Icon } from \"react-icons/gi\";\nimport TarockSheet from \"./components/TarockSheet\";\n\nconst useAppStyle = makeStyles((theme) => ({\n  container: {\n    padding: theme.spacing(4),\n  },\n}));\n\nfunction App() {\n  const classes = useAppStyle();\n\n  return (\n    <>\n      <AppBar position=\"static\">\n        <Grid container spacing={2} alignItems=\"center\">\n          <Grid item>\n            <Box mt={1} ml={1} fontSize=\"h3.fontSize\">\n              <Icon color=\"white\" />\n            </Box>\n          </Grid>\n          <Grid item>\n            <T variant=\"h3\">Tarock Sheet</T>\n          </Grid>\n        </Grid>\n      </AppBar>\n      <Container className={classes.container}>\n        <TarockSheet />\n      </Container>\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}