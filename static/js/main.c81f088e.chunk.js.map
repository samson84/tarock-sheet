{"version":3,"sources":["lib/bid.ts","lib/player.ts","lib/util.ts","lib/game.ts","components/ContractSelector.tsx","lib/contract.ts","components/ContractsTable.tsx","components/VariantSelector.tsx","components/SilentSwitch.tsx","components/GameProperties.tsx","components/GameScore.tsx","components/Players.tsx","lib/gameList.ts","components/ScoreSheet.tsx","components/TarockSheet.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["BID_TYPE","SMALLEST_VARIANT","CARD_SHAPE_VARIANT","BID_GROUPS","PARTY_LIKE","weight","ULTI_LIKE","CENTRUM_LIKE","CATCHES","OTHERS","PLAYER_TYPE","SMALLEST_VARIANTS","PAGAT","EAGLE","CARD_SHAPE_VARIANTS","CLUB","DIAMOND","HEART","SPADE","BIDS","PARTY","score","party","group","TRULL","silent","FOUR_KING","CATCH_THE_MAYOR","CATCH_THE_PAGAT","ULTI","variants","notWinIfSilent","UHU","DOUBLE_PARTY","VOLAT","PHEASANT","PHEASANT_IN_2ND","EIGHT_TAROCK","winByDefault","denyContra","NINE_TAROCK","FURRY","CENTRUM","SMALL_BIRD","LARGE_BIRD","KING_ULTI","KING_UHU","CSUZIMA","KLOPICZKY","getBid","type","canSilent","bid","getBidScore","partyScore","makeFirstLetterCapital","word","length","split","first","rest","toUpperCase","join","toLowerCase","upperCaseToWords","upperCased","map","PARTY_SCORE_TYPE","getAnotherPlayerType","playerType","DECLARER","OPPONENT","getPlayerTypeColor","Map","get","ContractSelector","bidsByGroup","onAddContract","useState","silentAndWin","setSilentAndWin","Grid","container","spacing","alignItems","sortBy","g","Object","keys","item","variant","display","color","Box","component","mr","Button","onClick","bidType","shouldWinWithSilent","taker","bidVariant","winByTaker","handleClick","size","disabled","FormControlLabel","control","Switch","checked","onChange","prev","name","label","validateContract","contract","contra","Error","includes","Math","log2","createContract","bidBaseScore","flow","calculateContract","ACTION_TYPE","PARTY_SCORE","TOOK_THREE","TOOK_TWO","TOOK_ONE","SOLO","createGame","props","contracts","declarers","opponents","partyScoreType","called_tarock","scores","updateGameWithScores","game","calculateGame","updateGame","updates","undefined","addContract","updatedContract","removeAllContract","reduce","addScore","prevScore","another","VariantSelector","selected","render","onClose","open","setOpen","handleClose","Dialog","DialogContent","RadioGroup","event","target","value","Radio","DialogActions","SilentSwitch","FormGroup","VariantSelectorModal","handleOpen","columns","field","headerName","valueGetter","onAction","CHANGE","newTaker","IconButton","title","Checkbox","indeterminate","nextValue","_","DELETE","isContractField","ContractsTable","onDelete","handleAction","index","actionType","TableContainer","Table","TableHead","TableRow","column","TableCell","TableBody","rowIndex","cellIndex","curry","calledTarockOptions","XX","XIX","XVIII","XVII","XVI","XV","XIV","XIII","XII","partyScoreOptions","GameProperties","alignContent","FormControl","InputLabel","id","Select","labelId","option","MenuItem","FormLabel","row","GameScore","direction","Chip","PlayerItem","player","onRemove","rotatePlayerTypeWithNull","AddPlayerDialog","onAdd","setPlayer","DialogTitle","onSubmit","preventDefault","TextField","autoFocus","margin","Players","players","onPlayerAdd","onPlayerChange","onPlayerRemove","playerList","createPlayerList","getPlayersScores","p","fromPairs","defined","scoreAssigner","value1","value2","addBaseScore","baseScore","sumPlayersScore","mapValues","baseScoreAdder","ScoreSheet","gameScoreList","gameScorePerPlayer","forEach","add","Set","values","getAllPlayers","sum","assignWith","sumPlayerScores","allBidsByGroup","bids","b","groupBy","getAllBidsByGorup","TarockSheet","setGame","setPlayers","setGameScoreList","prop","updated","addContractFlipped","uniq","filter","removePlayer","key","otherKey","addPlayer","i","updateGameContract","removeContract","useAppStyle","makeStyles","theme","padding","App","classes","AppBar","position","Container","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"iIAiBYA,E,kKAAAA,K,cAAAA,E,cAAAA,E,sBAAAA,E,kCAAAA,E,kCAAAA,E,YAAAA,E,UAAAA,E,4BAAAA,E,cAAAA,E,oBAAAA,E,kCAAAA,E,4BAAAA,E,0BAAAA,E,cAAAA,E,kBAAAA,E,wBAAAA,E,wBAAAA,E,kBAAAA,E,sBAAAA,E,oBAAAA,E,uBAAAA,M,KA8BZ,IAUYC,EAKAC,EAfNC,EAA0D,CAC9DC,WAAY,CAAEC,OAAQ,IACtBC,UAAW,CAAED,OAAQ,IACrBE,aAAc,CAAEF,OAAQ,IACxBG,QAAS,CAAEH,OAAQ,IACnBI,OAAQ,CAAEJ,OAAQ,M,SAKRJ,K,cAAAA,E,eAAAA,M,cAKAC,K,cAAAA,E,cAAAA,E,YAAAA,E,mBAAAA,M,KAOZ,ICrEYQ,EDqENC,EAAoB,CAACV,EAAiBW,MAAOX,EAAiBY,OAC9DC,EAAsB,CAC1BZ,EAAmBa,KACnBb,EAAmBc,QACnBd,EAAmBe,MACnBf,EAAmBgB,OAKfC,GAAoC,mBACvCnB,EAASoB,MAAQ,CAAEC,MAAO,SAACC,GAAD,OAAmBA,GAAOC,MAAO,eADpB,cAEvCvB,EAASwB,MAAQ,CAAEH,MAAO,EAAGI,QAAQ,IAFE,cAGvCzB,EAAS0B,UAAY,CAAEL,MAAO,EAAGI,QAAQ,IAHF,cAIvCzB,EAAS2B,gBAAkB,CAAEN,MAAO,GAAII,QAAQ,EAAMF,MAAO,YAJtB,cAKvCvB,EAAS4B,gBAAkB,CAAEP,MAAO,EAAGE,MAAO,YALP,cAMvCvB,EAAS6B,KAAO,CACfR,MAAO,GACPS,SAAS,GAAD,OAAMnB,GACdc,QAAQ,EACRF,MAAO,YACPQ,gBAAgB,IAXsB,cAavC/B,EAASgC,IAAM,CACdX,MAAO,GACPS,SAAS,GAAD,OAAMnB,GACdY,MAAO,cAhB+B,cAkBvCvB,EAASiC,aAAe,CACvBZ,MAAO,SAACC,GAAD,OAA2B,EAARA,GAC1BG,QAAQ,EACRF,MAAO,eArB+B,cAuBvCvB,EAASkC,MAAQ,CAChBb,MAAO,SAACC,GAAD,OAA2B,EAARA,GAC1BG,QAAQ,EACRF,MAAO,eA1B+B,cA4BvCvB,EAASmC,SAAW,CACnBd,MAAO,GACPS,SAAS,GAAD,OAAMnB,GACdY,MAAO,cA/B+B,cAiCvCvB,EAASoC,gBAAkB,CAC1Bf,MAAO,GACPS,SAAS,GAAD,OAAMnB,GACdY,MAAO,cApC+B,cAsCvCvB,EAASqC,aAAe,CAAEhB,MAAO,EAAGiB,cAAc,EAAMC,YAAY,IAtC7B,cAuCvCvC,EAASwC,YAAc,CAAEnB,MAAO,EAAGiB,cAAc,EAAMC,YAAY,IAvC5B,cAwCvCvC,EAASyC,MAAQ,CAChBpB,MAAO,GACPS,SAAS,GAAD,OAAMhB,GACdS,MAAO,cA3C+B,cA6CvCvB,EAAS0C,QAAU,CAAErB,MAAO,GAAIE,MAAO,iBA7CA,cA8CvCvB,EAAS2C,WAAa,CAAEtB,MAAO,GAAIE,MAAO,iBA9CH,cA+CvCvB,EAAS4C,WAAa,CAAEvB,MAAO,GAAIE,MAAO,iBA/CH,cAgDvCvB,EAAS6C,UAAY,CACpBxB,MAAO,GACPS,SAAS,GAAD,OAAMhB,GACdS,MAAO,cAnD+B,cAqDvCvB,EAAS8C,SAAW,CACnBzB,MAAO,GACPS,SAAS,GAAD,OAAMhB,GACdS,MAAO,cAxD+B,cA0DvCvB,EAAS+C,QAAU,CAAE1B,MAAO,IA1DW,cA2DvCrB,EAASgD,UAAY,CAAE3B,MAAO,EAAGiB,cAAc,EAAMC,YAAY,IA3D1B,GA8D7BU,EAAS,SAACC,GAAD,oBAA4BA,QAAS/B,EAAK+B,KAWnDC,EAAY,SAACC,GAAD,OAAuC,KAAb,OAAHA,QAAG,IAAHA,OAAA,EAAAA,EAAK3B,SAExC4B,EAAc,SAACC,GAAD,OAAwB,SAACF,GAAD,MAC5B,oBAAdA,EAAI/B,MAAuB+B,EAAI/B,MAAMiC,GAAcF,EAAI/B,Q,sDE3J1DkC,EAAyB,SAACC,GAC9B,GAAIA,EAAKC,OAAS,EAChB,OAAOD,EAF8C,MAI9BA,EAAKE,MAAM,IAJmB,iBAIhDC,EAJgD,KAItCC,EAJsC,WAKvD,MAAM,GAAN,OAAUD,EAAME,eAAhB,OAAgCD,EAAKE,KAAK,IAAIC,gBAGnCC,EAAmB,SAACC,GAC/B,OAAOA,EACJP,MAAM,KACNQ,IAAIX,GACJO,KAAK,O,SDZEpD,K,oBAAAA,E,qBAAAA,M,KAOL,I,EE0CKyD,EF1CCC,EAAuB,SAACC,GAAD,OAClCA,IAAe3D,EAAY4D,SACvB5D,EAAY6D,SACZ7D,EAAY4D,UAuBLE,EAAqB,SAChCH,GAOA,OALe,IAAII,IAAyC,CAC1D,CAAC/D,EAAY4D,SAAU,WACvB,CAAC5D,EAAY6D,SAAU,aACvB,CAAC,KAAM,aAEKG,IAAIL,IAAe,WGuCpBM,EAvDU,SAAC,GAAsD,IAApDC,EAAmD,EAAnDA,YAAaC,EAAsC,EAAtCA,cAAsC,EACrCC,oBAAkB,GADmB,mBACtEC,EADsE,KACxDC,EADwD,KAiB7E,OACE,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,WAAW,WAAvC,UJYFC,KAAO,SAACC,GAAD,OAAOnF,EAAWmF,GAAmBjF,SAAQkF,OAAOC,KAAKrF,IIXnC+D,KAAI,SAAC3C,GAAD,OAC3B,eAAC0D,EAAA,EAAD,CAAMQ,MAAI,EAAaN,QAAS,EAAhC,UACE,cAAC,IAAD,CAAGO,QAAQ,UAAUC,QAAQ,QAAQC,MAAM,gBAA3C,SACG5B,EAAiBzC,KAEnBqD,EAAYrD,GAAuB2C,KAAI,SAACd,GAAD,OACtC,cAACyC,EAAA,EAAD,CAAoBC,UAAU,OAAOC,GAAI,GAAzC,SACE,cAACC,EAAA,EAAD,CACEN,QAAQ,WACRE,MAAM,UACNK,QAAS,kBAvBH,SAACC,GACnB,IAAM9C,EAAMH,EAAOiD,GACbC,EAAsBpB,IAAiB3B,EAAIrB,eACjD8C,EAAc,CACZqB,QAASA,EACTE,MAAO1F,EAAY4D,SACnB7C,OAAQsD,GAAgB5B,EAAUC,GAClCiD,WAAY,KACZC,WAAYlD,EAAId,cAAgB6D,IAePI,CAAYnD,EAAIF,OAC/BsD,KAAK,QACLC,SAAU1B,IAAiB5B,EAAUC,GALvC,SAOGY,EAAiBZ,EAAIF,SARhBE,EAAIF,WALF3B,MAmBlB,cAAC0D,EAAA,EAAD,CAAMQ,MAAI,EAAV,SACE,cAACiB,EAAA,EAAD,CACEC,QACE,cAACC,EAAA,EAAD,CACEC,QAAS9B,EACT+B,SAzCS,WACnB9B,GAAgB,SAAC+B,GAAD,OAAoBA,MAyC1BC,KAAK,uBAGTC,MAAM,uB,iBC7CVC,G,cAAmB,SAACC,GAA0C,ILiIzCzB,EKhIjBjE,EAAwC0F,EAAxC1F,OAAQyE,EAAgCiB,EAAhCjB,QAASG,EAAuBc,EAAvBd,WAAYe,EAAWD,EAAXC,OAC/BhE,EAAMH,EAAOiD,GACnB,GAAIzE,IAAW0B,EAAUC,GACvB,MAAM,IAAIiE,MAAJ,UAAajE,EAAIF,KAAjB,wBAER,GAAImD,KL2HqBX,EK3HKW,EL2HmB,SAACjD,GAElD,QADoB,OAAHA,QAAG,IAAHA,OAAA,EAAAA,EAAKtB,WAAY,IAClBwF,SAAS5B,KK7HiBtC,GACxC,MAAM,IAAIiE,MAAJ,UAAajE,EAAIF,KAAjB,0BAAuCmD,EAAvC,cAGR,KADqBkB,KAAKC,KAAKJ,GAAU,IAAM,GAE7C,MAAM,IAAIC,MAAJ,2CAA8CD,EAA9C,YAER,GAAIA,EAAS,EACX,MAAM,IAAIC,MAAJ,6CAAgDD,EAAhD,cAYGK,EAAiB,SAAC,GAOO,IANpCvB,EAMmC,EANnCA,QACAE,EAKmC,EALnCA,MAKmC,IAJnC9C,kBAImC,MAJtB,KAIsB,MAHnC7B,cAGmC,aAFnC4E,kBAEmC,MAFtB,KAEsB,MADnCC,WAEMa,EAAW,CACfjB,UACAG,aACAe,OAAQ,EACR3F,SACA6E,gBANiC,MADtB,KACsB,EAOjCF,QACAsB,aACiB,OAAfpE,EACIqE,IAAK1E,EAAQI,EAAYC,GAAzBqE,CAAsCzB,GACtC,MAGR,OADAgB,EAAiBC,GACVA,GA6BIS,EAAoB,SAACT,GAAuC,IAC/Db,EAA6Ca,EAA7Cb,WAAYoB,EAAiCP,EAAjCO,aAAcN,EAAmBD,EAAnBC,OAAQ3F,EAAW0F,EAAX1F,OAC1C,OAAmB,OAAf6E,GAAwC,OAAjBoB,EAClB,MAGIpB,EAAa,GAAK,GACjBoB,GAFKjG,EAAS,GAAM2F,IASXpH,EAASoB,MAAOpB,EAASiC,aAAcjC,EAASkC,O,SFrE7DiC,K,sBAAAA,E,wBAAAA,E,oBAAAA,E,oBAAAA,E,aAAAA,M,KASL,IGYF0D,EHJQC,GAAyD,mBACnE3D,EAAiB4D,WAAa,GADqC,cAEnE5D,EAAiB6D,SAAW,GAFuC,cAGnE7D,EAAiB8D,SAAW,GAHuC,cAInE9D,EAAiB+D,KAAO,GAJ2C,cAKnE/D,EAAiBnB,UAAY,GALsC,GAYzDmF,EAAa,iBAACC,EAAD,uDAA0B,GAA1B,MAAwC,CAChEC,UAAW,GACXC,UAAW,GACXC,UAAW,GACXC,eAAgBJ,EAAMI,gBAAkB,KACxCC,cAAeL,EAAMK,eAAiB,KACtCC,QAAM,mBACHhI,EAAY4D,SAAW,MADpB,cAEH5D,EAAY6D,SAAW,MAFpB,KAMFoE,GAAuB,SAACC,GAC5B,IAAMF,EAASG,GAAcD,GAE7B,OAAO,2BACFA,GADL,IAEEF,OAAO,eAAMA,MAQJI,GAAa,SAACC,GAAD,OAA8B,SAACH,GACvD,IE1BiCtF,EF0B3B+E,OACuBW,IAA3BD,EAAQP,eACJI,EAAKP,UACLO,EAAKP,UAAUnE,KE7BYZ,EF8BNwE,EAAYiB,EAAQP,gBE9BkB,SACjErB,GADiE,mBAAC,eAG/DA,GAH8D,IAIjEO,aAAcC,IAAK1E,EAAQI,EAAYC,GAAzBqE,CAAsCR,EAASjB,cF6B7D,OAAOyC,GAAqB,2BACvBC,GADsB,IAEzBP,UAAU,YAAKA,IACZU,MA+BME,GAAc,SAACL,GAAD,OAAgB,SAACzB,GAC1C,IAAM7D,GAAiB,OAAJsF,QAAI,IAAJA,OAAA,EAAAA,EAAMJ,gBACrBV,EAAW,OAACc,QAAD,IAACA,OAAD,EAACA,EAAMJ,gBAClB,KACEU,EAAkBzB,EAAe,2BAAKN,GAAN,IAAgB7D,gBACtD,OAAOqF,GAAqB,2BACvBC,GADsB,IAEzBP,UAAU,GAAD,mBAAMO,EAAKP,WAAX,CAAsBa,SAWtBC,GAAoB,SAACP,GAAD,mBAAC,eAC7BA,GAD4B,IAE/BP,UAAW,MAcAQ,GAAgB,SAACD,GAA2B,IAAD,EACtD,OAAOA,EAAKP,UAAUe,QACpB,SAAC9F,EAAY6D,GAAc,IAAD,EAClB9F,EAAQuG,EAAkBT,GAChC,GAAc,OAAV9F,EACF,OAAOiC,EAGT,IAAM+F,EAAW,SACfC,EACAjI,GAEA,OAAkB,OAAdiI,EACKjI,EAEU,OAAVA,EAAiBiI,EAAYjI,EAAQiI,GAI1ClD,EAAQe,EAASf,MACjBmD,EAAUnF,EAAqBgC,GAErC,OAAO,2BACF9C,GADL,uBAEG8C,EAAQiD,EAAS/F,EAAW8C,GAAQ/E,IAFvC,cAGGkI,EAAUF,EACT/F,EAAWiG,GACD,OAAVlI,EAAiB,MAAgB,EAATA,IAL5B,OArBG,mBA+BFX,EAAY4D,SAAW,MA/BrB,cAgCF5D,EAAY6D,SAAW,MAhCrB,K,2II5HMiF,GApCS,SAACpB,GAAiC,IAChDtG,EAAkDsG,EAAlDtG,SAAU2H,EAAwCrB,EAAxCqB,SAAU3C,EAA8BsB,EAA9BtB,SAAU4C,EAAoBtB,EAApBsB,OAAQC,EAAYvB,EAAZuB,QADS,EAE/B7E,oBAAS,GAFsB,mBAEhD8E,EAFgD,KAE1CC,EAF0C,KAKjDC,EAAc,WAClBD,GAAQ,GACRF,GAAWA,KAOb,OACE,qCACGD,GAZc,kBAAMG,GAAQ,MAa7B,eAACE,GAAA,EAAD,CAAQH,KAAMA,EAAMD,QAASG,EAA7B,UACE,cAACE,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CAAYjD,KAAK,WAAWF,SAVf,SAACoD,GACpBpD,EAASoD,EAAMC,OAAOC,OACtBN,KAQ0DM,MAAOX,EAA3D,SACG3H,EAASoC,KAAI,SAACwB,GAAD,OACZ,cAACgB,EAAA,EAAD,CACEC,QAAS,cAAC0D,GAAA,EAAD,CAAOD,MAAO1E,IACvBuB,MAAOjD,EAAiB0B,YAKhC,cAAC4E,GAAA,EAAD,UACE,cAACtE,EAAA,EAAD,CAAQC,QAAS6D,EAAjB,6B,UCfKS,GAxBM,SAAC,GAKI,IAJxBrE,EAIuB,EAJvBA,QACAY,EAGuB,EAHvBA,SACAsD,EAEuB,EAFvBA,MACAnD,EACuB,EADvBA,MAEM7D,EAAMH,EAAOiD,GACnB,OAAK/C,EAAUC,GAIb,cAACoH,GAAA,EAAD,UACE,cAAC9D,EAAA,EAAD,CACEC,QACE,cAACC,EAAA,EAAD,CACEE,SAAU,SAACoD,GAAD,OAAWpD,EAASoD,EAAMC,OAAOtD,UAC3CA,QAASuD,IAGbnD,MAAOA,EAAQ,SAAW,OAXvB,M,qBFoBLwD,GAAuB,SAACrC,GAAsC,IAC1DjB,EAAuBiB,EAAvBjB,SAAUL,EAAasB,EAAbtB,SAIZ1D,EAAMH,EAAOkE,EAASjB,SAE5B,OAAK9C,EAAItB,SAKP,mCACE,cAAC,GAAD,CACEA,SAAUsB,EAAItB,UAAY,GAC1B2H,SAAUtC,EAASd,WACnBS,SAde,SAACpB,GACpBoB,EAASpB,IAcLgE,OAAQ,SAACgB,GAAD,aACN,cAAC1E,EAAA,EAAD,CACEN,QAAQ,WACRE,MAAM,UACNK,QAASyE,EACTlE,KAAK,QAJP,SAMGxC,EAAgB,UAACmD,EAASd,kBAAV,QAAwB,yBAhB1C,O,SAwBNwB,K,gBAAAA,E,iBAAAA,M,KAeL,IAAM8C,GAA8B,CAClC,CACEC,MAAO,UACPC,WAAY,MACZC,YAAa,SAAC3D,GAAD,OAAwBnD,EAAiBmD,EAASjB,WAEjE,CACE0E,MAAO,aACPC,WAAY,UACZC,YAAa,SAAC3D,EAAU4D,GAItB,OACE,cAAC,GAAD,CAAsB5D,SAAUA,EAAUL,SAJvB,SAACpB,GAAD,OACnBqF,GAAYA,EAASlD,EAAYmD,OAAQtF,QAO/C,CACEkF,MAAO,QACPC,WAAY,QACZC,YAAa,SAAC3D,EAAU4D,GACtB,IAAME,EAAW7G,EAAqB+C,EAASf,OAGzCR,EAAQpB,EAAmB2C,EAASf,OAC1C,OACE,cAACJ,EAAA,EAAD,CAAQJ,MAAOA,EAAOK,QAJJ,kBAClB8E,GAAYA,EAASlD,EAAYmD,OAAQC,IAGzC,SACG9D,EAASf,UAKlB,CACEwE,MAAO,SACPC,WAAY,SACZC,YAAa,SAAC3D,EAAU4D,GAGtB,OACE,cAAC,GAAD,CACE7E,QAASiB,EAASjB,QAClBY,SALiB,SAACrF,GAAD,OACnBsJ,GAAYA,EAASlD,EAAYmD,OAAQvJ,IAKvC2I,MAAOjD,EAAS1F,WAKxB,CACEmJ,MAAO,eACPC,WAAY,cAEd,CACEA,WAAY,SACZD,MAAO,SACPE,YAAa,SAAC3D,EAAU4D,GACtB,IAAMxE,EAAc,SAACa,GAAD,OAClB2D,GAAYA,EAASlD,EAAYmD,OAAQ5D,IAK3C,OAAInE,EAAOkE,EAASjB,SAAS3D,WACpB,KAGP,qCACE,cAAC,IAAD,CACEuD,WAA+B,IAApBqB,EAAS1F,OAAkB,IAAM,OAC5CmE,OAA2B,IAApBuB,EAAS1F,OAAkB,cAAgB,gBAFpD,SAIG0F,EAASC,SAEZ,cAAC8D,GAAA,EAAD,CACEC,MAAM,SACNlF,QAfe,kBAAMM,EAA8B,EAAlBY,EAASC,SAgB1CX,SAAUU,EAAS1F,OAHrB,SAKE,cAAC,KAAD,MAEF,cAACyJ,GAAA,EAAD,CACEC,MAAM,cACNlF,QAxBe,kBACnBkB,EAASC,OAAS,GAAKb,EAAYY,EAASC,OAAS,IAwBjDX,SAA8B,IAApBU,EAASC,QAAgBD,EAAS1F,OAH9C,SAKE,cAAC,KAAD,WAMV,CACEmJ,MAAO,aACPC,WAAY,oBACZC,YAAa,SAAC3D,EAAU4D,GAAc,IAC5BzE,EAAsBa,EAAtBb,WAAYF,EAAUe,EAAVf,MAOd+E,GACW,IAAf7E,EACI,qBACe,IAAfA,EACA,qBACA,8CAEN,OACE,cAAC8E,GAAA,EAAD,CACED,MAAOA,EACPtE,SAAwB,IAAfP,EACT+E,cAA8B,OAAf/E,EACfL,QAlBgB,WAClB,IAAMqF,EACW,OAAfhF,IAA4C,IAAfA,GAA8B,KAC7DyE,GAAYA,EAASlD,EAAYmD,OAAQM,IAgBvC1F,MAAOQ,IAAU1F,EAAY4D,SAAW,UAAY,gBAK5D,CACEsG,MAAO,aACPC,WAAY,cACZC,YAAa,SAAC3D,GAAD,OACX,cAAC,IAAD,CACEzB,QAAQ,SACRE,MACEuB,EAASf,QAAU1F,EAAY4D,SAAW,UAAY,YAH1D,SAMGsD,EAAkBT,OAIzB,CACEyD,MAAO,UACPC,WAAY,IACZC,YAAa,SAACS,EAAGR,GAEf,OACE,cAACG,GAAA,EAAD,CAAYC,MAAM,SAASlF,QAFT,kBAAM8E,GAAYA,EAASlD,EAAY2D,OAAQ,OAEjE,SACE,cAAC,KAAD,SAOJC,GAAkB,SACtBb,EACAzD,GAEA,OAAOyD,KAASzD,GAkEHuE,GA1DQ,SAACtD,GAAgC,IAC9CC,EAAkCD,EAAlCC,UAAWvB,EAAuBsB,EAAvBtB,SAAU6E,EAAavD,EAAbuD,SAE7B,SAASC,EACPC,EACAjB,EACAkB,EACA1B,GAEA,GAAI0B,IAAejE,EAAY2D,OAC7B,OAAOG,EAASE,GAElB,GAAIC,IAAejE,EAAYmD,QAAoB,OAAVJ,EACvC,OAAO9D,EAAS+E,EAAOjB,EAAOR,GAEhC,MAAM,IAAI/C,MAAJ,kCACuByE,EADvB,2CAKR,OACE,cAACC,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,UACGvB,GAAQzG,KAAI,SAACiI,EAAQN,GAAT,OACX,eAACO,GAAA,EAAD,eAAyBD,EAAOtB,WAAhC,MAAgBgB,UAItB,cAACQ,GAAA,EAAD,UACGhE,EAAUnE,KAAI,SAACiD,EAAUmF,GAAX,OACb,cAACJ,GAAA,EAAD,UACGvB,GAAQzG,KAAI,SAACiI,EAAQI,GAAT,OACX,cAACH,GAAA,EAAD,UACGX,GAAgBU,EAAOvB,MAAOzD,GAC3BgF,EAAOrB,YACLqB,EAAOrB,YACL3D,EACAqF,KAAMZ,EAANY,CAAoBF,EAApBE,CAA8BL,EAAOvB,QAEvCzD,EAASgF,EAAOvB,OAClBuB,EAAOrB,YACPqB,EAAOrB,YACL3D,EACAqF,KAAMZ,EAANY,CAAoBF,EAApBE,CAA8B,OAEhC,KAbUD,OAFLD,c,kDGhQrBG,GAAmB,CAAI,UAAJ,mBAAiBlH,OAAOC,KNgB2B,CAC1EkH,GAAI,KACJC,IAAK,MACLC,MAAO,QACPC,KAAM,OACNC,IAAK,MACLC,GAAI,KACJC,IAAK,MACLC,KAAM,OACNC,IAAK,UMxBDC,GAAoB5H,OAAOC,KAAKsC,GAwDvBsF,GAlDQ,SAAChF,GAAgC,IAC9CQ,EAAmBR,EAAnBQ,KAAM9B,EAAasB,EAAbtB,SACd,OACE,eAAC7B,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGkI,aAAa,eAAzC,UACE,cAACpI,EAAA,EAAD,CAAMQ,MAAI,EAAV,SACE,eAAC6H,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAYC,GAAG,yBAAf,oBACA,cAACC,GAAA,EAAD,CACErD,MAAOxB,EAAKH,eAAiB,SAC7B3B,SAAU,SAACoD,GACTpD,EAAS,gBAAiBoD,EAAMC,OAAOC,QAEzCsD,QAAQ,yBALV,SAOGjB,GAAoBvI,KAAI,SAACyJ,GAAD,OACvB,cAACC,GAAA,EAAD,CAAuBxD,MAAOuD,EAA9B,SACc,WAAXA,EAAsB,OAASA,GADnBA,aAOvB,cAAC1I,EAAA,EAAD,CAAMQ,MAAI,EAAV,SACE,eAAC6H,GAAA,EAAD,CAAaxH,UAAU,WAAvB,UACE,cAAC+H,GAAA,EAAD,CAAW/H,UAAU,SAArB,yBACA,cAACmE,GAAA,EAAD,CACE6D,KAAG,EACH1D,MAAOxB,EAAKJ,eACZ1B,SAAU,SAACoD,GACTpD,EACE,iBACAoD,EAAMC,OAAOC,QANnB,SAUG+C,GAAkBjJ,KAAI,SAACyJ,GAAD,OACrB,cAACjH,EAAA,EAAD,CAEE0D,MAAOuD,EACPhH,QAAS,cAAC0D,GAAA,EAAD,IACTpD,MAAOjD,EAAiB2J,IAHnBA,iB,+BCfNI,GA1CG,SAAC,GAA8B,IACxCrF,EADuC,EAA3BE,KACZF,OACP,OACE,eAACzD,EAAA,EAAD,CAAMC,WAAS,EAAC8I,UAAU,SAA1B,UACE,eAAC/I,EAAA,EAAD,CAAMQ,MAAI,EAACP,WAAS,EAACE,WAAW,SAASD,QAAS,EAAlD,UACE,cAACF,EAAA,EAAD,CAAMQ,MAAI,EAAV,SACE,eAAC,IAAD,CAAGG,MAAM,UAAUD,QAAQ,SAASD,QAAQ,KAA5C,uBACa,SAGf,cAACT,EAAA,EAAD,CAAMQ,MAAI,EAAV,SACoC,OAAjCiD,EAAOhI,EAAY4D,UAClB,cAAC2J,GAAA,EAAD,CACErI,MAAM,UACNY,KAAK,QACLd,QAAQ,WACRuB,MAAOyB,EAAOhI,EAAY4D,YAE1B,UAGR,eAACW,EAAA,EAAD,CAAMQ,MAAI,EAACP,WAAS,EAACE,WAAW,SAASD,QAAS,EAAlD,UACE,cAACF,EAAA,EAAD,CAAMQ,MAAI,EAAV,SACE,eAAC,IAAD,CAAGG,MAAM,YAAYD,QAAQ,SAASD,QAAQ,KAA9C,uBACa,SAGf,cAACT,EAAA,EAAD,CAAMQ,MAAI,EAAV,SACoC,OAAjCiD,EAAOhI,EAAY6D,UAClB,cAAC0J,GAAA,EAAD,CACErI,MAAM,YACNY,KAAK,QACLd,QAAQ,WACRuB,MAAOyB,EAAOhI,EAAY6D,YAE1B,c,oBClBR2J,GAAa,SAAC9F,GAA4B,IACtC+F,EAA2C/F,EAA3C+F,OAAQ9J,EAAmC+D,EAAnC/D,WAAY+J,EAAuBhG,EAAvBgG,SAAUtH,EAAasB,EAAbtB,SAIhClB,EAAQpB,EAAmBH,GACjC,OACE,mCACE,cAAC4J,GAAA,EAAD,CACErI,MAAOA,EACPqB,MAAOkH,EACPzI,QAAQ,UACRiG,SAVe,kBAAMyC,EAASD,IAW9BlI,QAVe,kBACnBa,EAASqH,EVe2B,SACtC9J,GAOA,OALe,IAAII,IAAI,CACrB,CAAC/D,EAAY4D,SAAU5D,EAAY6D,UACnC,CAAC7D,EAAY6D,SAAU,MACvB,CAAC,KAAM7D,EAAY4D,YAEPI,IAAIL,IAAe,KUvBdgK,CAAyBhK,UAoBxCiK,GAAkB,SAAC,GAAoD,IAAlD1E,EAAiD,EAAjDA,KAAM2E,EAA2C,EAA3CA,MAAO5E,EAAoC,EAApCA,QAAoC,EAC9C7E,mBAAS,IADqC,mBACnEqJ,EADmE,KAC3DK,EAD2D,KAe1E,OACE,eAACzE,GAAA,EAAD,CAAQH,KAAMA,EAAMD,QAXF,WAClB6E,EAAU,IACV7E,KASA,UACE,cAAC8E,GAAA,EAAD,yBACA,cAACzE,GAAA,EAAD,UACE,sBAAM0E,SAVM,SAACxE,GACjBA,EAAMyE,iBACNJ,EAAMJ,GACNK,EAAU,KAON,SACA,cAACI,GAAA,EAAD,CACEC,WAAS,EACTC,OAAO,QACP7H,MAAM,cACNmD,MAAO+D,EACPrH,SAvBa,SAACoD,GACpBsE,EAAUtE,EAAMC,OAAOC,kBA4EZ2E,GAvCC,SAAC3G,GAAyB,IAChC4G,EAA+D5G,EAA/D4G,QAASC,EAAsD7G,EAAtD6G,YAAaC,EAAyC9G,EAAzC8G,eAAgBC,EAAyB/G,EAAzB+G,eAAgBvG,EAASR,EAATQ,KADvB,EAEf9D,oBAAkB,GAFH,mBAEhC8E,EAFgC,KAE1BC,EAF0B,KAWjCuF,EVnFwB,SAC9BJ,EACA1G,EACAC,GAEA,OAAOyG,EAAQ9K,KAAI,SAACiK,GAAD,MAAa,CAC9BA,SACA9J,WAAYkE,EAAUjB,SAAS6G,GAC3BzN,EAAY6D,SACZ+D,EAAUhB,SAAS6G,GACnBzN,EAAY4D,SACZ,SUwEa+K,CAAiBL,EAASpG,EAAKN,UAAWM,EAAKL,WAClE,OACE,eAACtD,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACE,cAAC,GAAD,CACEyE,KAAMA,EACN2E,MATkB,SAACJ,GACvBtE,GAAQ,GACRoF,EAAYd,IAQRxE,QAdc,WAClBE,GAAQ,MAeN,cAAC5E,EAAA,EAAD,CAAMQ,MAAI,EAAV,SACE,cAACO,EAAA,EAAD,CAAQN,QAAQ,YAAYO,QAdf,kBAAM4D,GAAQ,IAc3B,0BAIF,cAAC5E,EAAA,EAAD,CAAMQ,MAAI,EAAV,SACG2J,EAAWlL,KAAI,gBAAGiK,EAAH,EAAGA,OAAQ9J,EAAX,EAAWA,WAAX,OACd,cAAC,GAAD,CAEEyC,SAAUoI,EACVd,SAAUe,EACVhB,OAAQA,EACR9J,WAAYA,GAJP8J,Y,+DC7GJmB,GAAmB,SAAC1G,GAC/B,IAAML,EAAYK,EAAKL,UAAUrE,KAAI,SAACqL,GAAD,MAAO,CAC1CA,EACA3G,EAAKF,OAAOhI,EAAY6D,WAAa,SAEjC+D,EAAYM,EAAKN,UAAUpE,KAAI,SAACqL,GAAD,MAAO,CAC1CA,EACA3G,EAAKF,OAAOhI,EAAY4D,WAAa,SAEvC,OAAO,2BACFkL,KAAUjH,IACViH,KAAUlH,KAIXmH,GAAU,SAACrF,GAAD,YAAmCpB,IAAVoB,GAAiC,OAAVA,GAE1DsF,GAAgB,SACpBC,EACAC,GAKA,OAHAD,EAASF,GAAQE,GAAUA,EAAS,IACpCC,EAASH,GAAQG,GAAUA,EAAS,IAUzBC,GAAe,SAACC,GAAD,OAAuB,SACjDC,GADiD,OAE1BC,KAPF,SAACF,GAAD,OAAuB,SAACzO,GAE7C,OADAA,EAAQoO,GAAQpO,GAASA,EAAQ,GACNyO,GAKMG,CAAeH,GAAzBE,CAAqCD,K,qBCe/CG,GAlCI,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,cACdnB,EAAU3J,KDwBW,SAC3B8K,GAEA,IAAMnB,EAAUmB,EAAc/G,QAAO,SAAC4F,EAASoB,GAE7C,OADA7K,OAAOC,KAAK4K,GAAoBC,SAAQ,SAACd,GAAD,OAAOP,EAAQsB,IAAIf,MACpDP,IACN,IAAIuB,KACP,OAAO,YAAIvB,EAAQwB,UC/BIC,CAAcN,IAC/BO,EAAMb,GAPK,IAOLA,CDmBiB,SAC7BM,GAD6B,OAENQ,KAAU,WAAV,GAAW,IAAX,mBAAkBR,GAAlB,CAAiCT,MCrBnBkB,CAAgBT,IAErD,OACE,cAACpE,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,WACE,cAACE,GAAA,EAAD,mBACC4C,EAAQ9K,KAAI,SAACiK,GAAD,OACX,cAAC/B,GAAA,EAAD,oBAA4B+B,EAA5B,kBACkBnF,IAAhB0H,EAAIvC,GAAwB,GAAKuC,EAAIvC,GADvC,MAAgBA,WAMtB,cAAC9B,GAAA,EAAD,UACG8D,EAAcjM,KAAI,SAACwE,EAAQmD,GAAT,OACjB,eAACK,GAAA,EAAD,WACE,cAACE,GAAA,EAAD,UAAYP,EAAQ,IACnBmD,EAAQ9K,KAAI,SAACiK,GAAD,OACX,cAAC/B,GAAA,EAAD,eACsBpD,IAAnBN,EAAOyF,GAAwB,IAAMzF,EAAOyF,IAD/BA,QAHLtC,cCZrBgF,GdsH2B,WAC/B,IAAMC,EAJNvL,OAAOC,KAAKxF,GAAUkE,KAAI,SAAC6M,GAAD,OAAiB9N,EAAO8N,MAKlD,OAAOC,KAAQ,SAAC5N,GAAD,OAASA,EAAI7B,OAAS,WAAUuP,GcxH1BG,GA0HRC,GAxHK,WAAO,IAAD,EACApM,mBAAeqD,KADf,mBACjBS,EADiB,KACXuI,EADW,OAEMrM,mBAAmB,IAFzB,mBAEjBkK,EAFiB,KAERoC,EAFQ,OAGkBtM,mBAA+B,IAHjD,mBAGjBqL,EAHiB,KAGFkB,EAHE,KAmExB,OACE,eAACpM,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAG6I,UAAU,SAAtC,UACE,cAAC/I,EAAA,EAAD,CAAMQ,MAAI,EAAV,SACE,eAACR,EAAA,EAAD,CAAMQ,MAAI,EAACP,WAAS,EAACC,QAAS,EAAG6I,UAAU,MAA3C,UACE,cAAC/I,EAAA,EAAD,CAAMQ,MAAI,EAAV,SACE,cAACO,EAAA,EAAD,CAAQN,QAAQ,YAAYO,QAjEd,kBAAMkL,EAAQhJ,MAiE5B,0BAIF,cAAClD,EAAA,EAAD,CAAMQ,MAAI,EAAV,SACE,cAAC,GAAD,CAAgBmD,KAAMA,EAAM9B,SAvDH,SACjCwK,EACAlH,GAEA,GAAa,mBAATkH,EAA2B,CAC7B,IAAMnK,GXAgBqB,EWAO4B,EXCjC,CACEjG,EAAiB4D,WACjB5D,EAAiB6D,SACjB7D,EAAiB8D,SACjB9D,EAAiB+D,MACjBZ,SAASkB,GWLHf,EAAe,CACbvB,QAASlG,EAASoB,MAClBgF,MAAO1F,EAAY4D,WAErBmD,EAAe,CACbvB,QAASlG,EAASgD,UAClBoD,MAAO1F,EAAY4D,SACnBgC,YAAY,KAEZiL,EAAU5J,IACdwB,GXyE0B,SAAChC,GAAD,OAAwB,SAACyB,GAAD,OACxDK,GAAYL,EAAZK,CAAkB9B,IWzEZqK,CAAmBrK,GACnB2B,GAAW,eAAGwI,EAAOlH,IAHPzC,CAIdiB,GACFuI,EAAQI,QAERJ,EAAQrI,GAAW,eAAGwI,EAAOlH,GAArBtB,CAA8BF,IXjBjB,IAACJ,YWsDtB,cAACvD,EAAA,EAAD,CAAMQ,MAAI,EAAV,SACE,cAAC,GAAD,CACEuJ,QAASA,EACTpG,KAAMA,EACNqG,YA7EgB,SAACd,GAAD,OACtBiD,GAAW,SAACrK,GAAD,OAAU0K,KAAK,GAAD,mBAAK1K,GAAL,CAAWoH,SA6E9BgB,eA5EmB,SAAChB,GAAD,OACzBiD,GAAW,SAACrK,GAAD,OAAUA,EAAK2K,QAAO,SAACnC,GAAD,OAAOA,IAAMpB,SA4ExCe,eA3EmB,SACzBf,EACA9J,GAGE8M,EADiB,OAAf9M,EXyFoB,SAAC8J,GAAD,OAAoB,SAACvF,GAAD,mBAAC,eAC5CA,GAD2C,IAE9CL,UAAWK,EAAKL,UAAUmJ,QAAO,SAACnC,GAAD,OAAOA,IAAMpB,KAC9C7F,UAAWM,EAAKN,UAAUoJ,QAAO,SAACnC,GAAD,OAAOA,IAAMpB,QW3FlCwD,CAAaxD,EAAbwD,CAAqB/I,GXsEV,SAACuF,EAAgBjL,GAAjB,OAAuC,SAC9D0F,GACU,IAAD,EACHgJ,EAAM1O,IAASxC,EAAY4D,SAAW,YAAc,YAEpDuN,EAAW3O,IAASxC,EAAY6D,SAAW,YAAc,YAE/D,OAAIqE,EAAKgJ,GAAKtK,SAAS6G,GACd,eAAKvF,GAGP,2BACFA,GADL,uBAEGgJ,EAFH,sBAEahJ,EAAKgJ,IAFlB,CAEwBzD,KAFxB,cAGG0D,EAAWjJ,EAAKiJ,GAAUH,QAAO,SAACnC,GAAD,OAAOA,IAAMpB,MAHjD,KW/EY2D,CAAU3D,EAAQ9J,EAAlByN,CAA8BlJ,SAuEtC,eAAC3D,EAAA,EAAD,CAAMQ,MAAI,EAACP,WAAS,EAApB,UACE,cAACD,EAAA,EAAD,CAAMQ,MAAI,EAAV,SACE,cAAC,GAAD,CAAWmD,KAAMA,MAEnB,cAAC3D,EAAA,EAAD,CAAMQ,MAAI,EAAV,SACE,cAACO,EAAA,EAAD,CAAQN,QAAQ,YAAYO,QAjCb,WACrBoL,EAAiB,GAAD,mBAAKlB,GAAL,CAAoBb,GAAiB1G,MACrDuI,EAAQhJ,MA+BF,8BAKJ,cAAClD,EAAA,EAAD,CAAMQ,MAAI,EAAV,SACE,cAAC,EAAD,CACEb,YAAaiM,GACbhM,cAxDkB,SAACsC,GACzB,OAAOgK,EAAQxJ,IAAKF,EAAgBwB,GAAYL,GAAjCjB,CAAwCR,SA0DrD,cAAClC,EAAA,EAAD,CAAMQ,MAAI,EAAV,SACE,cAAC,GAAD,CACE4C,UAAS,OAAEO,QAAF,IAAEA,OAAF,EAAEA,EAAMP,UACjBvB,SA3DqB,SAC3B+E,EACAjB,EACAR,GTW0B,IAACrB,EST3BoI,EACExJ,KTQyBoB,ESPR,eAAG6B,EAAQR,GTO8B,SAC9DjD,GAEA,IAAMoK,EAAO,2BAAQpK,GAAa4B,GAElC,OADA7B,EAAiBqK,GACVA,IFoEyB,SAAC3I,GAAD,OAAgB,SAACiD,GAAD,OAAmB,SACnE0F,GAEA,OAAO5I,GAAqB,2BACvBC,GADsB,IAEzBP,UAAWO,EAAKP,UAAUnE,KAAI,SAACiD,EAAU4K,GAAX,OAC5BA,IAAMlG,EAAN,eAAmB0F,GAAYpK,UWrF7B6K,CAAmBpJ,EAAnBoJ,CAAyBnG,GAF3BlE,CAGEiB,EAAKP,UAAUwD,MAmDbF,SAzGqB,SAACE,GAAD,OAC3BsF,EXuH0B,SAACvI,GAAD,OAAgB,SAACiD,GAC7C,OAAOlD,GAAqB,2BACvBC,GADsB,IAEzBP,UAAWO,EAAKP,UAAUqJ,QAAO,SAACnG,EAAGwG,GAAJ,OAAUA,IAAMlG,SW1HzCoG,CAAerJ,EAAfqJ,CAAqBpG,SA2G3B,cAAC5G,EAAA,EAAD,CAAMQ,MAAI,EAAV,SACE,cAAC,GAAD,CAAY0K,cAAeA,UC5I7B+B,GAAcC,aAAW,SAACC,GAAD,MAAY,CACzClN,UAAW,CACTmN,QAASD,EAAMjN,QAAQ,QAmBZmN,OAff,WACE,IAAMC,EAAUL,KAEhB,OACE,qCACE,cAACM,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACE,eAAC,IAAD,CAAG/M,QAAQ,KAAX,UAAgB,cAAC,IAAD,CAAME,MAAM,QAA5B,qBAEF,cAAC8M,EAAA,EAAD,CAAWC,UAAWJ,EAAQrN,UAA9B,SACE,cAAC,GAAD,UCNO0N,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCJdQ,IAAS3J,OACP,cAAC,IAAM4J,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BZ,O","file":"static/js/main.c81f088e.chunk.js","sourcesContent":["import groupBy from \"lodash/fp/groupBy\";\nimport sortBy from \"lodash/fp/sortBy\";\n\nexport interface Bid extends BidData {\n  type: BID_TYPE;\n}\n\ninterface BidData {\n  score: number | ((party: number) => number);\n  group?: BidGroupType;\n  variants?: BidVariant[];\n  silent?: boolean;\n  winByDefault?: boolean;\n  notWinIfSilent?: boolean;\n  denyContra?: boolean;\n}\n\nexport enum BID_TYPE {\n  PARTY = \"PARTY\",\n  TRULL = \"TRULL\",\n  FOUR_KING = \"FOUR_KING\",\n  CATCH_THE_MAYOR = \"CATCH_THE_MAYOR\",\n  CATCH_THE_PAGAT = \"CATCH_THE_PAGAT\",\n  ULTI = \"ULTI\",\n  UHU = \"UHU\",\n  DOUBLE_PARTY = \"DOUBLE_PARTY\",\n  VOLAT = \"VOLAT\",\n  PHEASANT = \"PHEASANT\",\n  PHEASANT_IN_2ND = \"PHEASANT_IN_2ND\",\n  EIGHT_TAROCK = \"EIGHT_TAROCK\",\n  NINE_TAROCK = \"NINE_TAROCK\",\n  FURRY = \"FURRY\",\n  CENTRUM = \"CENTRUM\",\n  SMALL_BIRD = \"SMALL_BIRD\",\n  LARGE_BIRD = \"LARGE_BIRD\",\n  CSUZIMA = \"CSUZIMA\",\n  KING_ULTI = \"KING_ULTI\",\n  KING_UHU = \"KING_UHU\",\n  KLOPICZKY = \"KLOPICZKY\",\n}\n\nexport type BidGroupType =\n  | \"PARTY_LIKE\"\n  | \"ULTI_LIKE\"\n  | \"CENTRUM_LIKE\"\n  | \"CATCHES\"\n  | \"OTHERS\";\nconst BID_GROUPS: { [K in BidGroupType]: { weight: number } } = {\n  PARTY_LIKE: { weight: 10 },\n  ULTI_LIKE: { weight: 20 },\n  CENTRUM_LIKE: { weight: 30 },\n  CATCHES: { weight: 40 },\n  OTHERS: { weight: 50 },\n};\nexport const bidGroupNamesByWeight = () =>\n  sortBy((g) => BID_GROUPS[g as BidGroupType].weight, Object.keys(BID_GROUPS));\n\nexport enum SMALLEST_VARIANT {\n  PAGAT = \"PAGAT\",\n  EAGLE = \"EAGLE\",\n}\n\nexport enum CARD_SHAPE_VARIANT {\n  HEART = \"HEART\",\n  SPADE = \"SPADE\",\n  CLUB = \"CLUB\",\n  DIAMOND = \"DIAMOND\",\n}\n\nconst SMALLEST_VARIANTS = [SMALLEST_VARIANT.PAGAT, SMALLEST_VARIANT.EAGLE];\nconst CARD_SHAPE_VARIANTS = [\n  CARD_SHAPE_VARIANT.CLUB,\n  CARD_SHAPE_VARIANT.DIAMOND,\n  CARD_SHAPE_VARIANT.HEART,\n  CARD_SHAPE_VARIANT.SPADE,\n];\n\nexport type BidVariant = SMALLEST_VARIANT | CARD_SHAPE_VARIANT;\n\nconst BIDS: { [key in BID_TYPE]: BidData } = {\n  [BID_TYPE.PARTY]: { score: (party: number) => party, group: \"PARTY_LIKE\" },\n  [BID_TYPE.TRULL]: { score: 2, silent: true },\n  [BID_TYPE.FOUR_KING]: { score: 2, silent: true },\n  [BID_TYPE.CATCH_THE_MAYOR]: { score: 42, silent: true, group: \"CATCHES\" },\n  [BID_TYPE.CATCH_THE_PAGAT]: { score: 4, group: \"CATCHES\" },\n  [BID_TYPE.ULTI]: {\n    score: 10,\n    variants: [...SMALLEST_VARIANTS],\n    silent: true,\n    group: \"ULTI_LIKE\",\n    notWinIfSilent: true,\n  },\n  [BID_TYPE.UHU]: {\n    score: 15,\n    variants: [...SMALLEST_VARIANTS],\n    group: \"ULTI_LIKE\",\n  },\n  [BID_TYPE.DOUBLE_PARTY]: {\n    score: (party: number) => party * 4,\n    silent: true,\n    group: \"PARTY_LIKE\",\n  },\n  [BID_TYPE.VOLAT]: {\n    score: (party: number) => party * 6,\n    silent: true,\n    group: \"PARTY_LIKE\",\n  },\n  [BID_TYPE.PHEASANT]: {\n    score: 50,\n    variants: [...SMALLEST_VARIANTS],\n    group: \"ULTI_LIKE\",\n  },\n  [BID_TYPE.PHEASANT_IN_2ND]: {\n    score: 50,\n    variants: [...SMALLEST_VARIANTS],\n    group: \"ULTI_LIKE\",\n  },\n  [BID_TYPE.EIGHT_TAROCK]: { score: 1, winByDefault: true, denyContra: true },\n  [BID_TYPE.NINE_TAROCK]: { score: 2, winByDefault: true, denyContra: true },\n  [BID_TYPE.FURRY]: {\n    score: 25,\n    variants: [...CARD_SHAPE_VARIANTS],\n    group: \"ULTI_LIKE\",\n  },\n  [BID_TYPE.CENTRUM]: { score: 10, group: \"CENTRUM_LIKE\" },\n  [BID_TYPE.SMALL_BIRD]: { score: 15, group: \"CENTRUM_LIKE\" },\n  [BID_TYPE.LARGE_BIRD]: { score: 20, group: \"CENTRUM_LIKE\" },\n  [BID_TYPE.KING_ULTI]: {\n    score: 15,\n    variants: [...CARD_SHAPE_VARIANTS],\n    group: \"ULTI_LIKE\",\n  },\n  [BID_TYPE.KING_UHU]: {\n    score: 20,\n    variants: [...CARD_SHAPE_VARIANTS],\n    group: \"ULTI_LIKE\",\n  },\n  [BID_TYPE.CSUZIMA]: { score: 4 },\n  [BID_TYPE.KLOPICZKY]: { score: 3, winByDefault: true, denyContra: true },\n};\n\nexport const getBid = (type: BID_TYPE): Bid => ({ type, ...BIDS[type] });\n\nexport const getAllBids = (): Bid[] =>\n  Object.keys(BID_TYPE).map((b: BID_TYPE) => getBid(b));\n\nexport type BidsByGroup = { [K in BidGroupType]: Bid[] };\nexport const getAllBidsByGorup = (): BidsByGroup => {\n  const bids = getAllBids();\n  return groupBy((bid) => bid.group || \"OTHERS\", bids) as BidsByGroup;\n};\n\nexport const canSilent = (bid: Bid): boolean => bid?.silent === true;\n\nexport const getBidScore = (partyScore: number) => (bid: Bid): number =>\n  typeof bid.score === \"function\" ? bid.score(partyScore) : bid.score;\n\nexport const hasVariant = (variant: BidVariant) => (bid: Bid): boolean => {\n  const variants = bid?.variants || [];\n  return variants.includes(variant);\n};\n","export enum PLAYER_TYPE {\n  DECLARER = \"DECLARER\",\n  OPPONENT = \"OPPONENT\",\n}\nexport type Player = string;\nexport type PlayerScore = number | null;\n\nexport const getAnotherPlayerType = (playerType: PLAYER_TYPE): PLAYER_TYPE =>\n  playerType === PLAYER_TYPE.DECLARER\n    ? PLAYER_TYPE.OPPONENT\n    : PLAYER_TYPE.DECLARER;\n\nexport interface PlayerListItem {\n  player: Player;\n  playerType: PLAYER_TYPE | null;\n}\nexport type PlayerList = PlayerListItem[];\nexport const createPlayerList = (\n  players: Player[],\n  declarers: Player[],\n  opponents: Player[]\n): PlayerList => {\n  return players.map((player) => ({\n    player,\n    playerType: opponents.includes(player)\n      ? PLAYER_TYPE.OPPONENT\n      : declarers.includes(player)\n      ? PLAYER_TYPE.DECLARER\n      : null,\n  }));\n};\n\ntype PlayerTypeColor = \"primary\" | \"secondary\" | \"default\";\nexport const getPlayerTypeColor = (\n  playerType: PLAYER_TYPE | null\n): PlayerTypeColor => {\n  const mapper = new Map<PLAYER_TYPE | null, PlayerTypeColor>([\n    [PLAYER_TYPE.DECLARER, \"primary\"],\n    [PLAYER_TYPE.OPPONENT, \"secondary\"],\n    [null, \"default\"],\n  ]);\n  return mapper.get(playerType) || \"default\";\n};\n\nexport const rotatePlayerTypeWithNull = (\n  playerType: PLAYER_TYPE | null\n): PLAYER_TYPE | null => {\n  const mapper = new Map([\n    [PLAYER_TYPE.DECLARER, PLAYER_TYPE.OPPONENT],\n    [PLAYER_TYPE.OPPONENT, null],\n    [null, PLAYER_TYPE.DECLARER],\n  ]);\n  return mapper.get(playerType) || null;\n};\n","const makeFirstLetterCapital = (word: string): string => {\n  if (word.length < 1) {\n    return word\n  }\n  const [first, ...rest] = word.split(\"\")\n  return `${first.toUpperCase()}${rest.join(\"\").toLowerCase()}`\n}\n\nexport const upperCaseToWords = (upperCased: string): string => {\n  return upperCased\n    .split(\"_\")\n    .map(makeFirstLetterCapital)\n    .join(\" \")\n}\n","import {\n  calculateContract,\n  Contract,\n  updateBidBaseScore,\n  createContract,\n} from \"./contract\";\nimport {\n  getAnotherPlayerType,\n  Player,\n  PLAYER_TYPE,\n  PlayerScore,\n} from \"./player\";\n\ntype GameScore = {\n  [PLAYER_TYPE.DECLARER]: PlayerScore;\n  [PLAYER_TYPE.OPPONENT]: PlayerScore;\n};\nexport interface Game {\n  contracts: Contract[];\n  declarers: Player[];\n  opponents: Player[];\n  partyScoreType: PARTY_SCORE_TYPE | null;\n  called_tarock: CalledTarockType | null;\n  scores: GameScore;\n}\n\ntype CalledTarockType =\n  | \"XX\"\n  | \"XIX\"\n  | \"XVIII\"\n  | \"XVII\"\n  | \"XVI\"\n  | \"XV\"\n  | \"XIV\"\n  | \"XIII\"\n  | \"XII\";\n\nexport const CALLED_TAROCK: { [K in CalledTarockType]: CalledTarockType } = {\n  XX: \"XX\",\n  XIX: \"XIX\",\n  XVIII: \"XVIII\",\n  XVII: \"XVII\",\n  XVI: \"XVI\",\n  XV: \"XV\",\n  XIV: \"XIV\",\n  XIII: \"XIII\",\n  XII: \"XII\",\n};\n\nexport enum PARTY_SCORE_TYPE {\n  KLOPICZKY = \"KLOPICZKY\",\n  TOOK_THREE = \"TOOK_THREE\",\n  TOOK_TWO = \"TOOK_TWO\",\n  TOOK_ONE = \"TOOK_ONE\",\n  SOLO = \"SOLO\",\n}\nexport type PartyScoreValue = 0 | 1 | 2 | 3 | 4;\n\nexport const isPartyLike = (partyScoreType: PARTY_SCORE_TYPE): boolean =>\n  [\n    PARTY_SCORE_TYPE.TOOK_THREE,\n    PARTY_SCORE_TYPE.TOOK_TWO,\n    PARTY_SCORE_TYPE.TOOK_ONE,\n    PARTY_SCORE_TYPE.SOLO,\n  ].includes(partyScoreType);\n\nexport const PARTY_SCORE: { [K in PARTY_SCORE_TYPE]: PartyScoreValue } = {\n  [PARTY_SCORE_TYPE.TOOK_THREE]: 1,\n  [PARTY_SCORE_TYPE.TOOK_TWO]: 2,\n  [PARTY_SCORE_TYPE.TOOK_ONE]: 3,\n  [PARTY_SCORE_TYPE.SOLO]: 4,\n  [PARTY_SCORE_TYPE.KLOPICZKY]: 0,\n};\n\ninterface CreateGameProps {\n  partyScoreType?: PARTY_SCORE_TYPE;\n  called_tarock?: CalledTarockType;\n}\nexport const createGame = (props: CreateGameProps = {}): Game => ({\n  contracts: [],\n  declarers: [],\n  opponents: [],\n  partyScoreType: props.partyScoreType || null,\n  called_tarock: props.called_tarock || null,\n  scores: {\n    [PLAYER_TYPE.DECLARER]: null,\n    [PLAYER_TYPE.OPPONENT]: null,\n  },\n});\n\nconst updateGameWithScores = (game: Game): Game => {\n  const scores = calculateGame(game);\n\n  return {\n    ...game,\n    scores: { ...scores },\n  };\n};\n\nexport interface UpdateGameProps {\n  partyScoreType?: PARTY_SCORE_TYPE;\n  called_tarock?: CalledTarockType | null;\n}\nexport const updateGame = (updates: UpdateGameProps) => (game: Game): Game => {\n  const contracts =\n    updates.partyScoreType === undefined\n      ? game.contracts\n      : game.contracts.map(\n          updateBidBaseScore(PARTY_SCORE[updates.partyScoreType])\n        );\n\n  return updateGameWithScores({\n    ...game,\n    contracts: [...contracts],\n    ...updates,\n  });\n};\n\nexport const addPlayer = (player: Player, type: PLAYER_TYPE) => (\n  game: Game\n): Game => {\n  const key = type === PLAYER_TYPE.DECLARER ? \"declarers\" : \"opponents\";\n\n  const otherKey = type === PLAYER_TYPE.OPPONENT ? \"declarers\" : \"opponents\";\n\n  if (game[key].includes(player)) {\n    return { ...game };\n  }\n\n  return {\n    ...game,\n    [key]: [...game[key], player],\n    [otherKey]: game[otherKey].filter((p) => p !== player),\n  };\n};\n\nexport const removePlayer = (player: Player) => (game: Game): Game => ({\n  ...game,\n  opponents: game.opponents.filter((p) => p !== player),\n  declarers: game.declarers.filter((p) => p !== player),\n});\n\nexport const addContractFlipped = (contract: Contract) => (game: Game): Game =>\n  addContract(game)(contract);\n\nexport const addContract = (game: Game) => (contract: Contract): Game => {\n  const partyScore = game?.partyScoreType\n    ? PARTY_SCORE[game?.partyScoreType]\n    : null;\n  const updatedContract = createContract({ ...contract, partyScore });\n  return updateGameWithScores({\n    ...game,\n    contracts: [...game.contracts, updatedContract],\n  });\n};\n\nexport const removeContract = (game: Game) => (index: number): Game => {\n  return updateGameWithScores({\n    ...game,\n    contracts: game.contracts.filter((_, i) => i !== index),\n  });\n};\n\nexport const removeAllContract = (game: Game): Game => ({\n  ...game,\n  contracts: [],\n});\n\nexport const updateGameContract = (game: Game) => (index: number) => (\n  updated: Contract\n): Game => {\n  return updateGameWithScores({\n    ...game,\n    contracts: game.contracts.map((contract, i) =>\n      i === index ? { ...updated } : contract\n    ),\n  });\n};\n\nexport const calculateGame = (game: Game): GameScore => {\n  return game.contracts.reduce(\n    (partyScore, contract) => {\n      const score = calculateContract(contract);\n      if (score === null) {\n        return partyScore;\n      }\n\n      const addScore = (\n        prevScore: PlayerScore,\n        score: PlayerScore\n      ): PlayerScore => {\n        if (prevScore === null) {\n          return score;\n        } else {\n          return score === null ? prevScore : score + prevScore;\n        }\n      };\n\n      const taker = contract.taker;\n      const another = getAnotherPlayerType(taker);\n\n      return {\n        ...partyScore,\n        [taker]: addScore(partyScore[taker], score),\n        [another]: addScore(\n          partyScore[another],\n          score === null ? null : score * -1\n        ),\n      };\n    },\n    {\n      [PLAYER_TYPE.DECLARER]: null,\n      [PLAYER_TYPE.OPPONENT]: null,\n    }\n  );\n};\n","import React, { useState } from \"react\";\nimport {\n  Button,\n  Grid,\n  Box,\n  Typography as T,\n  Switch,\n  FormControlLabel,\n} from \"@material-ui/core\";\nimport {\n  BidsByGroup,\n  BidGroupType,\n  bidGroupNamesByWeight,\n  BID_TYPE,\n  getBid,\n  canSilent,\n} from \"../lib/bid\";\nimport { upperCaseToWords } from \"../lib/util\";\nimport { Contract, CreateContractProps } from \"../lib/contract\";\nimport { PLAYER_TYPE } from \"../lib/player\";\n\ninterface BidSelectorProps {\n  bidsByGroup: BidsByGroup;\n  onAddContract: (contract: Partial<Contract>) => void;\n}\nconst ContractSelector = ({ bidsByGroup, onAddContract }: BidSelectorProps) => {\n  const [silentAndWin, setSilentAndWin] = useState<boolean>(false);\n\n  const handleSwitch = () => {\n    setSilentAndWin((prev: boolean) => !prev);\n  };\n  const handleClick = (bidType: BID_TYPE) => {\n    const bid = getBid(bidType);\n    const shouldWinWithSilent = silentAndWin && !bid.notWinIfSilent;\n    onAddContract({\n      bidType: bidType,\n      taker: PLAYER_TYPE.DECLARER,\n      silent: silentAndWin && canSilent(bid),\n      bidVariant: null,\n      winByTaker: bid.winByDefault || shouldWinWithSilent,\n    });\n  };\n  return (\n    <Grid container spacing={1} alignItems=\"flex-end\">\n      {bidGroupNamesByWeight().map((group) => (\n        <Grid item key={group} spacing={1}>\n          <T variant=\"caption\" display=\"block\" color=\"textSecondary\">\n            {upperCaseToWords(group)}\n          </T>\n          {bidsByGroup[group as BidGroupType].map((bid) => (\n            <Box key={bid.type} component=\"span\" mr={0.5}>\n              <Button\n                variant=\"outlined\"\n                color=\"primary\"\n                onClick={() => handleClick(bid.type)}\n                size=\"small\"\n                disabled={silentAndWin && !canSilent(bid)}\n              >\n                {upperCaseToWords(bid.type)}\n              </Button>\n            </Box>\n          ))}\n        </Grid>\n      ))}\n      <Grid item>\n        <FormControlLabel\n          control={\n            <Switch\n              checked={silentAndWin}\n              onChange={handleSwitch}\n              name=\"silentAndWinSwitch\"\n            />\n          }\n          label=\"Silent & Win\"\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default ContractSelector;\n","import { PLAYER_TYPE } from \"./player\";\nimport {\n  BidVariant,\n  BID_TYPE,\n  canSilent,\n  hasVariant,\n  getBid,\n  getBidScore,\n} from \"./bid\";\nimport flow from \"lodash/fp/flow\";\nimport pick from \"lodash/fp/pick\";\nimport isEqual from \"lodash/fp/isEqual\";\nimport groupBy from \"lodash/fp/groupBy\";\nimport { PartyScoreValue } from \"./game\";\n\nconst CONTRA_NAMES = [\"None\", \"Contra\", \"Recontra\", \"Subcontra\", \"Mortcontra\"];\n\ntype ContraMultiplier = number;\nexport interface Contract {\n  bidType: BID_TYPE;\n  bidBaseScore: number | null;\n  bidVariant: BidVariant | null;\n  contra: ContraMultiplier;\n  winByTaker: boolean | null;\n  taker: PLAYER_TYPE;\n  silent: boolean;\n}\n\nconst validateContract = (contract: Contract): void | undefined => {\n  const { silent, bidType, bidVariant, contra } = contract;\n  const bid = getBid(bidType);\n  if (silent && !canSilent(bid)) {\n    throw new Error(`${bid.type} can not be silent.`);\n  }\n  if (bidVariant && !hasVariant(bidVariant)(bid)) {\n    throw new Error(`${bid.type} does not have ${bidVariant} variant.`);\n  }\n  const isPowerOfTwo = Math.log2(contra) % 1 === 0;\n  if (!isPowerOfTwo) {\n    throw new Error(`Contra must be power of two, but ${contra} given.`);\n  }\n  if (contra < 1) {\n    throw new Error(`Contra must be greater than 1, but ${contra} given.`);\n  }\n};\n\nexport interface CreateContractProps {\n  bidType: BID_TYPE;\n  partyScore?: PartyScoreValue | null;\n  taker: PLAYER_TYPE;\n  silent?: boolean;\n  bidVariant?: BidVariant | null;\n  winByTaker?: boolean | null;\n}\nexport const createContract = ({\n  bidType,\n  taker,\n  partyScore = null,\n  silent = false,\n  bidVariant = null,\n  winByTaker = null,\n}: CreateContractProps): Contract => {\n  const contract = {\n    bidType,\n    bidVariant,\n    contra: 1,\n    silent,\n    winByTaker,\n    taker,\n    bidBaseScore:\n      partyScore !== null\n        ? flow(getBid, getBidScore(partyScore))(bidType)\n        : null,\n  };\n  validateContract(contract);\n  return contract;\n};\n\nexport const updateBidBaseScore = (partyScore: PartyScoreValue) => (\n  contract: Contract\n): Contract => ({\n  ...contract,\n  bidBaseScore: flow(getBid, getBidScore(partyScore))(contract.bidType),\n});\n\nexport type UpdateContractProps = Partial<\n  Pick<\n    Contract,\n    | \"taker\"\n    | \"winByTaker\"\n    | \"silent\"\n    | \"bidVariant\"\n    | \"contra\"\n  >\n>;\nexport const updateContract = (updates: UpdateContractProps) => (\n  contract: Contract\n): Contract => {\n  const updated = { ...contract, ...updates };\n  validateContract(updated);\n  return updated;\n};\n\nexport type ContractScore = number | null;\nexport const calculateContract = (contract: Contract): ContractScore => {\n  const { winByTaker, bidBaseScore, contra, silent } = contract;\n  if (winByTaker === null || bidBaseScore === null) {\n    return null;\n  }\n  const multiplier = silent ? 0.5 : contra;\n  const sign = winByTaker ? 1 : -1;\n  return sign * bidBaseScore * multiplier;\n};\n\nexport type ContractWithIndex = [Contract, number];\nexport const withIndices = (contracts: Contract[]): ContractWithIndex[] =>\n  contracts.map((contract, index) => [contract, index]);\n\nconst PARTY_LIKE_BIDS = [BID_TYPE.PARTY, BID_TYPE.DOUBLE_PARTY, BID_TYPE.VOLAT];\nexport const filterByPartyLike = (\n  contracts: ContractWithIndex[]\n): ContractWithIndex[] =>\n  contracts.filter(([contract, _]) =>\n    PARTY_LIKE_BIDS.includes(contract.bidType)\n  );\n\nexport const filterByProps = (props: Partial<Contract>) => (contracts: ContractWithIndex[]): ContractWithIndex[] => {\n  return contracts.filter(([contract, _]) => flow(\n      pick(Object.keys(props)),\n      isEqual(props)\n    )(contract)\n  )\n}\n\nexport const groupByPlayerType = (contracts: ContractWithIndex[]) => {\n  const groupped = groupBy(([contract]) => contract.taker)(contracts);\n  return {\n    [PLAYER_TYPE.DECLARER]: groupped[PLAYER_TYPE.DECLARER] || [],\n    [PLAYER_TYPE.OPPONENT]: groupped[PLAYER_TYPE.OPPONENT] || []\n  }\n}\n","import React from \"react\";\nimport {\n  calculateContract,\n  Contract,\n  UpdateContractProps,\n} from \"../lib/contract\";\nimport { upperCaseToWords } from \"../lib/util\";\nimport {\n  TableContainer,\n  TableHead,\n  TableBody,\n  Table,\n  TableCell,\n  TableRow,\n  IconButton,\n  Button,\n  Checkbox,\n  Typography as T,\n} from \"@material-ui/core\";\nimport {\n  MdDelete as RemoveIcon,\n  MdArrowUpward as DoubleContraIcon,\n  MdArrowDownward as DivideContraIcon,\n} from \"react-icons/md\";\nimport { BidVariant, getBid } from \"../lib/bid\";\nimport VariantSelector from \"./VariantSelector\";\nimport SilentSwitch from \"./SilentSwitch\";\nimport {\n  getAnotherPlayerType,\n  getPlayerTypeColor,\n  PLAYER_TYPE,\n} from \"../lib/player\";\nimport curry from \"lodash/fp/curry\";\n\ninterface VariantSelectorModalProps {\n  contract: Contract;\n  onChange: (variant: BidVariant) => void;\n}\nconst VariantSelectorModal = (props: VariantSelectorModalProps) => {\n  const { contract, onChange } = props;\n  const handleChange = (variant: BidVariant) => {\n    onChange(variant);\n  };\n  const bid = getBid(contract.bidType);\n\n  if (!bid.variants) {\n    return null;\n  }\n\n  return (\n    <>\n      <VariantSelector\n        variants={bid.variants || []}\n        selected={contract.bidVariant}\n        onChange={handleChange}\n        render={(handleOpen) => (\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            onClick={handleOpen}\n            size=\"small\"\n          >\n            {upperCaseToWords(contract.bidVariant ?? \"Select variant\")}\n          </Button>\n        )}\n      />\n    </>\n  );\n};\n\nenum ACTION_TYPE {\n  DELETE = \"DELETE\",\n  CHANGE = \"CHANGE\",\n}\n\ntype ContractField = keyof UpdateContractProps;\ntype Field = ContractField | string;\ninterface ColumnDefinition {\n  field: Field;\n  headerName: string;\n  valueGetter?: (\n    contract: Contract,\n    onAction?: (actionType: ACTION_TYPE, value?: any) => void\n  ) => React.ReactNode;\n}\nconst columns: ColumnDefinition[] = [\n  {\n    field: \"bidType\",\n    headerName: \"Bid\",\n    valueGetter: (contract: Contract) => upperCaseToWords(contract.bidType),\n  },\n  {\n    field: \"bidVariant\",\n    headerName: \"Variant\",\n    valueGetter: (contract, onAction) => {\n      const handleChange = (variant: BidVariant) =>\n        onAction && onAction(ACTION_TYPE.CHANGE, variant);\n\n      return (\n        <VariantSelectorModal contract={contract} onChange={handleChange} />\n      );\n    },\n  },\n  {\n    field: \"taker\",\n    headerName: \"Taker\",\n    valueGetter: (contract, onAction) => {\n      const newTaker = getAnotherPlayerType(contract.taker);\n      const handleClick = () =>\n        onAction && onAction(ACTION_TYPE.CHANGE, newTaker);\n      const color = getPlayerTypeColor(contract.taker);\n      return (\n        <Button color={color} onClick={handleClick}>\n          {contract.taker}\n        </Button>\n      );\n    },\n  },\n  {\n    field: \"silent\",\n    headerName: \"Silent\",\n    valueGetter: (contract, onAction) => {\n      const handleChange = (silent: boolean) =>\n        onAction && onAction(ACTION_TYPE.CHANGE, silent);\n      return (\n        <SilentSwitch\n          bidType={contract.bidType}\n          onChange={handleChange}\n          value={contract.silent}\n        />\n      );\n    },\n  },\n  {\n    field: \"bidBaseScore\",\n    headerName: \"Base Score\",\n  },\n  {\n    headerName: \"Contra\",\n    field: \"contra\",\n    valueGetter: (contract, onAction) => {\n      const handleClick = (contra: number) =>\n        onAction && onAction(ACTION_TYPE.CHANGE, contra);\n      const handleDivide = () =>\n        contract.contra > 1 && handleClick(contract.contra / 2);\n      const handleDouble = () => handleClick(contract.contra * 2);\n\n      if (getBid(contract.bidType).denyContra) {\n        return null;\n      }\n      return (\n        <>\n          <T\n            component={contract.silent === true ? \"s\" : \"span\"}\n            color={contract.silent === true ? \"textPrimary\" : \"textSecondary\"}\n          >\n            {contract.contra}\n          </T>\n          <IconButton\n            title=\"Double\"\n            onClick={handleDouble}\n            disabled={contract.silent}\n          >\n            <DoubleContraIcon />\n          </IconButton>\n          <IconButton\n            title=\"Divide by 2\"\n            onClick={handleDivide}\n            disabled={contract.contra === 1 || contract.silent}\n          >\n            <DivideContraIcon />\n          </IconButton>\n        </>\n      );\n    },\n  },\n  {\n    field: \"winByTaker\",\n    headerName: \"Win by the Taker?\",\n    valueGetter: (contract, onAction) => {\n      const { winByTaker, taker } = contract;\n      const handleClick = () => {\n        const nextValue =\n          winByTaker === null ? true : winByTaker === true ? false : null;\n        onAction && onAction(ACTION_TYPE.CHANGE, nextValue);\n      };\n\n      const title =\n        winByTaker === true\n          ? \"Won by the Taker!\"\n          : winByTaker === false\n          ? \"Lose by the Taker!\"\n          : \"Still unknown / Not count in final score...\";\n\n      return (\n        <Checkbox\n          title={title}\n          checked={winByTaker === true}\n          indeterminate={winByTaker === null}\n          onClick={handleClick}\n          color={taker === PLAYER_TYPE.DECLARER ? \"primary\" : \"secondary\"}\n        />\n      );\n    },\n  },\n  {\n    field: \"takerScore\",\n    headerName: \"Taker score\",\n    valueGetter: (contract) => (\n      <T\n        variant=\"button\"\n        color={\n          contract.taker === PLAYER_TYPE.DECLARER ? \"primary\" : \"secondary\"\n        }\n      >\n        {calculateContract(contract)}\n      </T>\n    ),\n  },\n  {\n    field: \"actions\",\n    headerName: \" \",\n    valueGetter: (_, onAction) => {\n      const handleClick = () => onAction && onAction(ACTION_TYPE.DELETE, null);\n      return (\n        <IconButton title=\"Remove\" onClick={handleClick}>\n          <RemoveIcon />\n        </IconButton>\n      );\n    },\n  },\n];\n\nconst isContractField = (\n  field: Field,\n  contract: Contract\n): field is ContractField => {\n  return field in contract;\n};\n\ninterface ContractsTableProps {\n  contracts: Contract[];\n  onChange: (index: number, field: keyof Contract, value: any) => void;\n  onDelete: (index: number) => void;\n}\nconst ContractsTable = (props: ContractsTableProps) => {\n  const { contracts, onChange, onDelete } = props;\n\n  function handleAction(\n    index: number,\n    field: ContractField | null,\n    actionType: ACTION_TYPE,\n    value: any\n  ) {\n    if (actionType === ACTION_TYPE.DELETE) {\n      return onDelete(index);\n    }\n    if (actionType === ACTION_TYPE.CHANGE && field !== null) {\n      return onChange(index, field, value);\n    }\n    throw new Error(\n      `Invalid if ACTION_TYPE (${actionType}) is CHANGE the field can not be null.`\n    );\n  }\n\n  return (\n    <TableContainer>\n      <Table>\n        <TableHead>\n          <TableRow>\n            {columns.map((column, index) => (\n              <TableCell key={index}> {column.headerName} </TableCell>\n            ))}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {contracts.map((contract, rowIndex) => (\n            <TableRow key={rowIndex}>\n              {columns.map((column, cellIndex) => (\n                <TableCell key={cellIndex}>\n                  {isContractField(column.field, contract)\n                    ? column.valueGetter\n                      ? column.valueGetter(\n                          contract,\n                          curry(handleAction)(rowIndex)(column.field)\n                        )\n                      : contract[column.field]\n                    : column.valueGetter\n                    ? column.valueGetter(\n                        contract,\n                        curry(handleAction)(rowIndex)(null)\n                      )\n                    : \" \"}\n                </TableCell>\n              ))}\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default ContractsTable;\n","import React, { ChangeEvent, useState, ReactNode } from \"react\";\nimport {\n  FormControlLabel,\n  RadioGroup,\n  Radio,\n  Button,\n  Dialog,\n  DialogContent,\n  DialogActions,\n} from \"@material-ui/core\";\nimport { BidVariant } from \"../lib/bid\";\nimport { upperCaseToWords } from \"../lib/util\";\n\ninterface VariantSelectorProps {\n  render: (handleOpen: () => void) => ReactNode;\n  variants: BidVariant[];\n  selected: BidVariant | null;\n  onChange: (variant: BidVariant) => void;\n  onClose?: () => void;\n}\nconst VariantSelector = (props: VariantSelectorProps) => {\n  const { variants, selected, onChange, render, onClose } = props;\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => {\n    setOpen(false);\n    onClose && onClose();\n  };\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    onChange(event.target.value as BidVariant);\n    handleClose();\n  };\n\n  return (\n    <>\n      {render(handleOpen)}\n      <Dialog open={open} onClose={handleClose}>\n        <DialogContent>\n          <RadioGroup name=\"variants\" onChange={handleChange} value={selected}>\n            {variants.map((variant: BidVariant) => (\n              <FormControlLabel\n                control={<Radio value={variant} />}\n                label={upperCaseToWords(variant)}\n              />\n            ))}\n          </RadioGroup>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Cancel</Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nexport default VariantSelector;\n","import React from \"react\";\nimport { Switch, FormControlLabel, FormGroup } from \"@material-ui/core\";\nimport { BID_TYPE, canSilent, getBid } from \"../lib/bid\";\n\ninterface SilentSwitchProps {\n  bidType: BID_TYPE;\n  onChange: (value: boolean) => void;\n  value?: boolean;\n  label?: boolean;\n}\nconst SilentSwitch = ({\n  bidType,\n  onChange,\n  value,\n  label,\n}: SilentSwitchProps) => {\n  const bid = getBid(bidType);\n  if (!canSilent(bid)) {\n    return null;\n  }\n  return (\n    <FormGroup>\n      <FormControlLabel\n        control={\n          <Switch\n            onChange={(event) => onChange(event.target.checked)}\n            checked={value}\n          />\n        }\n        label={label ? \"Silent\" : \"\"}\n      />\n    </FormGroup>\n  );\n};\nexport default SilentSwitch;\n","import React, { ChangeEvent } from \"react\";\nimport {\n  CALLED_TAROCK,\n  Game,\n  UpdateGameProps,\n  PARTY_SCORE,\n  PARTY_SCORE_TYPE,\n} from \"../lib/game\";\nimport {\n  Grid,\n  FormControl,\n  Select,\n  MenuItem,\n  InputLabel,\n  FormLabel,\n  RadioGroup,\n  FormControlLabel,\n  Radio,\n} from \"@material-ui/core\";\nimport { upperCaseToWords } from \"../lib/util\";\n\nconst calledTarockOptions = [\"_None_\", ...Object.keys(CALLED_TAROCK)];\nconst partyScoreOptions = Object.keys(PARTY_SCORE);\n\ninterface GamePropertiesProps {\n  game: Game;\n  onChange: (property: keyof UpdateGameProps, value: any) => void;\n}\nconst GameProperties = (props: GamePropertiesProps) => {\n  const { game, onChange } = props;\n  return (\n    <Grid container spacing={3} alignContent=\"space-around\">\n      <Grid item>\n        <FormControl>\n          <InputLabel id=\"called-tarock-selector\">Called</InputLabel>\n          <Select\n            value={game.called_tarock || \"_None_\"}\n            onChange={(event: ChangeEvent<{ value: string }>) => {\n              onChange(\"called_tarock\", event.target.value);\n            }}\n            labelId=\"called-tarock-selector\"\n          >\n            {calledTarockOptions.map((option) => (\n              <MenuItem key={option} value={option}>\n                {option === \"_None_\" ? \"None\" : option}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </Grid>\n      <Grid item>\n        <FormControl component=\"fieldset\">\n          <FormLabel component=\"legend\">Party Score</FormLabel>\n          <RadioGroup\n            row\n            value={game.partyScoreType}\n            onChange={(event: ChangeEvent<HTMLInputElement>) => {\n              onChange(\n                \"partyScoreType\",\n                event.target.value as PARTY_SCORE_TYPE\n              );\n            }}\n          >\n            {partyScoreOptions.map((option: PARTY_SCORE_TYPE) => (\n              <FormControlLabel\n                key={option}\n                value={option}\n                control={<Radio />}\n                label={upperCaseToWords(option)}\n              />\n            ))}\n          </RadioGroup>\n        </FormControl>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default GameProperties;\n","import React from \"react\";\nimport { Game } from \"../lib/game\";\nimport { Grid, Chip, Typography as T } from \"@material-ui/core\";\nimport { PLAYER_TYPE } from \"../lib/player\";\n\ninterface GameScoreProps {\n  game: Game;\n}\nconst GameScore = ({ game }: GameScoreProps) => {\n  const {scores} = game;\n  return (\n    <Grid container direction=\"column\">\n      <Grid item container alignItems=\"center\" spacing={1}>\n        <Grid item>\n          <T color=\"primary\" display=\"inline\" variant=\"h6\">\n            Declarers:{\" \"}\n          </T>\n        </Grid>\n        <Grid item>\n          {scores[PLAYER_TYPE.DECLARER] !== null ? (\n            <Chip\n              color=\"primary\"\n              size=\"small\"\n              variant=\"outlined\"\n              label={scores[PLAYER_TYPE.DECLARER]}\n            />\n          ) : null}\n        </Grid>\n      </Grid>\n      <Grid item container alignItems=\"center\" spacing={1}>\n        <Grid item>\n          <T color=\"secondary\" display=\"inline\" variant=\"h6\">\n            Opponents:{\" \"}\n          </T>\n        </Grid>\n        <Grid item>\n          {scores[PLAYER_TYPE.OPPONENT] !== null ? (\n            <Chip\n              color=\"secondary\"\n              size=\"small\"\n              variant=\"outlined\"\n              label={scores[PLAYER_TYPE.OPPONENT]}\n            />\n          ) : null}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default GameScore;\n","import {\n  Button,\n  Chip,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  TextField,\n  Grid,\n} from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport { Game } from \"../lib/game\";\nimport {\n  createPlayerList,\n  getPlayerTypeColor,\n  Player,\n  PLAYER_TYPE,\n  rotatePlayerTypeWithNull,\n} from \"../lib/player\";\n\ninterface PlayerItemProps {\n  player: Player;\n  playerType: PLAYER_TYPE | null;\n  onRemove: (player: Player) => void;\n  onChange: (player: Player, playerType: PLAYER_TYPE | null) => void;\n}\nconst PlayerItem = (props: PlayerItemProps) => {\n  const { player, playerType, onRemove, onChange } = props;\n  const handleRemove = () => onRemove(player);\n  const handleChange = () =>\n    onChange(player, rotatePlayerTypeWithNull(playerType));\n  const color = getPlayerTypeColor(playerType);\n  return (\n    <>\n      <Chip\n        color={color}\n        label={player}\n        variant=\"default\"\n        onDelete={handleRemove}\n        onClick={handleChange}\n      />\n    </>\n  );\n};\n\ninterface AddPlayerDialogProps {\n  open: boolean;\n  onAdd: (player: Player) => void;\n  onClose: () => void;\n}\nconst AddPlayerDialog = ({ open, onAdd, onClose }: AddPlayerDialogProps) => {\n  const [player, setPlayer] = useState(\"\");\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setPlayer(event.target.value);\n  };\n  const handleClose = () => {\n    setPlayer(\"\");\n    onClose();\n  };\n  const handleAdd = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault()\n    onAdd(player);\n    setPlayer(\"\");\n  };\n\n  return (\n    <Dialog open={open} onClose={handleClose}>\n      <DialogTitle>Add Player</DialogTitle>\n      <DialogContent>\n        <form onSubmit={handleAdd} >\n        <TextField\n          autoFocus\n          margin=\"dense\"\n          label=\"Player Name\"\n          value={player}\n          onChange={handleChange}\n        />\n        </form>\n      </DialogContent>\n    </Dialog>\n  );\n};\n\ninterface PlayersProps {\n  players: Player[];\n  game: Game;\n  onPlayerAdd: (player: Player) => void;\n  onPlayerRemove: (player: Player) => void;\n  onPlayerChange: (player: Player, playerType: PLAYER_TYPE | null) => void;\n}\nconst Players = (props: PlayersProps) => {\n  const { players, onPlayerAdd, onPlayerChange, onPlayerRemove, game } = props;\n  const [open, setOpen] = useState<boolean>(false);\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const handleOpen = () => setOpen(true);\n  const handlePlayerAdd = (player: Player) => {\n    setOpen(false);\n    onPlayerAdd(player);\n  };\n  const playerList = createPlayerList(players, game.declarers, game.opponents);\n  return (\n    <Grid container spacing={3}>\n      <AddPlayerDialog\n        open={open}\n        onAdd={handlePlayerAdd}\n        onClose={handleClose}\n      />\n      <Grid item>\n        <Button variant=\"contained\" onClick={handleOpen}>\n          Add Player\n        </Button>\n      </Grid>\n      <Grid item>\n        {playerList.map(({ player, playerType }) => (\n          <PlayerItem\n            key={player}\n            onChange={onPlayerChange}\n            onRemove={onPlayerRemove}\n            player={player}\n            playerType={playerType}\n          />\n        ))}\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Players;\n","import { Game } from \"./game\";\nimport { Player, PlayerScore, PLAYER_TYPE } from \"./player\";\nimport fromPairs from \"lodash/fp/fromPairs\";\nimport assignWith from \"lodash/assignWith\";\nimport mapValues from \"lodash/fp/mapValues\";\n\nexport type GameScorePerPlayer = { [keyof: string]: PlayerScore };\nexport const getPlayersScores = (game: Game): GameScorePerPlayer => {\n  const opponents = game.opponents.map((p) => [\n    p,\n    game.scores[PLAYER_TYPE.OPPONENT] || null,\n  ]);\n  const declarers = game.declarers.map((p) => [\n    p,\n    game.scores[PLAYER_TYPE.DECLARER] || null,\n  ]);\n  return {\n    ...fromPairs(opponents),\n    ...fromPairs(declarers),\n  };\n};\n\nconst defined = (value: any): boolean => value !== undefined && value !== null;\n\nconst scoreAssigner = (\n  value1: number | undefined | null,\n  value2: number | undefined | null\n): number => {\n  value1 = defined(value1) ? value1 : 0;\n  value2 = defined(value2) ? value2 : 0;\n\n  return (value1 as number) + (value2 as number);\n};\n\nconst baseScoreAdder = (baseScore: number) => (score: number | null) => {\n  score = defined(score) ? score : 0;\n  return (score as number) + baseScore;\n};\n\nexport const addBaseScore = (baseScore: number) => (\n  sumPlayersScore: GameScorePerPlayer\n): GameScorePerPlayer => mapValues(baseScoreAdder(baseScore))(sumPlayersScore);\n\nexport const sumPlayerScores = (\n  gameScoreList: GameScorePerPlayer[]\n): GameScorePerPlayer => assignWith({}, ...gameScoreList, scoreAssigner);\n\nexport const getAllPlayers = (\n  gameScoreList: GameScorePerPlayer[]\n): Player[] => {\n  const players = gameScoreList.reduce((players, gameScorePerPlayer) => {\n    Object.keys(gameScorePerPlayer).forEach((p) => players.add(p));\n    return players;\n  }, new Set<Player>());\n  return [...players.values()];\n};\n","import {\n  TableContainer,\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n} from \"@material-ui/core\";\nimport React from \"react\";\nimport {\n  addBaseScore,\n  GameScorePerPlayer,\n  getAllPlayers,\n  sumPlayerScores,\n} from \"../lib/gameList\";\nimport sortBy from \"lodash/sortBy\";\n\nconst BASE_SCORE = 100;\n\ninterface ScoreSheetProps {\n  gameScoreList: GameScorePerPlayer[];\n}\nconst ScoreSheet = ({ gameScoreList }: ScoreSheetProps) => {\n  const players = sortBy(getAllPlayers(gameScoreList));\n  const sum = addBaseScore(BASE_SCORE)(sumPlayerScores(gameScoreList));\n\n  return (\n    <TableContainer>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>Game</TableCell>\n            {players.map((player) => (\n              <TableCell key={player}>{`${player} (${\n                sum[player] === undefined ? \"\" : sum[player]\n              })`}</TableCell>\n            ))}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {gameScoreList.map((scores, index) => (\n            <TableRow key={index}>\n              <TableCell>{index + 1}</TableCell>\n              {players.map((player) => (\n                <TableCell key={player}>\n                  {scores[player] === undefined ? \" \" : scores[player]}\n                </TableCell>\n              ))}\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default ScoreSheet;\n","import React, { useState } from \"react\";\nimport { BID_TYPE, getAllBidsByGorup } from \"../lib/bid\";\nimport ContractSelector from \"./ContractSelector\";\nimport {\n  Game,\n  createGame,\n  addContract,\n  updateGame,\n  updateGameContract,\n  removeContract,\n  removePlayer,\n  addPlayer,\n  UpdateGameProps,\n  removeAllContract,\n  isPartyLike,\n  addContractFlipped,\n} from \"../lib/game\";\nimport { Contract, createContract, updateContract } from \"../lib/contract\";\nimport { Button, Grid } from \"@material-ui/core\";\nimport ContractsTable from \"./ContractsTable\";\nimport GameProperties from \"./GameProperties\";\nimport flow from \"lodash/fp/flow\";\nimport uniq from \"lodash/fp/uniq\";\nimport GameScore from \"./GameScore\";\nimport Players from \"./Players\";\nimport { Player, PLAYER_TYPE } from \"../lib/player\";\nimport { GameScorePerPlayer, getPlayersScores } from \"../lib/gameList\";\nimport ScoreSheet from \"./ScoreSheet\";\n\nconst allBidsByGroup = getAllBidsByGorup();\n\nconst TarockSheet = () => {\n  const [game, setGame] = useState<Game>(createGame());\n  const [players, setPlayers] = useState<Player[]>([]);\n  const [gameScoreList, setGameScoreList] = useState<GameScorePerPlayer[]>([]);\n\n  const handleContractDelete = (index: number) =>\n    setGame(removeContract(game)(index));\n  const handleResetGame = () => setGame(createGame());\n  const handleAddPlayer = (player: Player) =>\n    setPlayers((prev) => uniq([...prev, player]));\n  const handleRemovePlayer = (player: Player) =>\n    setPlayers((prev) => prev.filter((p) => p !== player));\n  const handleChangePlayer = (\n    player: Player,\n    playerType: PLAYER_TYPE | null\n  ) => {\n    if (playerType === null) {\n      setGame(removePlayer(player)(game));\n    } else {\n      setGame(addPlayer(player, playerType)(game));\n    }\n  };\n  const handleChangeGameProperties = (\n    prop: keyof UpdateGameProps,\n    value: any\n  ) => {\n    if (prop === \"partyScoreType\") {\n      const contract = isPartyLike(value)\n        ? createContract({\n            bidType: BID_TYPE.PARTY,\n            taker: PLAYER_TYPE.DECLARER,\n          })\n        : createContract({\n            bidType: BID_TYPE.KLOPICZKY,\n            taker: PLAYER_TYPE.DECLARER,\n            winByTaker: true,\n          });\n      const updated = flow(\n        removeAllContract,\n        addContractFlipped(contract),\n        updateGame({ [prop]: value })\n      )(game);\n      setGame(updated);\n    } else {\n      setGame(updateGame({ [prop]: value })(game));\n    }\n  };\n  const handleAddContract = (contract: Contract) => {\n    return setGame(flow(createContract, addContract(game))(contract));\n  };\n  const handleChangeContract = (\n    index: number,\n    field: keyof Contract,\n    value: any\n  ) => {\n    setGame(\n      flow(\n        updateContract({ [field]: value }),\n        updateGameContract(game)(index)\n      )(game.contracts[index])\n    );\n  };\n  const handleSaveGame = () => {\n    setGameScoreList([...gameScoreList, getPlayersScores(game)]);\n    setGame(createGame());\n  };\n\n  return (\n    <Grid container spacing={3} direction=\"column\">\n      <Grid item>\n        <Grid item container spacing={1} direction=\"row\">\n          <Grid item>\n            <Button variant=\"contained\" onClick={handleResetGame}>\n              Reset Game\n            </Button>\n          </Grid>\n          <Grid item>\n            <GameProperties game={game} onChange={handleChangeGameProperties} />\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid item>\n        <Players\n          players={players}\n          game={game}\n          onPlayerAdd={handleAddPlayer}\n          onPlayerRemove={handleRemovePlayer}\n          onPlayerChange={handleChangePlayer}\n        />\n      </Grid>\n      <Grid item container>\n        <Grid item>\n          <GameScore game={game} />\n        </Grid>\n        <Grid item>\n          <Button variant=\"contained\" onClick={handleSaveGame}>\n            Save Scores\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid item>\n        <ContractSelector\n          bidsByGroup={allBidsByGroup}\n          onAddContract={handleAddContract}\n        />\n      </Grid>\n      <Grid item>\n        <ContractsTable\n          contracts={game?.contracts as Contract[]}\n          onChange={handleChangeContract}\n          onDelete={handleContractDelete}\n        />\n      </Grid>\n      <Grid item>\n        <ScoreSheet gameScoreList={gameScoreList} />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default TarockSheet;\n","import React from \"react\";\nimport { AppBar, Container, makeStyles, Paper, Typography as T } from \"@material-ui/core\";\nimport { CgCardHearts as Icon } from \"react-icons/cg\";\nimport TarockSheet from \"./components/TarockSheet\";\n\nconst useAppStyle = makeStyles((theme) => ({\n  container: {\n    padding: theme.spacing(4)\n  }\n}))\n\nfunction App() {\n  const classes = useAppStyle()\n  \n  return (\n    <>\n      <AppBar position=\"static\">\n        <T variant=\"h2\"><Icon color=\"red\" /> Tarock Sheet</T>\n      </AppBar>\n      <Container className={classes.container}>\n        <TarockSheet />\n      </Container>\n    </>\n  );\n}\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}